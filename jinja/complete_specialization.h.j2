{# Copyright Â© 2017 Martin Ueding <dev@martin-ueding.de> #}

// {{ generated_warning }}

{% macro include_generated_kernel(isa, kernel, operator, fptype, vec, soa, compress12) %}

{% if compress12 == '' %}
{% set suffix = '' %}
{% else %}
{% set suffix = '_12' if compress12 == 'true' else '_18' %}
{% endif %}

{% set filename = 'qphix/%s/generated/%s_%s_%s_%s_v%d_s%d%s'|format(isa, kernel, operator, fptype, fptype, vec, soa, suffix) %}
#include "{{ filename }}"
{% endmacro %}

{#
The following ex command can be used in Vim to replace all the C++ preprocessor
includes with the Jinja2 include.

%s#\v\#include INCLUDE_FILE_VAR\(qphix/avx2/generated/(.+),FPTYPE,VEC,SOA,COMPRESS_SUFFIX\)#// clang-format off{{ include_generated_kernel(ISA, "\1", FPTYPE, VEC, SOA, COMPRESS12) }}// clang-format on#
#}

#pragma once

#include "immintrin.h"
#include "qphix/geometry.h"

{% for extra_include in extra_includes_local %}
#include "{{ extra_include }}"
{% endfor %}

{% for extra_include in extra_includes_global %}
#include <{{ extra_include }}>
{% endfor %}

{% if ISA == 'scalar' %}
/* Disgusting hack to get rid of _mm_prefetches left in the generated scalar code */
#define _mm_prefetch(a,b) {}
{% endif %}

{% include 'jinja/%s_general.h.j2'|format(kernel_base) %}

{% for FPTYPE, VEC, soalens in defines %}
{% set kernel = kernel_pattern|format(fptype_underscore=FPTYPE+'_') %}
{% for SOA in soalens %}
{% for COMPRESS12 in ['true', 'false'] %}
#define FPTYPE {{ FPTYPE }}
#define VEC {{ VEC }}
#define SOA {{ SOA }}
#define COMPRESS12 {{ COMPRESS12 }}
{% include 'jinja/%s_specialization.h.j2'|format(kernel_base) %}
#undef FPTYPE
#undef VEC
#undef SOA
#undef COMPRESS12
{% endfor %}
{% endfor %}
{% endfor %}

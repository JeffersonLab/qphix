__m512d b_S0_C0_RE = _mm512_setzero_pd(); 
__m512d b_S0_C0_IM = _mm512_setzero_pd(); 
__m512d b_S0_C1_RE = _mm512_setzero_pd(); 
__m512d b_S0_C1_IM = _mm512_setzero_pd(); 
__m512d b_S0_C2_RE = _mm512_setzero_pd(); 
__m512d b_S0_C2_IM = _mm512_setzero_pd(); 
__m512d b_S1_C0_RE = _mm512_setzero_pd(); 
__m512d b_S1_C0_IM = _mm512_setzero_pd(); 
__m512d b_S1_C1_RE = _mm512_setzero_pd(); 
__m512d b_S1_C1_IM = _mm512_setzero_pd(); 
__m512d b_S1_C2_RE = _mm512_setzero_pd(); 
__m512d b_S1_C2_IM = _mm512_setzero_pd(); 
__m512d ub_S0_C0_RE = _mm512_setzero_pd(); 
__m512d ub_S0_C0_IM = _mm512_setzero_pd(); 
__m512d ub_S0_C1_RE = _mm512_setzero_pd(); 
__m512d ub_S0_C1_IM = _mm512_setzero_pd(); 
__m512d ub_S0_C2_RE = _mm512_setzero_pd(); 
__m512d ub_S0_C2_IM = _mm512_setzero_pd(); 
__m512d ub_S1_C0_RE = _mm512_setzero_pd(); 
__m512d ub_S1_C0_IM = _mm512_setzero_pd(); 
__m512d ub_S1_C1_RE = _mm512_setzero_pd(); 
__m512d ub_S1_C1_IM = _mm512_setzero_pd(); 
__m512d ub_S1_C2_RE = _mm512_setzero_pd(); 
__m512d ub_S1_C2_IM = _mm512_setzero_pd(); 
__m512d out_S0_C0_RE = _mm512_setzero_pd(); 
__m512d out_S0_C0_IM = _mm512_setzero_pd(); 
__m512d out_S0_C1_RE = _mm512_setzero_pd(); 
__m512d out_S0_C1_IM = _mm512_setzero_pd(); 
__m512d out_S0_C2_RE = _mm512_setzero_pd(); 
__m512d out_S0_C2_IM = _mm512_setzero_pd(); 
__m512d out_S1_C0_RE = _mm512_setzero_pd(); 
__m512d out_S1_C0_IM = _mm512_setzero_pd(); 
__m512d out_S1_C1_RE = _mm512_setzero_pd(); 
__m512d out_S1_C1_IM = _mm512_setzero_pd(); 
__m512d out_S1_C2_RE = _mm512_setzero_pd(); 
__m512d out_S1_C2_IM = _mm512_setzero_pd(); 
__m512d out_S2_C0_RE = _mm512_setzero_pd(); 
__m512d out_S2_C0_IM = _mm512_setzero_pd(); 
__m512d out_S2_C1_RE = _mm512_setzero_pd(); 
__m512d out_S2_C1_IM = _mm512_setzero_pd(); 
__m512d out_S2_C2_RE = _mm512_setzero_pd(); 
__m512d out_S2_C2_IM = _mm512_setzero_pd(); 
__m512d out_S3_C0_RE = _mm512_setzero_pd(); 
__m512d out_S3_C0_IM = _mm512_setzero_pd(); 
__m512d out_S3_C1_RE = _mm512_setzero_pd(); 
__m512d out_S3_C1_IM = _mm512_setzero_pd(); 
__m512d out_S3_C2_RE = _mm512_setzero_pd(); 
__m512d out_S3_C2_IM = _mm512_setzero_pd(); 
__m512d u_00_re = _mm512_setzero_pd(); 
__m512d u_00_im = _mm512_setzero_pd(); 
__m512d u_01_re = _mm512_setzero_pd(); 
__m512d u_01_im = _mm512_setzero_pd(); 
__m512d u_02_re = _mm512_setzero_pd(); 
__m512d u_02_im = _mm512_setzero_pd(); 
__m512d u_10_re = _mm512_setzero_pd(); 
__m512d u_10_im = _mm512_setzero_pd(); 
__m512d u_11_re = _mm512_setzero_pd(); 
__m512d u_11_im = _mm512_setzero_pd(); 
__m512d u_12_re = _mm512_setzero_pd(); 
__m512d u_12_im = _mm512_setzero_pd(); 
__m512d u_20_re = _mm512_setzero_pd(); 
__m512d u_20_im = _mm512_setzero_pd(); 
__m512d u_21_re = _mm512_setzero_pd(); 
__m512d u_21_im = _mm512_setzero_pd(); 
__m512d u_22_re = _mm512_setzero_pd(); 
__m512d u_22_im = _mm512_setzero_pd(); 
__m512d psi_S0_RE = _mm512_setzero_pd(); 
__m512d psi_S0_IM = _mm512_setzero_pd(); 
__m512d psi_S1_RE = _mm512_setzero_pd(); 
__m512d psi_S1_IM = _mm512_setzero_pd(); 
__m512d tmp_1_re = _mm512_setzero_pd(); 
__m512d tmp_1_im = _mm512_setzero_pd(); 
__m512d tmp_2_re = _mm512_setzero_pd(); 
__m512d tmp_2_im = _mm512_setzero_pd(); 
__m512d tmp_3_re = _mm512_setzero_pd(); 
__m512d tmp_3_im = _mm512_setzero_pd(); 
__m512d tmp_4_re = _mm512_setzero_pd(); 
__m512d tmp_4_im = _mm512_setzero_pd(); 
__m512d zero = _mm512_setzero_pd(); 
 _mm_prefetch((const char *)( (((inbuf) + hsprefdist)+0) ), _MM_HINT_T1);

zero = _mm512_setzero_pd(); 
__mmask8 accMask;

accMask = mask;

__m512d beta_vec = _mm512_setzero_pd(); 
beta_vec = _mm512_set1_pd(*(&beta));

 _mm_prefetch((const char *)( ((inbuf)+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((inbuf)+8) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+0) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((inbuf) + hsprefdist)+8) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+0) + offs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+8) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+8) + offs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+16) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+16) + offs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+24) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+24) + offs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+32) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+0) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+32) + offs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+40) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+40) + offs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+48) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+48) + offs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+56) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+56) + offs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+64) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+8) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+64) + offs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+72) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+72) + offs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+80) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+80) + offs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+88) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+88) + offs[4]) ), _MM_HINT_T0);

out_S0_C0_RE = _mm512_undefined_pd(); 
 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+16) ), _MM_HINT_T1);

out_S0_C0_RE = _mm512_mask_expandloadu_pd(out_S0_C0_RE, 0xf, ((*oBase)[0][0][0] + offs[0]));

out_S0_C0_RE = _mm512_mask_expandloadu_pd(out_S0_C0_RE, 0xf0, ((*oBase)[0][0][0] + offs[4]));

out_S0_C0_IM = _mm512_undefined_pd(); 
out_S0_C0_IM = _mm512_mask_expandloadu_pd(out_S0_C0_IM, 0xf, ((*oBase)[0][0][1] + offs[0]));

out_S0_C0_IM = _mm512_mask_expandloadu_pd(out_S0_C0_IM, 0xf0, ((*oBase)[0][0][1] + offs[4]));

out_S1_C0_RE = _mm512_undefined_pd(); 
out_S1_C0_RE = _mm512_mask_expandloadu_pd(out_S1_C0_RE, 0xf, ((*oBase)[0][1][0] + offs[0]));

out_S1_C0_RE = _mm512_mask_expandloadu_pd(out_S1_C0_RE, 0xf0, ((*oBase)[0][1][0] + offs[4]));

 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+24) ), _MM_HINT_T1);

out_S1_C0_IM = _mm512_undefined_pd(); 
out_S1_C0_IM = _mm512_mask_expandloadu_pd(out_S1_C0_IM, 0xf, ((*oBase)[0][1][1] + offs[0]));

out_S1_C0_IM = _mm512_mask_expandloadu_pd(out_S1_C0_IM, 0xf0, ((*oBase)[0][1][1] + offs[4]));

out_S2_C0_RE = _mm512_undefined_pd(); 
out_S2_C0_RE = _mm512_mask_expandloadu_pd(out_S2_C0_RE, 0xf, ((*oBase)[0][2][0] + offs[0]));

out_S2_C0_RE = _mm512_mask_expandloadu_pd(out_S2_C0_RE, 0xf0, ((*oBase)[0][2][0] + offs[4]));

out_S2_C0_IM = _mm512_undefined_pd(); 
out_S2_C0_IM = _mm512_mask_expandloadu_pd(out_S2_C0_IM, 0xf, ((*oBase)[0][2][1] + offs[0]));

 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+32) ), _MM_HINT_T1);

out_S2_C0_IM = _mm512_mask_expandloadu_pd(out_S2_C0_IM, 0xf0, ((*oBase)[0][2][1] + offs[4]));

out_S3_C0_RE = _mm512_undefined_pd(); 
out_S3_C0_RE = _mm512_mask_expandloadu_pd(out_S3_C0_RE, 0xf, ((*oBase)[0][3][0] + offs[0]));

out_S3_C0_RE = _mm512_mask_expandloadu_pd(out_S3_C0_RE, 0xf0, ((*oBase)[0][3][0] + offs[4]));

out_S3_C0_IM = _mm512_undefined_pd(); 
out_S3_C0_IM = _mm512_mask_expandloadu_pd(out_S3_C0_IM, 0xf, ((*oBase)[0][3][1] + offs[0]));

out_S3_C0_IM = _mm512_mask_expandloadu_pd(out_S3_C0_IM, 0xf0, ((*oBase)[0][3][1] + offs[4]));

out_S0_C1_RE = _mm512_undefined_pd(); 
 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+40) ), _MM_HINT_T1);

out_S0_C1_RE = _mm512_mask_expandloadu_pd(out_S0_C1_RE, 0xf, ((*oBase)[1][0][0] + offs[0]));

out_S0_C1_RE = _mm512_mask_expandloadu_pd(out_S0_C1_RE, 0xf0, ((*oBase)[1][0][0] + offs[4]));

out_S0_C1_IM = _mm512_undefined_pd(); 
out_S0_C1_IM = _mm512_mask_expandloadu_pd(out_S0_C1_IM, 0xf, ((*oBase)[1][0][1] + offs[0]));

out_S0_C1_IM = _mm512_mask_expandloadu_pd(out_S0_C1_IM, 0xf0, ((*oBase)[1][0][1] + offs[4]));

out_S1_C1_RE = _mm512_undefined_pd(); 
out_S1_C1_RE = _mm512_mask_expandloadu_pd(out_S1_C1_RE, 0xf, ((*oBase)[1][1][0] + offs[0]));

out_S1_C1_RE = _mm512_mask_expandloadu_pd(out_S1_C1_RE, 0xf0, ((*oBase)[1][1][0] + offs[4]));

 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+48) ), _MM_HINT_T1);

out_S1_C1_IM = _mm512_undefined_pd(); 
out_S1_C1_IM = _mm512_mask_expandloadu_pd(out_S1_C1_IM, 0xf, ((*oBase)[1][1][1] + offs[0]));

out_S1_C1_IM = _mm512_mask_expandloadu_pd(out_S1_C1_IM, 0xf0, ((*oBase)[1][1][1] + offs[4]));

out_S2_C1_RE = _mm512_undefined_pd(); 
out_S2_C1_RE = _mm512_mask_expandloadu_pd(out_S2_C1_RE, 0xf, ((*oBase)[1][2][0] + offs[0]));

out_S2_C1_RE = _mm512_mask_expandloadu_pd(out_S2_C1_RE, 0xf0, ((*oBase)[1][2][0] + offs[4]));

out_S2_C1_IM = _mm512_undefined_pd(); 
out_S2_C1_IM = _mm512_mask_expandloadu_pd(out_S2_C1_IM, 0xf, ((*oBase)[1][2][1] + offs[0]));

 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+56) ), _MM_HINT_T1);

out_S2_C1_IM = _mm512_mask_expandloadu_pd(out_S2_C1_IM, 0xf0, ((*oBase)[1][2][1] + offs[4]));

out_S3_C1_RE = _mm512_undefined_pd(); 
out_S3_C1_RE = _mm512_mask_expandloadu_pd(out_S3_C1_RE, 0xf, ((*oBase)[1][3][0] + offs[0]));

out_S3_C1_RE = _mm512_mask_expandloadu_pd(out_S3_C1_RE, 0xf0, ((*oBase)[1][3][0] + offs[4]));

out_S3_C1_IM = _mm512_undefined_pd(); 
out_S3_C1_IM = _mm512_mask_expandloadu_pd(out_S3_C1_IM, 0xf, ((*oBase)[1][3][1] + offs[0]));

out_S3_C1_IM = _mm512_mask_expandloadu_pd(out_S3_C1_IM, 0xf0, ((*oBase)[1][3][1] + offs[4]));

out_S0_C2_RE = _mm512_undefined_pd(); 
 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+64) ), _MM_HINT_T1);

out_S0_C2_RE = _mm512_mask_expandloadu_pd(out_S0_C2_RE, 0xf, ((*oBase)[2][0][0] + offs[0]));

out_S0_C2_RE = _mm512_mask_expandloadu_pd(out_S0_C2_RE, 0xf0, ((*oBase)[2][0][0] + offs[4]));

out_S0_C2_IM = _mm512_undefined_pd(); 
out_S0_C2_IM = _mm512_mask_expandloadu_pd(out_S0_C2_IM, 0xf, ((*oBase)[2][0][1] + offs[0]));

out_S0_C2_IM = _mm512_mask_expandloadu_pd(out_S0_C2_IM, 0xf0, ((*oBase)[2][0][1] + offs[4]));

out_S1_C2_RE = _mm512_undefined_pd(); 
out_S1_C2_RE = _mm512_mask_expandloadu_pd(out_S1_C2_RE, 0xf, ((*oBase)[2][1][0] + offs[0]));

out_S1_C2_RE = _mm512_mask_expandloadu_pd(out_S1_C2_RE, 0xf0, ((*oBase)[2][1][0] + offs[4]));

 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+72) ), _MM_HINT_T1);

out_S1_C2_IM = _mm512_undefined_pd(); 
out_S1_C2_IM = _mm512_mask_expandloadu_pd(out_S1_C2_IM, 0xf, ((*oBase)[2][1][1] + offs[0]));

out_S1_C2_IM = _mm512_mask_expandloadu_pd(out_S1_C2_IM, 0xf0, ((*oBase)[2][1][1] + offs[4]));

out_S2_C2_RE = _mm512_undefined_pd(); 
out_S2_C2_RE = _mm512_mask_expandloadu_pd(out_S2_C2_RE, 0xf, ((*oBase)[2][2][0] + offs[0]));

out_S2_C2_RE = _mm512_mask_expandloadu_pd(out_S2_C2_RE, 0xf0, ((*oBase)[2][2][0] + offs[4]));

out_S2_C2_IM = _mm512_undefined_pd(); 
out_S2_C2_IM = _mm512_mask_expandloadu_pd(out_S2_C2_IM, 0xf, ((*oBase)[2][2][1] + offs[0]));

 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+80) ), _MM_HINT_T1);

out_S2_C2_IM = _mm512_mask_expandloadu_pd(out_S2_C2_IM, 0xf0, ((*oBase)[2][2][1] + offs[4]));

out_S3_C2_RE = _mm512_undefined_pd(); 
out_S3_C2_RE = _mm512_mask_expandloadu_pd(out_S3_C2_RE, 0xf, ((*oBase)[2][3][0] + offs[0]));

out_S3_C2_RE = _mm512_mask_expandloadu_pd(out_S3_C2_RE, 0xf0, ((*oBase)[2][3][0] + offs[4]));

out_S3_C2_IM = _mm512_undefined_pd(); 
out_S3_C2_IM = _mm512_mask_expandloadu_pd(out_S3_C2_IM, 0xf, ((*oBase)[2][3][1] + offs[0]));

out_S3_C2_IM = _mm512_mask_expandloadu_pd(out_S3_C2_IM, 0xf0, ((*oBase)[2][3][1] + offs[4]));

b_S0_C0_RE = _mm512_mask_expandloadu_pd(b_S0_C0_RE, mask, ((inbuf)+0));

 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+88) ), _MM_HINT_T1);

b_S0_C0_IM = _mm512_mask_expandloadu_pd(b_S0_C0_IM, mask, ((inbuf)+1));

b_S0_C1_RE = _mm512_mask_expandloadu_pd(b_S0_C1_RE, mask, ((inbuf)+2));

b_S0_C1_IM = _mm512_mask_expandloadu_pd(b_S0_C1_IM, mask, ((inbuf)+3));

b_S0_C2_RE = _mm512_mask_expandloadu_pd(b_S0_C2_RE, mask, ((inbuf)+4));

b_S0_C2_IM = _mm512_mask_expandloadu_pd(b_S0_C2_IM, mask, ((inbuf)+5));

b_S1_C0_RE = _mm512_mask_expandloadu_pd(b_S1_C0_RE, mask, ((inbuf)+6));

b_S1_C0_IM = _mm512_mask_expandloadu_pd(b_S1_C0_IM, mask, ((inbuf)+7));

b_S1_C1_RE = _mm512_mask_expandloadu_pd(b_S1_C1_RE, mask, ((inbuf)+8));

 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+0) + offs[0]) ), _MM_HINT_T1);

b_S1_C1_IM = _mm512_mask_expandloadu_pd(b_S1_C1_IM, mask, ((inbuf)+9));

b_S1_C2_RE = _mm512_mask_expandloadu_pd(b_S1_C2_RE, mask, ((inbuf)+10));

b_S1_C2_IM = _mm512_mask_expandloadu_pd(b_S1_C2_IM, mask, ((inbuf)+11));

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+8) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+16) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+24) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+0) + offs[4]) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+40) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+48) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+56) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+72) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+80) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+88) ), _MM_HINT_T0);

u_00_re = _mm512_mask_load_pd(u_00_re, 0xFF, (*gBase)[0][0][0][0]);

 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+8) + offs[0]) ), _MM_HINT_T1);

u_00_im = _mm512_mask_load_pd(u_00_im, 0xFF, (*gBase)[0][0][0][1]);

u_01_re = _mm512_mask_load_pd(u_01_re, 0xFF, (*gBase)[0][0][1][0]);

u_01_im = _mm512_mask_load_pd(u_01_im, 0xFF, (*gBase)[0][0][1][1]);

u_02_re = _mm512_mask_load_pd(u_02_re, 0xFF, (*gBase)[0][0][2][0]);

u_02_im = _mm512_mask_load_pd(u_02_im, 0xFF, (*gBase)[0][0][2][1]);

u_10_re = _mm512_mask_load_pd(u_10_re, 0xFF, (*gBase)[0][1][0][0]);

u_10_im = _mm512_mask_load_pd(u_10_im, 0xFF, (*gBase)[0][1][0][1]);

u_11_re = _mm512_mask_load_pd(u_11_re, 0xFF, (*gBase)[0][1][1][0]);

 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+8) + offs[4]) ), _MM_HINT_T1);

u_11_im = _mm512_mask_load_pd(u_11_im, 0xFF, (*gBase)[0][1][1][1]);

u_12_re = _mm512_mask_load_pd(u_12_re, 0xFF, (*gBase)[0][1][2][0]);

u_12_im = _mm512_mask_load_pd(u_12_im, 0xFF, (*gBase)[0][1][2][1]);

u_20_re = _mm512_mul_pd( u_01_re , u_12_re );
u_20_re = _mm512_fnmadd_pd(u_01_im, u_12_im, u_20_re);
u_20_re = _mm512_fnmadd_pd(u_02_re, u_11_re, u_20_re);
u_20_re = _mm512_fmadd_pd(u_02_im, u_11_im, u_20_re);
u_20_im = _mm512_mul_pd( u_02_re , u_11_im );
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+16) + offs[0]) ), _MM_HINT_T1);

u_20_im = _mm512_fmadd_pd(u_02_im, u_11_re, u_20_im);
u_20_im = _mm512_fnmadd_pd(u_01_re, u_12_im, u_20_im);
u_20_im = _mm512_fnmadd_pd(u_01_im, u_12_re, u_20_im);
u_21_re = _mm512_mul_pd( u_02_re , u_10_re );
u_21_re = _mm512_fnmadd_pd(u_02_im, u_10_im, u_21_re);
u_21_re = _mm512_fnmadd_pd(u_00_re, u_12_re, u_21_re);
u_21_re = _mm512_fmadd_pd(u_00_im, u_12_im, u_21_re);
u_21_im = _mm512_mul_pd( u_00_re , u_12_im );
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+16) + offs[4]) ), _MM_HINT_T1);

u_21_im = _mm512_fmadd_pd(u_00_im, u_12_re, u_21_im);
u_21_im = _mm512_fnmadd_pd(u_02_re, u_10_im, u_21_im);
u_21_im = _mm512_fnmadd_pd(u_02_im, u_10_re, u_21_im);
u_22_re = _mm512_mul_pd( u_00_re , u_11_re );
u_22_re = _mm512_fnmadd_pd(u_00_im, u_11_im, u_22_re);
u_22_re = _mm512_fnmadd_pd(u_01_re, u_10_re, u_22_re);
u_22_re = _mm512_fmadd_pd(u_01_im, u_10_im, u_22_re);
u_22_im = _mm512_mul_pd( u_01_re , u_10_im );
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+24) + offs[0]) ), _MM_HINT_T1);

u_22_im = _mm512_fmadd_pd(u_01_im, u_10_re, u_22_im);
u_22_im = _mm512_fnmadd_pd(u_00_re, u_11_im, u_22_im);
u_22_im = _mm512_fnmadd_pd(u_00_im, u_11_re, u_22_im);
ub_S0_C0_RE = _mm512_mul_pd( u_00_re , b_S0_C0_RE );
ub_S0_C0_RE = _mm512_fmadd_pd(u_00_im, b_S0_C0_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_mul_pd( u_00_re , b_S0_C0_IM );
ub_S0_C0_IM = _mm512_fnmadd_pd(u_00_im, b_S0_C0_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_pd(u_01_re, b_S0_C1_RE, ub_S0_C0_RE);
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+24) + offs[4]) ), _MM_HINT_T1);

ub_S0_C0_RE = _mm512_fmadd_pd(u_01_im, b_S0_C1_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_pd(u_01_re, b_S0_C1_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fnmadd_pd(u_01_im, b_S0_C1_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_pd(u_02_re, b_S0_C2_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fmadd_pd(u_02_im, b_S0_C2_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_pd(u_02_re, b_S0_C2_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fnmadd_pd(u_02_im, b_S0_C2_RE, ub_S0_C0_IM);
ub_S0_C1_RE = _mm512_mul_pd( u_10_re , b_S0_C0_RE );
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+32) + offs[0]) ), _MM_HINT_T1);

ub_S0_C1_RE = _mm512_fmadd_pd(u_10_im, b_S0_C0_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_mul_pd( u_10_re , b_S0_C0_IM );
ub_S0_C1_IM = _mm512_fnmadd_pd(u_10_im, b_S0_C0_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_pd(u_11_re, b_S0_C1_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fmadd_pd(u_11_im, b_S0_C1_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_pd(u_11_re, b_S0_C1_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fnmadd_pd(u_11_im, b_S0_C1_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_pd(u_12_re, b_S0_C2_RE, ub_S0_C1_RE);
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+32) + offs[4]) ), _MM_HINT_T1);

ub_S0_C1_RE = _mm512_fmadd_pd(u_12_im, b_S0_C2_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_pd(u_12_re, b_S0_C2_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fnmadd_pd(u_12_im, b_S0_C2_RE, ub_S0_C1_IM);
ub_S0_C2_RE = _mm512_mul_pd( u_20_re , b_S0_C0_RE );
ub_S0_C2_RE = _mm512_fmadd_pd(u_20_im, b_S0_C0_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_mul_pd( u_20_re , b_S0_C0_IM );
ub_S0_C2_IM = _mm512_fnmadd_pd(u_20_im, b_S0_C0_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_pd(u_21_re, b_S0_C1_RE, ub_S0_C2_RE);
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+40) + offs[0]) ), _MM_HINT_T1);

ub_S0_C2_RE = _mm512_fmadd_pd(u_21_im, b_S0_C1_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_pd(u_21_re, b_S0_C1_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fnmadd_pd(u_21_im, b_S0_C1_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_pd(u_22_re, b_S0_C2_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fmadd_pd(u_22_im, b_S0_C2_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_pd(u_22_re, b_S0_C2_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fnmadd_pd(u_22_im, b_S0_C2_RE, ub_S0_C2_IM);
ub_S1_C0_RE = _mm512_mul_pd( u_00_re , b_S1_C0_RE );
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+40) + offs[4]) ), _MM_HINT_T1);

ub_S1_C0_RE = _mm512_fmadd_pd(u_00_im, b_S1_C0_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_mul_pd( u_00_re , b_S1_C0_IM );
ub_S1_C0_IM = _mm512_fnmadd_pd(u_00_im, b_S1_C0_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_pd(u_01_re, b_S1_C1_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fmadd_pd(u_01_im, b_S1_C1_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_pd(u_01_re, b_S1_C1_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fnmadd_pd(u_01_im, b_S1_C1_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_pd(u_02_re, b_S1_C2_RE, ub_S1_C0_RE);
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+48) + offs[0]) ), _MM_HINT_T1);

ub_S1_C0_RE = _mm512_fmadd_pd(u_02_im, b_S1_C2_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_pd(u_02_re, b_S1_C2_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fnmadd_pd(u_02_im, b_S1_C2_RE, ub_S1_C0_IM);
ub_S1_C1_RE = _mm512_mul_pd( u_10_re , b_S1_C0_RE );
ub_S1_C1_RE = _mm512_fmadd_pd(u_10_im, b_S1_C0_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_mul_pd( u_10_re , b_S1_C0_IM );
ub_S1_C1_IM = _mm512_fnmadd_pd(u_10_im, b_S1_C0_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_pd(u_11_re, b_S1_C1_RE, ub_S1_C1_RE);
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+48) + offs[4]) ), _MM_HINT_T1);

ub_S1_C1_RE = _mm512_fmadd_pd(u_11_im, b_S1_C1_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_pd(u_11_re, b_S1_C1_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fnmadd_pd(u_11_im, b_S1_C1_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_pd(u_12_re, b_S1_C2_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fmadd_pd(u_12_im, b_S1_C2_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_pd(u_12_re, b_S1_C2_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fnmadd_pd(u_12_im, b_S1_C2_RE, ub_S1_C1_IM);
ub_S1_C2_RE = _mm512_mul_pd( u_20_re , b_S1_C0_RE );
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+56) + offs[0]) ), _MM_HINT_T1);

ub_S1_C2_RE = _mm512_fmadd_pd(u_20_im, b_S1_C0_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_mul_pd( u_20_re , b_S1_C0_IM );
ub_S1_C2_IM = _mm512_fnmadd_pd(u_20_im, b_S1_C0_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_pd(u_21_re, b_S1_C1_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fmadd_pd(u_21_im, b_S1_C1_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_pd(u_21_re, b_S1_C1_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fnmadd_pd(u_21_im, b_S1_C1_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_pd(u_22_re, b_S1_C2_RE, ub_S1_C2_RE);
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+56) + offs[4]) ), _MM_HINT_T1);

ub_S1_C2_RE = _mm512_fmadd_pd(u_22_im, b_S1_C2_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_pd(u_22_re, b_S1_C2_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fnmadd_pd(u_22_im, b_S1_C2_RE, ub_S1_C2_IM);
out_S0_C0_RE = _mm512_mask_mov_pd(out_S0_C0_RE, accMask, _mm512_fnmadd_pd(beta_vec, ub_S0_C0_RE, out_S0_C0_RE));
out_S0_C0_IM = _mm512_mask_mov_pd(out_S0_C0_IM, accMask, _mm512_fnmadd_pd(beta_vec, ub_S0_C0_IM, out_S0_C0_IM));
out_S0_C1_RE = _mm512_mask_mov_pd(out_S0_C1_RE, accMask, _mm512_fnmadd_pd(beta_vec, ub_S0_C1_RE, out_S0_C1_RE));
out_S0_C1_IM = _mm512_mask_mov_pd(out_S0_C1_IM, accMask, _mm512_fnmadd_pd(beta_vec, ub_S0_C1_IM, out_S0_C1_IM));
out_S0_C2_RE = _mm512_mask_mov_pd(out_S0_C2_RE, accMask, _mm512_fnmadd_pd(beta_vec, ub_S0_C2_RE, out_S0_C2_RE));
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+64) + offs[0]) ), _MM_HINT_T1);

out_S0_C2_IM = _mm512_mask_mov_pd(out_S0_C2_IM, accMask, _mm512_fnmadd_pd(beta_vec, ub_S0_C2_IM, out_S0_C2_IM));
out_S3_C0_RE = _mm512_mask_mov_pd(out_S3_C0_RE, accMask, _mm512_fmadd_pd(beta_vec, ub_S0_C0_IM, out_S3_C0_RE));
out_S3_C0_IM = _mm512_mask_mov_pd(out_S3_C0_IM, accMask, _mm512_fnmadd_pd(beta_vec, ub_S0_C0_RE, out_S3_C0_IM));
out_S3_C1_RE = _mm512_mask_mov_pd(out_S3_C1_RE, accMask, _mm512_fmadd_pd(beta_vec, ub_S0_C1_IM, out_S3_C1_RE));
out_S3_C1_IM = _mm512_mask_mov_pd(out_S3_C1_IM, accMask, _mm512_fnmadd_pd(beta_vec, ub_S0_C1_RE, out_S3_C1_IM));
out_S3_C2_RE = _mm512_mask_mov_pd(out_S3_C2_RE, accMask, _mm512_fmadd_pd(beta_vec, ub_S0_C2_IM, out_S3_C2_RE));
out_S3_C2_IM = _mm512_mask_mov_pd(out_S3_C2_IM, accMask, _mm512_fnmadd_pd(beta_vec, ub_S0_C2_RE, out_S3_C2_IM));
out_S1_C0_RE = _mm512_mask_mov_pd(out_S1_C0_RE, accMask, _mm512_fnmadd_pd(beta_vec, ub_S1_C0_RE, out_S1_C0_RE));
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+64) + offs[4]) ), _MM_HINT_T1);

out_S1_C0_IM = _mm512_mask_mov_pd(out_S1_C0_IM, accMask, _mm512_fnmadd_pd(beta_vec, ub_S1_C0_IM, out_S1_C0_IM));
out_S1_C1_RE = _mm512_mask_mov_pd(out_S1_C1_RE, accMask, _mm512_fnmadd_pd(beta_vec, ub_S1_C1_RE, out_S1_C1_RE));
out_S1_C1_IM = _mm512_mask_mov_pd(out_S1_C1_IM, accMask, _mm512_fnmadd_pd(beta_vec, ub_S1_C1_IM, out_S1_C1_IM));
out_S1_C2_RE = _mm512_mask_mov_pd(out_S1_C2_RE, accMask, _mm512_fnmadd_pd(beta_vec, ub_S1_C2_RE, out_S1_C2_RE));
out_S1_C2_IM = _mm512_mask_mov_pd(out_S1_C2_IM, accMask, _mm512_fnmadd_pd(beta_vec, ub_S1_C2_IM, out_S1_C2_IM));
out_S2_C0_RE = _mm512_mask_mov_pd(out_S2_C0_RE, accMask, _mm512_fmadd_pd(beta_vec, ub_S1_C0_IM, out_S2_C0_RE));
out_S2_C0_IM = _mm512_mask_mov_pd(out_S2_C0_IM, accMask, _mm512_fnmadd_pd(beta_vec, ub_S1_C0_RE, out_S2_C0_IM));
out_S2_C1_RE = _mm512_mask_mov_pd(out_S2_C1_RE, accMask, _mm512_fmadd_pd(beta_vec, ub_S1_C1_IM, out_S2_C1_RE));
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+72) + offs[0]) ), _MM_HINT_T1);

out_S2_C1_IM = _mm512_mask_mov_pd(out_S2_C1_IM, accMask, _mm512_fnmadd_pd(beta_vec, ub_S1_C1_RE, out_S2_C1_IM));
out_S2_C2_RE = _mm512_mask_mov_pd(out_S2_C2_RE, accMask, _mm512_fmadd_pd(beta_vec, ub_S1_C2_IM, out_S2_C2_RE));
out_S2_C2_IM = _mm512_mask_mov_pd(out_S2_C2_IM, accMask, _mm512_fnmadd_pd(beta_vec, ub_S1_C2_RE, out_S2_C2_IM));
_mm512_mask_compressstoreu_pd(((*oBase)[0][0][0] + offs[0]), 0xf, out_S0_C0_RE);

_mm512_mask_compressstoreu_pd(((*oBase)[0][0][0] + offs[4]), 0xf0, out_S0_C0_RE);

_mm512_mask_compressstoreu_pd(((*oBase)[0][0][1] + offs[0]), 0xf, out_S0_C0_IM);

_mm512_mask_compressstoreu_pd(((*oBase)[0][0][1] + offs[4]), 0xf0, out_S0_C0_IM);

_mm512_mask_compressstoreu_pd(((*oBase)[1][0][0] + offs[0]), 0xf, out_S0_C1_RE);

 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+72) + offs[4]) ), _MM_HINT_T1);

_mm512_mask_compressstoreu_pd(((*oBase)[1][0][0] + offs[4]), 0xf0, out_S0_C1_RE);

_mm512_mask_compressstoreu_pd(((*oBase)[1][0][1] + offs[0]), 0xf, out_S0_C1_IM);

_mm512_mask_compressstoreu_pd(((*oBase)[1][0][1] + offs[4]), 0xf0, out_S0_C1_IM);

_mm512_mask_compressstoreu_pd(((*oBase)[2][0][0] + offs[0]), 0xf, out_S0_C2_RE);

_mm512_mask_compressstoreu_pd(((*oBase)[2][0][0] + offs[4]), 0xf0, out_S0_C2_RE);

_mm512_mask_compressstoreu_pd(((*oBase)[2][0][1] + offs[0]), 0xf, out_S0_C2_IM);

_mm512_mask_compressstoreu_pd(((*oBase)[2][0][1] + offs[4]), 0xf0, out_S0_C2_IM);

_mm512_mask_compressstoreu_pd(((*oBase)[0][1][0] + offs[0]), 0xf, out_S1_C0_RE);

 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+80) + offs[0]) ), _MM_HINT_T1);

_mm512_mask_compressstoreu_pd(((*oBase)[0][1][0] + offs[4]), 0xf0, out_S1_C0_RE);

_mm512_mask_compressstoreu_pd(((*oBase)[0][1][1] + offs[0]), 0xf, out_S1_C0_IM);

_mm512_mask_compressstoreu_pd(((*oBase)[0][1][1] + offs[4]), 0xf0, out_S1_C0_IM);

_mm512_mask_compressstoreu_pd(((*oBase)[1][1][0] + offs[0]), 0xf, out_S1_C1_RE);

_mm512_mask_compressstoreu_pd(((*oBase)[1][1][0] + offs[4]), 0xf0, out_S1_C1_RE);

_mm512_mask_compressstoreu_pd(((*oBase)[1][1][1] + offs[0]), 0xf, out_S1_C1_IM);

_mm512_mask_compressstoreu_pd(((*oBase)[1][1][1] + offs[4]), 0xf0, out_S1_C1_IM);

_mm512_mask_compressstoreu_pd(((*oBase)[2][1][0] + offs[0]), 0xf, out_S1_C2_RE);

 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+80) + offs[4]) ), _MM_HINT_T1);

_mm512_mask_compressstoreu_pd(((*oBase)[2][1][0] + offs[4]), 0xf0, out_S1_C2_RE);

_mm512_mask_compressstoreu_pd(((*oBase)[2][1][1] + offs[0]), 0xf, out_S1_C2_IM);

_mm512_mask_compressstoreu_pd(((*oBase)[2][1][1] + offs[4]), 0xf0, out_S1_C2_IM);

_mm512_mask_compressstoreu_pd(((*oBase)[0][2][0] + offs[0]), 0xf, out_S2_C0_RE);

_mm512_mask_compressstoreu_pd(((*oBase)[0][2][0] + offs[4]), 0xf0, out_S2_C0_RE);

_mm512_mask_compressstoreu_pd(((*oBase)[0][2][1] + offs[0]), 0xf, out_S2_C0_IM);

_mm512_mask_compressstoreu_pd(((*oBase)[0][2][1] + offs[4]), 0xf0, out_S2_C0_IM);

_mm512_mask_compressstoreu_pd(((*oBase)[1][2][0] + offs[0]), 0xf, out_S2_C1_RE);

 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+88) + offs[0]) ), _MM_HINT_T1);

_mm512_mask_compressstoreu_pd(((*oBase)[1][2][0] + offs[4]), 0xf0, out_S2_C1_RE);

_mm512_mask_compressstoreu_pd(((*oBase)[1][2][1] + offs[0]), 0xf, out_S2_C1_IM);

_mm512_mask_compressstoreu_pd(((*oBase)[1][2][1] + offs[4]), 0xf0, out_S2_C1_IM);

_mm512_mask_compressstoreu_pd(((*oBase)[2][2][0] + offs[0]), 0xf, out_S2_C2_RE);

_mm512_mask_compressstoreu_pd(((*oBase)[2][2][0] + offs[4]), 0xf0, out_S2_C2_RE);

_mm512_mask_compressstoreu_pd(((*oBase)[2][2][1] + offs[0]), 0xf, out_S2_C2_IM);

_mm512_mask_compressstoreu_pd(((*oBase)[2][2][1] + offs[4]), 0xf0, out_S2_C2_IM);

_mm512_mask_compressstoreu_pd(((*oBase)[0][3][0] + offs[0]), 0xf, out_S3_C0_RE);

 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+88) + offs[4]) ), _MM_HINT_T1);

_mm512_mask_compressstoreu_pd(((*oBase)[0][3][0] + offs[4]), 0xf0, out_S3_C0_RE);

_mm512_mask_compressstoreu_pd(((*oBase)[0][3][1] + offs[0]), 0xf, out_S3_C0_IM);

_mm512_mask_compressstoreu_pd(((*oBase)[0][3][1] + offs[4]), 0xf0, out_S3_C0_IM);

_mm512_mask_compressstoreu_pd(((*oBase)[1][3][0] + offs[0]), 0xf, out_S3_C1_RE);

_mm512_mask_compressstoreu_pd(((*oBase)[1][3][0] + offs[4]), 0xf0, out_S3_C1_RE);

_mm512_mask_compressstoreu_pd(((*oBase)[1][3][1] + offs[0]), 0xf, out_S3_C1_IM);

_mm512_mask_compressstoreu_pd(((*oBase)[1][3][1] + offs[4]), 0xf0, out_S3_C1_IM);

_mm512_mask_compressstoreu_pd(((*oBase)[2][3][0] + offs[0]), 0xf, out_S3_C2_RE);

_mm512_mask_compressstoreu_pd(((*oBase)[2][3][0] + offs[4]), 0xf0, out_S3_C2_RE);

_mm512_mask_compressstoreu_pd(((*oBase)[2][3][1] + offs[0]), 0xf, out_S3_C2_IM);

_mm512_mask_compressstoreu_pd(((*oBase)[2][3][1] + offs[4]), 0xf0, out_S3_C2_IM);


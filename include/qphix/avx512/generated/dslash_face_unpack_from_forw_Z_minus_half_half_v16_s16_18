__m512 b_S0_C0_RE = _mm512_setzero_ps(); 
__m512 b_S0_C0_IM = _mm512_setzero_ps(); 
__m512 b_S0_C1_RE = _mm512_setzero_ps(); 
__m512 b_S0_C1_IM = _mm512_setzero_ps(); 
__m512 b_S0_C2_RE = _mm512_setzero_ps(); 
__m512 b_S0_C2_IM = _mm512_setzero_ps(); 
__m512 b_S1_C0_RE = _mm512_setzero_ps(); 
__m512 b_S1_C0_IM = _mm512_setzero_ps(); 
__m512 b_S1_C1_RE = _mm512_setzero_ps(); 
__m512 b_S1_C1_IM = _mm512_setzero_ps(); 
__m512 b_S1_C2_RE = _mm512_setzero_ps(); 
__m512 b_S1_C2_IM = _mm512_setzero_ps(); 
__m512 ub_S0_C0_RE = _mm512_setzero_ps(); 
__m512 ub_S0_C0_IM = _mm512_setzero_ps(); 
__m512 ub_S0_C1_RE = _mm512_setzero_ps(); 
__m512 ub_S0_C1_IM = _mm512_setzero_ps(); 
__m512 ub_S0_C2_RE = _mm512_setzero_ps(); 
__m512 ub_S0_C2_IM = _mm512_setzero_ps(); 
__m512 ub_S1_C0_RE = _mm512_setzero_ps(); 
__m512 ub_S1_C0_IM = _mm512_setzero_ps(); 
__m512 ub_S1_C1_RE = _mm512_setzero_ps(); 
__m512 ub_S1_C1_IM = _mm512_setzero_ps(); 
__m512 ub_S1_C2_RE = _mm512_setzero_ps(); 
__m512 ub_S1_C2_IM = _mm512_setzero_ps(); 
__m512 out_S0_C0_RE = _mm512_setzero_ps(); 
__m512 out_S0_C0_IM = _mm512_setzero_ps(); 
__m512 out_S0_C1_RE = _mm512_setzero_ps(); 
__m512 out_S0_C1_IM = _mm512_setzero_ps(); 
__m512 out_S0_C2_RE = _mm512_setzero_ps(); 
__m512 out_S0_C2_IM = _mm512_setzero_ps(); 
__m512 out_S1_C0_RE = _mm512_setzero_ps(); 
__m512 out_S1_C0_IM = _mm512_setzero_ps(); 
__m512 out_S1_C1_RE = _mm512_setzero_ps(); 
__m512 out_S1_C1_IM = _mm512_setzero_ps(); 
__m512 out_S1_C2_RE = _mm512_setzero_ps(); 
__m512 out_S1_C2_IM = _mm512_setzero_ps(); 
__m512 out_S2_C0_RE = _mm512_setzero_ps(); 
__m512 out_S2_C0_IM = _mm512_setzero_ps(); 
__m512 out_S2_C1_RE = _mm512_setzero_ps(); 
__m512 out_S2_C1_IM = _mm512_setzero_ps(); 
__m512 out_S2_C2_RE = _mm512_setzero_ps(); 
__m512 out_S2_C2_IM = _mm512_setzero_ps(); 
__m512 out_S3_C0_RE = _mm512_setzero_ps(); 
__m512 out_S3_C0_IM = _mm512_setzero_ps(); 
__m512 out_S3_C1_RE = _mm512_setzero_ps(); 
__m512 out_S3_C1_IM = _mm512_setzero_ps(); 
__m512 out_S3_C2_RE = _mm512_setzero_ps(); 
__m512 out_S3_C2_IM = _mm512_setzero_ps(); 
__m512 u_00_re = _mm512_setzero_ps(); 
__m512 u_00_im = _mm512_setzero_ps(); 
__m512 u_01_re = _mm512_setzero_ps(); 
__m512 u_01_im = _mm512_setzero_ps(); 
__m512 u_02_re = _mm512_setzero_ps(); 
__m512 u_02_im = _mm512_setzero_ps(); 
__m512 u_10_re = _mm512_setzero_ps(); 
__m512 u_10_im = _mm512_setzero_ps(); 
__m512 u_11_re = _mm512_setzero_ps(); 
__m512 u_11_im = _mm512_setzero_ps(); 
__m512 u_12_re = _mm512_setzero_ps(); 
__m512 u_12_im = _mm512_setzero_ps(); 
__m512 u_20_re = _mm512_setzero_ps(); 
__m512 u_20_im = _mm512_setzero_ps(); 
__m512 u_21_re = _mm512_setzero_ps(); 
__m512 u_21_im = _mm512_setzero_ps(); 
__m512 u_22_re = _mm512_setzero_ps(); 
__m512 u_22_im = _mm512_setzero_ps(); 
__m512 psi_S0_RE = _mm512_setzero_ps(); 
__m512 psi_S0_IM = _mm512_setzero_ps(); 
__m512 psi_S1_RE = _mm512_setzero_ps(); 
__m512 psi_S1_IM = _mm512_setzero_ps(); 
__m512 tmp_1_re = _mm512_setzero_ps(); 
__m512 tmp_1_im = _mm512_setzero_ps(); 
__m512 tmp_2_re = _mm512_setzero_ps(); 
__m512 tmp_2_im = _mm512_setzero_ps(); 
__m512 tmp_3_re = _mm512_setzero_ps(); 
__m512 tmp_3_im = _mm512_setzero_ps(); 
__m512 tmp_4_re = _mm512_setzero_ps(); 
__m512 tmp_4_im = _mm512_setzero_ps(); 
__m512 zero = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( (((inbuf) + hsprefdist)+0) ), _MM_HINT_T1);

zero = _mm512_setzero_ps(); 
__m512 beta_vec = _mm512_setzero_ps(); 
beta_vec = _mm512_cvtph_ps(_mm256_set1_epi16(*(&beta)));

 _mm_prefetch((const char *)( ((inbuf)+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+0) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+32) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+64) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+96) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((inbuf) + hsprefdist)+32) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+128) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+160) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+192) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+224) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+256) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+288) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+320) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+352) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((inbuf) + hsprefdist)+64) ), _MM_HINT_T1);

out_S0_C0_RE = _mm512_undefined(); 
out_S0_C0_RE = _mm512_mask_expand_ps(out_S0_C0_RE, 0xffff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[0][0][0] + offs[0]))));

out_S0_C0_IM = _mm512_undefined(); 
out_S0_C0_IM = _mm512_mask_expand_ps(out_S0_C0_IM, 0xffff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[0][0][1] + offs[0]))));

out_S1_C0_RE = _mm512_undefined(); 
out_S1_C0_RE = _mm512_mask_expand_ps(out_S1_C0_RE, 0xffff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[0][1][0] + offs[0]))));

out_S1_C0_IM = _mm512_undefined(); 
out_S1_C0_IM = _mm512_mask_expand_ps(out_S1_C0_IM, 0xffff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[0][1][1] + offs[0]))));

 _mm_prefetch((const char *)( (((inbuf) + hsprefdist)+96) ), _MM_HINT_T1);

out_S2_C0_RE = _mm512_undefined(); 
out_S2_C0_RE = _mm512_mask_expand_ps(out_S2_C0_RE, 0xffff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[0][2][0] + offs[0]))));

out_S2_C0_IM = _mm512_undefined(); 
out_S2_C0_IM = _mm512_mask_expand_ps(out_S2_C0_IM, 0xffff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[0][2][1] + offs[0]))));

out_S3_C0_RE = _mm512_undefined(); 
out_S3_C0_RE = _mm512_mask_expand_ps(out_S3_C0_RE, 0xffff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[0][3][0] + offs[0]))));

out_S3_C0_IM = _mm512_undefined(); 
out_S3_C0_IM = _mm512_mask_expand_ps(out_S3_C0_IM, 0xffff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[0][3][1] + offs[0]))));

 _mm_prefetch((const char *)( (((inbuf) + hsprefdist)+128) ), _MM_HINT_T1);

out_S0_C1_RE = _mm512_undefined(); 
out_S0_C1_RE = _mm512_mask_expand_ps(out_S0_C1_RE, 0xffff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[1][0][0] + offs[0]))));

out_S0_C1_IM = _mm512_undefined(); 
out_S0_C1_IM = _mm512_mask_expand_ps(out_S0_C1_IM, 0xffff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[1][0][1] + offs[0]))));

out_S1_C1_RE = _mm512_undefined(); 
out_S1_C1_RE = _mm512_mask_expand_ps(out_S1_C1_RE, 0xffff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[1][1][0] + offs[0]))));

out_S1_C1_IM = _mm512_undefined(); 
out_S1_C1_IM = _mm512_mask_expand_ps(out_S1_C1_IM, 0xffff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[1][1][1] + offs[0]))));

 _mm_prefetch((const char *)( (((inbuf) + hsprefdist)+160) ), _MM_HINT_T1);

out_S2_C1_RE = _mm512_undefined(); 
out_S2_C1_RE = _mm512_mask_expand_ps(out_S2_C1_RE, 0xffff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[1][2][0] + offs[0]))));

out_S2_C1_IM = _mm512_undefined(); 
out_S2_C1_IM = _mm512_mask_expand_ps(out_S2_C1_IM, 0xffff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[1][2][1] + offs[0]))));

out_S3_C1_RE = _mm512_undefined(); 
out_S3_C1_RE = _mm512_mask_expand_ps(out_S3_C1_RE, 0xffff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[1][3][0] + offs[0]))));

out_S3_C1_IM = _mm512_undefined(); 
out_S3_C1_IM = _mm512_mask_expand_ps(out_S3_C1_IM, 0xffff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[1][3][1] + offs[0]))));

 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+0) ), _MM_HINT_T1);

out_S0_C2_RE = _mm512_undefined(); 
out_S0_C2_RE = _mm512_mask_expand_ps(out_S0_C2_RE, 0xffff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[2][0][0] + offs[0]))));

out_S0_C2_IM = _mm512_undefined(); 
out_S0_C2_IM = _mm512_mask_expand_ps(out_S0_C2_IM, 0xffff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[2][0][1] + offs[0]))));

out_S1_C2_RE = _mm512_undefined(); 
out_S1_C2_RE = _mm512_mask_expand_ps(out_S1_C2_RE, 0xffff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[2][1][0] + offs[0]))));

out_S1_C2_IM = _mm512_undefined(); 
out_S1_C2_IM = _mm512_mask_expand_ps(out_S1_C2_IM, 0xffff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[2][1][1] + offs[0]))));

 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+32) ), _MM_HINT_T1);

out_S2_C2_RE = _mm512_undefined(); 
out_S2_C2_RE = _mm512_mask_expand_ps(out_S2_C2_RE, 0xffff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[2][2][0] + offs[0]))));

out_S2_C2_IM = _mm512_undefined(); 
out_S2_C2_IM = _mm512_mask_expand_ps(out_S2_C2_IM, 0xffff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[2][2][1] + offs[0]))));

out_S3_C2_RE = _mm512_undefined(); 
out_S3_C2_RE = _mm512_mask_expand_ps(out_S3_C2_RE, 0xffff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[2][3][0] + offs[0]))));

out_S3_C2_IM = _mm512_undefined(); 
out_S3_C2_IM = _mm512_mask_expand_ps(out_S3_C2_IM, 0xffff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[2][3][1] + offs[0]))));

 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+64) ), _MM_HINT_T1);

b_S0_C0_RE = _mm512_mask_cvtph_ps(b_S0_C0_RE, 0xFFFF, _mm256_load_si256((__m256i*)((inbuf)+0)));

b_S0_C0_IM = _mm512_mask_cvtph_ps(b_S0_C0_IM, 0xFFFF, _mm256_load_si256((__m256i*)((inbuf)+16)));

b_S0_C1_RE = _mm512_mask_cvtph_ps(b_S0_C1_RE, 0xFFFF, _mm256_load_si256((__m256i*)((inbuf)+32)));

b_S0_C1_IM = _mm512_mask_cvtph_ps(b_S0_C1_IM, 0xFFFF, _mm256_load_si256((__m256i*)((inbuf)+48)));

b_S0_C2_RE = _mm512_mask_cvtph_ps(b_S0_C2_RE, 0xFFFF, _mm256_load_si256((__m256i*)((inbuf)+64)));

b_S0_C2_IM = _mm512_mask_cvtph_ps(b_S0_C2_IM, 0xFFFF, _mm256_load_si256((__m256i*)((inbuf)+80)));

b_S1_C0_RE = _mm512_mask_cvtph_ps(b_S1_C0_RE, 0xFFFF, _mm256_load_si256((__m256i*)((inbuf)+96)));

b_S1_C0_IM = _mm512_mask_cvtph_ps(b_S1_C0_IM, 0xFFFF, _mm256_load_si256((__m256i*)((inbuf)+112)));

 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+96) ), _MM_HINT_T1);

b_S1_C1_RE = _mm512_mask_cvtph_ps(b_S1_C1_RE, 0xFFFF, _mm256_load_si256((__m256i*)((inbuf)+128)));

b_S1_C1_IM = _mm512_mask_cvtph_ps(b_S1_C1_IM, 0xFFFF, _mm256_load_si256((__m256i*)((inbuf)+144)));

b_S1_C2_RE = _mm512_mask_cvtph_ps(b_S1_C2_RE, 0xFFFF, _mm256_load_si256((__m256i*)((inbuf)+160)));

b_S1_C2_IM = _mm512_mask_cvtph_ps(b_S1_C2_IM, 0xFFFF, _mm256_load_si256((__m256i*)((inbuf)+176)));

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+128) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+160) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+192) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+224) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+256) ), _MM_HINT_T0);

u_00_re = _mm512_mask_cvtph_ps(u_00_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][0][0][0]));

u_00_im = _mm512_mask_cvtph_ps(u_00_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][0][0][1]));

u_01_re = _mm512_mask_cvtph_ps(u_01_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][0][1][0]));

 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+160) ), _MM_HINT_T1);

u_01_im = _mm512_mask_cvtph_ps(u_01_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][0][1][1]));

u_02_re = _mm512_mask_cvtph_ps(u_02_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][0][2][0]));

u_02_im = _mm512_mask_cvtph_ps(u_02_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][0][2][1]));

u_10_re = _mm512_mask_cvtph_ps(u_10_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][1][0][0]));

u_10_im = _mm512_mask_cvtph_ps(u_10_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][1][0][1]));

u_11_re = _mm512_mask_cvtph_ps(u_11_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][1][1][0]));

u_11_im = _mm512_mask_cvtph_ps(u_11_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][1][1][1]));

u_12_re = _mm512_mask_cvtph_ps(u_12_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][1][2][0]));

 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+192) ), _MM_HINT_T1);

u_12_im = _mm512_mask_cvtph_ps(u_12_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][1][2][1]));

u_20_re = _mm512_mask_cvtph_ps(u_20_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][2][0][0]));

u_20_im = _mm512_mask_cvtph_ps(u_20_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][2][0][1]));

u_21_re = _mm512_mask_cvtph_ps(u_21_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][2][1][0]));

u_21_im = _mm512_mask_cvtph_ps(u_21_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][2][1][1]));

u_22_re = _mm512_mask_cvtph_ps(u_22_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][2][2][0]));

u_22_im = _mm512_mask_cvtph_ps(u_22_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][2][2][1]));

ub_S0_C0_RE = _mm512_mul_ps( u_00_re , b_S0_C0_RE );
 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+224) ), _MM_HINT_T1);

ub_S0_C0_RE = _mm512_fnmadd_ps(u_00_im, b_S0_C0_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_mul_ps( u_00_re , b_S0_C0_IM );
ub_S0_C0_IM = _mm512_fmadd_ps(u_00_im, b_S0_C0_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_10_re, b_S0_C1_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fnmadd_ps(u_10_im, b_S0_C1_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_10_re, b_S0_C1_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fmadd_ps(u_10_im, b_S0_C1_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_20_re, b_S0_C2_RE, ub_S0_C0_RE);
 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+256) ), _MM_HINT_T1);

ub_S0_C0_RE = _mm512_fnmadd_ps(u_20_im, b_S0_C2_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_20_re, b_S0_C2_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fmadd_ps(u_20_im, b_S0_C2_RE, ub_S0_C0_IM);
ub_S0_C1_RE = _mm512_mul_ps( u_01_re , b_S0_C0_RE );
ub_S0_C1_RE = _mm512_fnmadd_ps(u_01_im, b_S0_C0_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_mul_ps( u_01_re , b_S0_C0_IM );
ub_S0_C1_IM = _mm512_fmadd_ps(u_01_im, b_S0_C0_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_re, b_S0_C1_RE, ub_S0_C1_RE);
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+0) + offs[0]) ), _MM_HINT_T1);

ub_S0_C1_RE = _mm512_fnmadd_ps(u_11_im, b_S0_C1_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_re, b_S0_C1_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_im, b_S0_C1_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_21_re, b_S0_C2_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fnmadd_ps(u_21_im, b_S0_C2_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_21_re, b_S0_C2_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fmadd_ps(u_21_im, b_S0_C2_RE, ub_S0_C1_IM);
ub_S0_C2_RE = _mm512_mul_ps( u_02_re , b_S0_C0_RE );
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+32) + offs[0]) ), _MM_HINT_T1);

ub_S0_C2_RE = _mm512_fnmadd_ps(u_02_im, b_S0_C0_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_mul_ps( u_02_re , b_S0_C0_IM );
ub_S0_C2_IM = _mm512_fmadd_ps(u_02_im, b_S0_C0_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_12_re, b_S0_C1_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fnmadd_ps(u_12_im, b_S0_C1_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_12_re, b_S0_C1_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fmadd_ps(u_12_im, b_S0_C1_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_22_re, b_S0_C2_RE, ub_S0_C2_RE);
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+64) + offs[0]) ), _MM_HINT_T1);

ub_S0_C2_RE = _mm512_fnmadd_ps(u_22_im, b_S0_C2_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_re, b_S0_C2_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_im, b_S0_C2_RE, ub_S0_C2_IM);
ub_S1_C0_RE = _mm512_mul_ps( u_00_re , b_S1_C0_RE );
ub_S1_C0_RE = _mm512_fnmadd_ps(u_00_im, b_S1_C0_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_mul_ps( u_00_re , b_S1_C0_IM );
ub_S1_C0_IM = _mm512_fmadd_ps(u_00_im, b_S1_C0_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_10_re, b_S1_C1_RE, ub_S1_C0_RE);
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+96) + offs[0]) ), _MM_HINT_T1);

ub_S1_C0_RE = _mm512_fnmadd_ps(u_10_im, b_S1_C1_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_10_re, b_S1_C1_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fmadd_ps(u_10_im, b_S1_C1_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_20_re, b_S1_C2_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fnmadd_ps(u_20_im, b_S1_C2_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_20_re, b_S1_C2_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fmadd_ps(u_20_im, b_S1_C2_RE, ub_S1_C0_IM);
ub_S1_C1_RE = _mm512_mul_ps( u_01_re , b_S1_C0_RE );
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+128) + offs[0]) ), _MM_HINT_T1);

ub_S1_C1_RE = _mm512_fnmadd_ps(u_01_im, b_S1_C0_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_mul_ps( u_01_re , b_S1_C0_IM );
ub_S1_C1_IM = _mm512_fmadd_ps(u_01_im, b_S1_C0_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_re, b_S1_C1_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fnmadd_ps(u_11_im, b_S1_C1_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_re, b_S1_C1_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_im, b_S1_C1_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_21_re, b_S1_C2_RE, ub_S1_C1_RE);
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+160) + offs[0]) ), _MM_HINT_T1);

ub_S1_C1_RE = _mm512_fnmadd_ps(u_21_im, b_S1_C2_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_21_re, b_S1_C2_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fmadd_ps(u_21_im, b_S1_C2_RE, ub_S1_C1_IM);
ub_S1_C2_RE = _mm512_mul_ps( u_02_re , b_S1_C0_RE );
ub_S1_C2_RE = _mm512_fnmadd_ps(u_02_im, b_S1_C0_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_mul_ps( u_02_re , b_S1_C0_IM );
ub_S1_C2_IM = _mm512_fmadd_ps(u_02_im, b_S1_C0_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_12_re, b_S1_C1_RE, ub_S1_C2_RE);
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+192) + offs[0]) ), _MM_HINT_T1);

ub_S1_C2_RE = _mm512_fnmadd_ps(u_12_im, b_S1_C1_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_12_re, b_S1_C1_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fmadd_ps(u_12_im, b_S1_C1_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_22_re, b_S1_C2_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fnmadd_ps(u_22_im, b_S1_C2_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_re, b_S1_C2_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_im, b_S1_C2_RE, ub_S1_C2_IM);
out_S0_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_RE, out_S0_C0_RE);
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+224) + offs[0]) ), _MM_HINT_T1);

out_S0_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_IM, out_S0_C0_IM);
out_S0_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_RE, out_S0_C1_RE);
out_S0_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_IM, out_S0_C1_IM);
out_S0_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_RE, out_S0_C2_RE);
out_S0_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_IM, out_S0_C2_IM);
out_S2_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_IM, out_S2_C0_RE);
out_S2_C0_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C0_RE, out_S2_C0_IM);
out_S2_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_IM, out_S2_C1_RE);
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+256) + offs[0]) ), _MM_HINT_T1);

out_S2_C1_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C1_RE, out_S2_C1_IM);
out_S2_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_IM, out_S2_C2_RE);
out_S2_C2_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C2_RE, out_S2_C2_IM);
out_S1_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_RE, out_S1_C0_RE);
out_S1_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_IM, out_S1_C0_IM);
out_S1_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_RE, out_S1_C1_RE);
out_S1_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_IM, out_S1_C1_IM);
out_S1_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_RE, out_S1_C2_RE);
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+288) + offs[0]) ), _MM_HINT_T1);

out_S1_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_IM, out_S1_C2_IM);
out_S3_C0_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C0_IM, out_S3_C0_RE);
out_S3_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_RE, out_S3_C0_IM);
out_S3_C1_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C1_IM, out_S3_C1_RE);
out_S3_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_RE, out_S3_C1_IM);
out_S3_C2_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C2_IM, out_S3_C2_RE);
out_S3_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_RE, out_S3_C2_IM);
_mm256_storeu_si256((__m256i*)((*oBase)[0][0][0] + offs[0]), _mm512_cvtps_ph(_mm512_mask_compress_ps(_mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[0][0][0] + offs[0]))), 0xffff, out_S0_C0_RE), _MM_FROUND_TO_NEAREST_INT));

 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+320) + offs[0]) ), _MM_HINT_T1);

_mm256_storeu_si256((__m256i*)((*oBase)[0][0][1] + offs[0]), _mm512_cvtps_ph(_mm512_mask_compress_ps(_mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[0][0][1] + offs[0]))), 0xffff, out_S0_C0_IM), _MM_FROUND_TO_NEAREST_INT));

_mm256_storeu_si256((__m256i*)((*oBase)[1][0][0] + offs[0]), _mm512_cvtps_ph(_mm512_mask_compress_ps(_mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[1][0][0] + offs[0]))), 0xffff, out_S0_C1_RE), _MM_FROUND_TO_NEAREST_INT));

_mm256_storeu_si256((__m256i*)((*oBase)[1][0][1] + offs[0]), _mm512_cvtps_ph(_mm512_mask_compress_ps(_mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[1][0][1] + offs[0]))), 0xffff, out_S0_C1_IM), _MM_FROUND_TO_NEAREST_INT));

_mm256_storeu_si256((__m256i*)((*oBase)[2][0][0] + offs[0]), _mm512_cvtps_ph(_mm512_mask_compress_ps(_mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[2][0][0] + offs[0]))), 0xffff, out_S0_C2_RE), _MM_FROUND_TO_NEAREST_INT));

_mm256_storeu_si256((__m256i*)((*oBase)[2][0][1] + offs[0]), _mm512_cvtps_ph(_mm512_mask_compress_ps(_mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[2][0][1] + offs[0]))), 0xffff, out_S0_C2_IM), _MM_FROUND_TO_NEAREST_INT));

_mm256_storeu_si256((__m256i*)((*oBase)[0][1][0] + offs[0]), _mm512_cvtps_ph(_mm512_mask_compress_ps(_mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[0][1][0] + offs[0]))), 0xffff, out_S1_C0_RE), _MM_FROUND_TO_NEAREST_INT));

_mm256_storeu_si256((__m256i*)((*oBase)[0][1][1] + offs[0]), _mm512_cvtps_ph(_mm512_mask_compress_ps(_mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[0][1][1] + offs[0]))), 0xffff, out_S1_C0_IM), _MM_FROUND_TO_NEAREST_INT));

_mm256_storeu_si256((__m256i*)((*oBase)[1][1][0] + offs[0]), _mm512_cvtps_ph(_mm512_mask_compress_ps(_mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[1][1][0] + offs[0]))), 0xffff, out_S1_C1_RE), _MM_FROUND_TO_NEAREST_INT));

 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+352) + offs[0]) ), _MM_HINT_T1);

_mm256_storeu_si256((__m256i*)((*oBase)[1][1][1] + offs[0]), _mm512_cvtps_ph(_mm512_mask_compress_ps(_mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[1][1][1] + offs[0]))), 0xffff, out_S1_C1_IM), _MM_FROUND_TO_NEAREST_INT));

_mm256_storeu_si256((__m256i*)((*oBase)[2][1][0] + offs[0]), _mm512_cvtps_ph(_mm512_mask_compress_ps(_mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[2][1][0] + offs[0]))), 0xffff, out_S1_C2_RE), _MM_FROUND_TO_NEAREST_INT));

_mm256_storeu_si256((__m256i*)((*oBase)[2][1][1] + offs[0]), _mm512_cvtps_ph(_mm512_mask_compress_ps(_mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[2][1][1] + offs[0]))), 0xffff, out_S1_C2_IM), _MM_FROUND_TO_NEAREST_INT));

_mm256_storeu_si256((__m256i*)((*oBase)[0][2][0] + offs[0]), _mm512_cvtps_ph(_mm512_mask_compress_ps(_mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[0][2][0] + offs[0]))), 0xffff, out_S2_C0_RE), _MM_FROUND_TO_NEAREST_INT));

_mm256_storeu_si256((__m256i*)((*oBase)[0][2][1] + offs[0]), _mm512_cvtps_ph(_mm512_mask_compress_ps(_mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[0][2][1] + offs[0]))), 0xffff, out_S2_C0_IM), _MM_FROUND_TO_NEAREST_INT));

_mm256_storeu_si256((__m256i*)((*oBase)[1][2][0] + offs[0]), _mm512_cvtps_ph(_mm512_mask_compress_ps(_mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[1][2][0] + offs[0]))), 0xffff, out_S2_C1_RE), _MM_FROUND_TO_NEAREST_INT));

_mm256_storeu_si256((__m256i*)((*oBase)[1][2][1] + offs[0]), _mm512_cvtps_ph(_mm512_mask_compress_ps(_mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[1][2][1] + offs[0]))), 0xffff, out_S2_C1_IM), _MM_FROUND_TO_NEAREST_INT));

_mm256_storeu_si256((__m256i*)((*oBase)[2][2][0] + offs[0]), _mm512_cvtps_ph(_mm512_mask_compress_ps(_mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[2][2][0] + offs[0]))), 0xffff, out_S2_C2_RE), _MM_FROUND_TO_NEAREST_INT));

_mm256_storeu_si256((__m256i*)((*oBase)[2][2][1] + offs[0]), _mm512_cvtps_ph(_mm512_mask_compress_ps(_mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[2][2][1] + offs[0]))), 0xffff, out_S2_C2_IM), _MM_FROUND_TO_NEAREST_INT));

_mm256_storeu_si256((__m256i*)((*oBase)[0][3][0] + offs[0]), _mm512_cvtps_ph(_mm512_mask_compress_ps(_mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[0][3][0] + offs[0]))), 0xffff, out_S3_C0_RE), _MM_FROUND_TO_NEAREST_INT));

_mm256_storeu_si256((__m256i*)((*oBase)[0][3][1] + offs[0]), _mm512_cvtps_ph(_mm512_mask_compress_ps(_mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[0][3][1] + offs[0]))), 0xffff, out_S3_C0_IM), _MM_FROUND_TO_NEAREST_INT));

_mm256_storeu_si256((__m256i*)((*oBase)[1][3][0] + offs[0]), _mm512_cvtps_ph(_mm512_mask_compress_ps(_mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[1][3][0] + offs[0]))), 0xffff, out_S3_C1_RE), _MM_FROUND_TO_NEAREST_INT));

_mm256_storeu_si256((__m256i*)((*oBase)[1][3][1] + offs[0]), _mm512_cvtps_ph(_mm512_mask_compress_ps(_mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[1][3][1] + offs[0]))), 0xffff, out_S3_C1_IM), _MM_FROUND_TO_NEAREST_INT));

_mm256_storeu_si256((__m256i*)((*oBase)[2][3][0] + offs[0]), _mm512_cvtps_ph(_mm512_mask_compress_ps(_mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[2][3][0] + offs[0]))), 0xffff, out_S3_C2_RE), _MM_FROUND_TO_NEAREST_INT));

_mm256_storeu_si256((__m256i*)((*oBase)[2][3][1] + offs[0]), _mm512_cvtps_ph(_mm512_mask_compress_ps(_mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*oBase)[2][3][1] + offs[0]))), 0xffff, out_S3_C2_IM), _MM_FROUND_TO_NEAREST_INT));


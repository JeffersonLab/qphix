__m512 b_S0_C0_RE = _mm512_setzero_ps(); 
__m512 b_S0_C0_IM = _mm512_setzero_ps(); 
__m512 b_S0_C1_RE = _mm512_setzero_ps(); 
__m512 b_S0_C1_IM = _mm512_setzero_ps(); 
__m512 b_S0_C2_RE = _mm512_setzero_ps(); 
__m512 b_S0_C2_IM = _mm512_setzero_ps(); 
__m512 b_S1_C0_RE = _mm512_setzero_ps(); 
__m512 b_S1_C0_IM = _mm512_setzero_ps(); 
__m512 b_S1_C1_RE = _mm512_setzero_ps(); 
__m512 b_S1_C1_IM = _mm512_setzero_ps(); 
__m512 b_S1_C2_RE = _mm512_setzero_ps(); 
__m512 b_S1_C2_IM = _mm512_setzero_ps(); 
__m512 ub_S0_C0_RE = _mm512_setzero_ps(); 
__m512 ub_S0_C0_IM = _mm512_setzero_ps(); 
__m512 ub_S0_C1_RE = _mm512_setzero_ps(); 
__m512 ub_S0_C1_IM = _mm512_setzero_ps(); 
__m512 ub_S0_C2_RE = _mm512_setzero_ps(); 
__m512 ub_S0_C2_IM = _mm512_setzero_ps(); 
__m512 ub_S1_C0_RE = _mm512_setzero_ps(); 
__m512 ub_S1_C0_IM = _mm512_setzero_ps(); 
__m512 ub_S1_C1_RE = _mm512_setzero_ps(); 
__m512 ub_S1_C1_IM = _mm512_setzero_ps(); 
__m512 ub_S1_C2_RE = _mm512_setzero_ps(); 
__m512 ub_S1_C2_IM = _mm512_setzero_ps(); 
__m512 u_00_re = _mm512_setzero_ps(); 
__m512 u_00_im = _mm512_setzero_ps(); 
__m512 u_01_re = _mm512_setzero_ps(); 
__m512 u_01_im = _mm512_setzero_ps(); 
__m512 u_02_re = _mm512_setzero_ps(); 
__m512 u_02_im = _mm512_setzero_ps(); 
__m512 u_10_re = _mm512_setzero_ps(); 
__m512 u_10_im = _mm512_setzero_ps(); 
__m512 u_11_re = _mm512_setzero_ps(); 
__m512 u_11_im = _mm512_setzero_ps(); 
__m512 u_12_re = _mm512_setzero_ps(); 
__m512 u_12_im = _mm512_setzero_ps(); 
__m512 u_20_re = _mm512_setzero_ps(); 
__m512 u_20_im = _mm512_setzero_ps(); 
__m512 u_21_re = _mm512_setzero_ps(); 
__m512 u_21_im = _mm512_setzero_ps(); 
__m512 u_22_re = _mm512_setzero_ps(); 
__m512 u_22_im = _mm512_setzero_ps(); 
__m512 psi_S0_RE = _mm512_setzero_ps(); 
__m512 psi_S0_IM = _mm512_setzero_ps(); 
__m512 psi_S1_RE = _mm512_setzero_ps(); 
__m512 psi_S1_IM = _mm512_setzero_ps(); 
__m512 tmp_1_re = _mm512_setzero_ps(); 
__m512 tmp_1_im = _mm512_setzero_ps(); 
__m512 tmp_2_re = _mm512_setzero_ps(); 
__m512 tmp_2_im = _mm512_setzero_ps(); 
__m512 tmp_3_re = _mm512_setzero_ps(); 
__m512 tmp_3_im = _mm512_setzero_ps(); 
__m512 tmp_4_re = _mm512_setzero_ps(); 
__m512 tmp_4_im = _mm512_setzero_ps(); 
__m512 zero = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+0) + pfyOffs[0]) ), _MM_HINT_T1);

zero = _mm512_setzero_ps(); 
__m512 out_S0_C0_RE = _mm512_setzero_ps(); 
__m512 out_S0_C0_IM = _mm512_setzero_ps(); 
__m512 out_S0_C1_RE = _mm512_setzero_ps(); 
__m512 out_S0_C1_IM = _mm512_setzero_ps(); 
__m512 out_S0_C2_RE = _mm512_setzero_ps(); 
__m512 out_S0_C2_IM = _mm512_setzero_ps(); 
__m512 out_S1_C0_RE = _mm512_setzero_ps(); 
__m512 out_S1_C0_IM = _mm512_setzero_ps(); 
__m512 out_S1_C1_RE = _mm512_setzero_ps(); 
__m512 out_S1_C1_IM = _mm512_setzero_ps(); 
__m512 out_S1_C2_RE = _mm512_setzero_ps(); 
__m512 out_S1_C2_IM = _mm512_setzero_ps(); 
__m512 out_S2_C0_RE = _mm512_setzero_ps(); 
__m512 out_S2_C0_IM = _mm512_setzero_ps(); 
__m512 out_S2_C1_RE = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+0) + pfyOffs[8]) ), _MM_HINT_T1);

__m512 out_S2_C1_IM = _mm512_setzero_ps(); 
__m512 out_S2_C2_RE = _mm512_setzero_ps(); 
__m512 out_S2_C2_IM = _mm512_setzero_ps(); 
__m512 out_S3_C0_RE = _mm512_setzero_ps(); 
__m512 out_S3_C0_IM = _mm512_setzero_ps(); 
__m512 out_S3_C1_RE = _mm512_setzero_ps(); 
__m512 out_S3_C1_IM = _mm512_setzero_ps(); 
__m512 out_S3_C2_RE = _mm512_setzero_ps(); 
__m512 out_S3_C2_IM = _mm512_setzero_ps(); 
__m512 chi_S0_C0_RE = _mm512_setzero_ps(); 
__m512 chi_S0_C0_IM = _mm512_setzero_ps(); 
__m512 chi_S0_C1_RE = _mm512_setzero_ps(); 
__m512 chi_S0_C1_IM = _mm512_setzero_ps(); 
__m512 chi_S0_C2_RE = _mm512_setzero_ps(); 
__m512 chi_S0_C2_IM = _mm512_setzero_ps(); 
__m512 chi_S1_C0_RE = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+32) + pfyOffs[0]) ), _MM_HINT_T1);

__m512 chi_S1_C0_IM = _mm512_setzero_ps(); 
__m512 chi_S1_C1_RE = _mm512_setzero_ps(); 
__m512 chi_S1_C1_IM = _mm512_setzero_ps(); 
__m512 chi_S1_C2_RE = _mm512_setzero_ps(); 
__m512 chi_S1_C2_IM = _mm512_setzero_ps(); 
__m512 chi_S2_C0_RE = _mm512_setzero_ps(); 
__m512 chi_S2_C0_IM = _mm512_setzero_ps(); 
__m512 chi_S2_C1_RE = _mm512_setzero_ps(); 
__m512 chi_S2_C1_IM = _mm512_setzero_ps(); 
__m512 chi_S2_C2_RE = _mm512_setzero_ps(); 
__m512 chi_S2_C2_IM = _mm512_setzero_ps(); 
__m512 chi_S3_C0_RE = _mm512_setzero_ps(); 
__m512 chi_S3_C0_IM = _mm512_setzero_ps(); 
__m512 chi_S3_C1_RE = _mm512_setzero_ps(); 
__m512 chi_S3_C1_IM = _mm512_setzero_ps(); 
__m512 chi_S3_C2_RE = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+32) + pfyOffs[8]) ), _MM_HINT_T1);

__m512 chi_S3_C2_IM = _mm512_setzero_ps(); 
__m512 alpha_vec = _mm512_setzero_ps(); 
alpha_vec = _mm512_cvtph_ps(_mm256_set1_epi16(*(&alpha)));

 _mm_prefetch((const char *)( (((*chiBase)[0][0][0]+0) + offs[0]) ), _MM_HINT_NTA);

 _mm_prefetch((const char *)( (((*chiBase)[0][0][0]+0) + offs[8]) ), _MM_HINT_NTA);

 _mm_prefetch((const char *)( (((*chiBase)[0][0][0]+32) + offs[0]) ), _MM_HINT_NTA);

 _mm_prefetch((const char *)( (((*chiBase)[0][0][0]+32) + offs[8]) ), _MM_HINT_NTA);

 _mm_prefetch((const char *)( (((*chiBase)[0][0][0]+64) + offs[0]) ), _MM_HINT_NTA);

 _mm_prefetch((const char *)( (((*chiBase)[0][0][0]+64) + offs[8]) ), _MM_HINT_NTA);

 _mm_prefetch((const char *)( (((*chiBase)[0][0][0]+96) + offs[0]) ), _MM_HINT_NTA);

 _mm_prefetch((const char *)( (((*chiBase)[0][0][0]+96) + offs[8]) ), _MM_HINT_NTA);

 _mm_prefetch((const char *)( (((*chiBase)[0][0][0]+128) + offs[0]) ), _MM_HINT_NTA);

 _mm_prefetch((const char *)( (((*chiBase)[0][0][0]+128) + offs[8]) ), _MM_HINT_NTA);

 _mm_prefetch((const char *)( (((*chiBase)[0][0][0]+160) + offs[0]) ), _MM_HINT_NTA);

 _mm_prefetch((const char *)( (((*chiBase)[0][0][0]+160) + offs[8]) ), _MM_HINT_NTA);

tmp_1_re = _mm512_undefined(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+64) + pfyOffs[0]) ), _MM_HINT_T1);

tmp_1_re = _mm512_mask_expand_ps(tmp_1_re, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][0][0] + offs[0]))));

tmp_1_re = _mm512_mask_expand_ps(tmp_1_re, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][0][0] + offs[8]))));

tmp_1_im = _mm512_undefined(); 
tmp_1_im = _mm512_mask_expand_ps(tmp_1_im, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][0][1] + offs[0]))));

tmp_1_im = _mm512_mask_expand_ps(tmp_1_im, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][0][1] + offs[8]))));

out_S0_C0_RE = _mm512_mul_ps( alpha_vec , tmp_1_re );
out_S0_C0_IM = _mm512_mul_ps( alpha_vec , tmp_1_im );
tmp_1_re = _mm512_undefined(); 
tmp_1_re = _mm512_mask_expand_ps(tmp_1_re, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][1][0] + offs[0]))));

tmp_1_re = _mm512_mask_expand_ps(tmp_1_re, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][1][0] + offs[8]))));

tmp_1_im = _mm512_undefined(); 
tmp_1_im = _mm512_mask_expand_ps(tmp_1_im, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][1][1] + offs[0]))));

tmp_1_im = _mm512_mask_expand_ps(tmp_1_im, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][1][1] + offs[8]))));

out_S1_C0_RE = _mm512_mul_ps( alpha_vec , tmp_1_re );
out_S1_C0_IM = _mm512_mul_ps( alpha_vec , tmp_1_im );
tmp_1_re = _mm512_undefined(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+64) + pfyOffs[8]) ), _MM_HINT_T1);

tmp_1_re = _mm512_mask_expand_ps(tmp_1_re, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][2][0] + offs[0]))));

tmp_1_re = _mm512_mask_expand_ps(tmp_1_re, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][2][0] + offs[8]))));

tmp_1_im = _mm512_undefined(); 
tmp_1_im = _mm512_mask_expand_ps(tmp_1_im, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][2][1] + offs[0]))));

tmp_1_im = _mm512_mask_expand_ps(tmp_1_im, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][2][1] + offs[8]))));

out_S2_C0_RE = _mm512_mul_ps( alpha_vec , tmp_1_re );
out_S2_C0_IM = _mm512_mul_ps( alpha_vec , tmp_1_im );
tmp_1_re = _mm512_undefined(); 
tmp_1_re = _mm512_mask_expand_ps(tmp_1_re, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][3][0] + offs[0]))));

tmp_1_re = _mm512_mask_expand_ps(tmp_1_re, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][3][0] + offs[8]))));

tmp_1_im = _mm512_undefined(); 
tmp_1_im = _mm512_mask_expand_ps(tmp_1_im, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][3][1] + offs[0]))));

tmp_1_im = _mm512_mask_expand_ps(tmp_1_im, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][3][1] + offs[8]))));

out_S3_C0_RE = _mm512_mul_ps( alpha_vec , tmp_1_re );
out_S3_C0_IM = _mm512_mul_ps( alpha_vec , tmp_1_im );
tmp_1_re = _mm512_undefined(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+96) + pfyOffs[0]) ), _MM_HINT_T1);

tmp_1_re = _mm512_mask_expand_ps(tmp_1_re, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][0][0] + offs[0]))));

tmp_1_re = _mm512_mask_expand_ps(tmp_1_re, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][0][0] + offs[8]))));

tmp_1_im = _mm512_undefined(); 
tmp_1_im = _mm512_mask_expand_ps(tmp_1_im, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][0][1] + offs[0]))));

tmp_1_im = _mm512_mask_expand_ps(tmp_1_im, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][0][1] + offs[8]))));

out_S0_C1_RE = _mm512_mul_ps( alpha_vec , tmp_1_re );
out_S0_C1_IM = _mm512_mul_ps( alpha_vec , tmp_1_im );
tmp_1_re = _mm512_undefined(); 
tmp_1_re = _mm512_mask_expand_ps(tmp_1_re, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][1][0] + offs[0]))));

tmp_1_re = _mm512_mask_expand_ps(tmp_1_re, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][1][0] + offs[8]))));

tmp_1_im = _mm512_undefined(); 
tmp_1_im = _mm512_mask_expand_ps(tmp_1_im, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][1][1] + offs[0]))));

tmp_1_im = _mm512_mask_expand_ps(tmp_1_im, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][1][1] + offs[8]))));

out_S1_C1_RE = _mm512_mul_ps( alpha_vec , tmp_1_re );
out_S1_C1_IM = _mm512_mul_ps( alpha_vec , tmp_1_im );
tmp_1_re = _mm512_undefined(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+96) + pfyOffs[8]) ), _MM_HINT_T1);

tmp_1_re = _mm512_mask_expand_ps(tmp_1_re, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][2][0] + offs[0]))));

tmp_1_re = _mm512_mask_expand_ps(tmp_1_re, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][2][0] + offs[8]))));

tmp_1_im = _mm512_undefined(); 
tmp_1_im = _mm512_mask_expand_ps(tmp_1_im, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][2][1] + offs[0]))));

tmp_1_im = _mm512_mask_expand_ps(tmp_1_im, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][2][1] + offs[8]))));

out_S2_C1_RE = _mm512_mul_ps( alpha_vec , tmp_1_re );
out_S2_C1_IM = _mm512_mul_ps( alpha_vec , tmp_1_im );
tmp_1_re = _mm512_undefined(); 
tmp_1_re = _mm512_mask_expand_ps(tmp_1_re, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][3][0] + offs[0]))));

tmp_1_re = _mm512_mask_expand_ps(tmp_1_re, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][3][0] + offs[8]))));

tmp_1_im = _mm512_undefined(); 
tmp_1_im = _mm512_mask_expand_ps(tmp_1_im, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][3][1] + offs[0]))));

tmp_1_im = _mm512_mask_expand_ps(tmp_1_im, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][3][1] + offs[8]))));

out_S3_C1_RE = _mm512_mul_ps( alpha_vec , tmp_1_re );
out_S3_C1_IM = _mm512_mul_ps( alpha_vec , tmp_1_im );
tmp_1_re = _mm512_undefined(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+128) + pfyOffs[0]) ), _MM_HINT_T1);

tmp_1_re = _mm512_mask_expand_ps(tmp_1_re, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][0][0] + offs[0]))));

tmp_1_re = _mm512_mask_expand_ps(tmp_1_re, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][0][0] + offs[8]))));

tmp_1_im = _mm512_undefined(); 
tmp_1_im = _mm512_mask_expand_ps(tmp_1_im, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][0][1] + offs[0]))));

tmp_1_im = _mm512_mask_expand_ps(tmp_1_im, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][0][1] + offs[8]))));

out_S0_C2_RE = _mm512_mul_ps( alpha_vec , tmp_1_re );
out_S0_C2_IM = _mm512_mul_ps( alpha_vec , tmp_1_im );
tmp_1_re = _mm512_undefined(); 
tmp_1_re = _mm512_mask_expand_ps(tmp_1_re, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][1][0] + offs[0]))));

tmp_1_re = _mm512_mask_expand_ps(tmp_1_re, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][1][0] + offs[8]))));

tmp_1_im = _mm512_undefined(); 
tmp_1_im = _mm512_mask_expand_ps(tmp_1_im, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][1][1] + offs[0]))));

tmp_1_im = _mm512_mask_expand_ps(tmp_1_im, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][1][1] + offs[8]))));

out_S1_C2_RE = _mm512_mul_ps( alpha_vec , tmp_1_re );
out_S1_C2_IM = _mm512_mul_ps( alpha_vec , tmp_1_im );
tmp_1_re = _mm512_undefined(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+128) + pfyOffs[8]) ), _MM_HINT_T1);

tmp_1_re = _mm512_mask_expand_ps(tmp_1_re, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][2][0] + offs[0]))));

tmp_1_re = _mm512_mask_expand_ps(tmp_1_re, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][2][0] + offs[8]))));

tmp_1_im = _mm512_undefined(); 
tmp_1_im = _mm512_mask_expand_ps(tmp_1_im, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][2][1] + offs[0]))));

tmp_1_im = _mm512_mask_expand_ps(tmp_1_im, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][2][1] + offs[8]))));

out_S2_C2_RE = _mm512_mul_ps( alpha_vec , tmp_1_re );
out_S2_C2_IM = _mm512_mul_ps( alpha_vec , tmp_1_im );
tmp_1_re = _mm512_undefined(); 
tmp_1_re = _mm512_mask_expand_ps(tmp_1_re, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][3][0] + offs[0]))));

tmp_1_re = _mm512_mask_expand_ps(tmp_1_re, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][3][0] + offs[8]))));

tmp_1_im = _mm512_undefined(); 
tmp_1_im = _mm512_mask_expand_ps(tmp_1_im, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][3][1] + offs[0]))));

tmp_1_im = _mm512_mask_expand_ps(tmp_1_im, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][3][1] + offs[8]))));

out_S3_C2_RE = _mm512_mul_ps( alpha_vec , tmp_1_re );
out_S3_C2_IM = _mm512_mul_ps( alpha_vec , tmp_1_im );
 if ( accumulate[0] ) { 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+160) + pfyOffs[0]) ), _MM_HINT_T1);

__m512 beta_vec = _mm512_setzero_ps(); 
beta_vec = _mm512_cvtph_ps(_mm256_set1_epi16(*(&coeff_s)));

__mmask accMask;

accMask = accumulate[0];

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+0) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+0) + xbOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+32) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+32) + xbOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+64) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+64) + xbOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+96) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+96) + xbOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+128) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+128) + xbOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+160) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+160) + xbOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+160) + pfyOffs[8]) ), _MM_HINT_T1);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + xbOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xfe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + xbOffs[1]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + xbOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xfe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + xbOffs[9]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + xbOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xfe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + xbOffs[1]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + xbOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xfe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + xbOffs[9]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + xbOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xfe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + xbOffs[1]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + xbOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xfe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + xbOffs[9]))));

psi_S1_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+0) + offs[0]) ), _MM_HINT_T1);

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + xbOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xfe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + xbOffs[1]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + xbOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xfe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + xbOffs[9]))));

b_S0_C0_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S0_C0_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + xbOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xfe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + xbOffs[1]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + xbOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xfe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + xbOffs[9]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + xbOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xfe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + xbOffs[1]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + xbOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xfe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + xbOffs[9]))));

 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+0) + offs[8]) ), _MM_HINT_T1);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + xbOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xfe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + xbOffs[1]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + xbOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xfe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + xbOffs[9]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + xbOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xfe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + xbOffs[1]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + xbOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xfe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + xbOffs[9]))));

b_S0_C1_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S0_C1_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + xbOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xfe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + xbOffs[1]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + xbOffs[8]))));

 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+32) + offs[0]) ), _MM_HINT_T1);

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xfe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + xbOffs[9]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + xbOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xfe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + xbOffs[1]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + xbOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xfe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + xbOffs[9]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + xbOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xfe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + xbOffs[1]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + xbOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xfe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + xbOffs[9]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + xbOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xfe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + xbOffs[1]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + xbOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xfe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + xbOffs[9]))));

 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+32) + offs[8]) ), _MM_HINT_T1);

b_S0_C2_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S0_C2_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+160) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+192) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+224) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+256) ), _MM_HINT_T0);

u_00_re = _mm512_mask_cvtph_ps(u_00_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[0][0][0][0]));

u_00_im = _mm512_mask_cvtph_ps(u_00_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[0][0][0][1]));

u_01_re = _mm512_mask_cvtph_ps(u_01_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[0][0][1][0]));

u_01_im = _mm512_mask_cvtph_ps(u_01_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[0][0][1][1]));

u_02_re = _mm512_mask_cvtph_ps(u_02_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[0][0][2][0]));

 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+64) + offs[0]) ), _MM_HINT_T1);

u_02_im = _mm512_mask_cvtph_ps(u_02_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[0][0][2][1]));

u_10_re = _mm512_mask_cvtph_ps(u_10_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[0][1][0][0]));

u_10_im = _mm512_mask_cvtph_ps(u_10_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[0][1][0][1]));

u_11_re = _mm512_mask_cvtph_ps(u_11_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[0][1][1][0]));

u_11_im = _mm512_mask_cvtph_ps(u_11_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[0][1][1][1]));

u_12_re = _mm512_mask_cvtph_ps(u_12_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[0][1][2][0]));

u_12_im = _mm512_mask_cvtph_ps(u_12_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[0][1][2][1]));

u_20_re = _mm512_mask_cvtph_ps(u_20_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[0][2][0][0]));

u_20_im = _mm512_mask_cvtph_ps(u_20_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[0][2][0][1]));

u_21_re = _mm512_mask_cvtph_ps(u_21_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[0][2][1][0]));

u_21_im = _mm512_mask_cvtph_ps(u_21_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[0][2][1][1]));

u_22_re = _mm512_mask_cvtph_ps(u_22_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[0][2][2][0]));

u_22_im = _mm512_mask_cvtph_ps(u_22_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[0][2][2][1]));

ub_S0_C0_RE = _mm512_mul_ps( u_00_re , b_S0_C0_RE );
ub_S0_C0_RE = _mm512_fmadd_ps(u_00_im, b_S0_C0_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_mul_ps( u_00_re , b_S0_C0_IM );
 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+64) + offs[8]) ), _MM_HINT_T1);

ub_S0_C0_IM = _mm512_fnmadd_ps(u_00_im, b_S0_C0_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_01_re, b_S0_C1_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fmadd_ps(u_01_im, b_S0_C1_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_01_re, b_S0_C1_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fnmadd_ps(u_01_im, b_S0_C1_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_02_re, b_S0_C2_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fmadd_ps(u_02_im, b_S0_C2_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_02_re, b_S0_C2_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fnmadd_ps(u_02_im, b_S0_C2_RE, ub_S0_C0_IM);
ub_S0_C1_RE = _mm512_mul_ps( u_10_re , b_S0_C0_RE );
ub_S0_C1_RE = _mm512_fmadd_ps(u_10_im, b_S0_C0_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_mul_ps( u_10_re , b_S0_C0_IM );
ub_S0_C1_IM = _mm512_fnmadd_ps(u_10_im, b_S0_C0_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_re, b_S0_C1_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_im, b_S0_C1_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_re, b_S0_C1_IM, ub_S0_C1_IM);
 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+96) + offs[0]) ), _MM_HINT_T1);

ub_S0_C1_IM = _mm512_fnmadd_ps(u_11_im, b_S0_C1_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_12_re, b_S0_C2_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fmadd_ps(u_12_im, b_S0_C2_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_12_re, b_S0_C2_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fnmadd_ps(u_12_im, b_S0_C2_RE, ub_S0_C1_IM);
ub_S0_C2_RE = _mm512_mul_ps( u_20_re , b_S0_C0_RE );
ub_S0_C2_RE = _mm512_fmadd_ps(u_20_im, b_S0_C0_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_mul_ps( u_20_re , b_S0_C0_IM );
ub_S0_C2_IM = _mm512_fnmadd_ps(u_20_im, b_S0_C0_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_21_re, b_S0_C1_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fmadd_ps(u_21_im, b_S0_C1_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_21_re, b_S0_C1_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fnmadd_ps(u_21_im, b_S0_C1_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_22_re, b_S0_C2_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fmadd_ps(u_22_im, b_S0_C2_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_re, b_S0_C2_IM, ub_S0_C2_IM);
 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+96) + offs[8]) ), _MM_HINT_T1);

ub_S0_C2_IM = _mm512_fnmadd_ps(u_22_im, b_S0_C2_RE, ub_S0_C2_IM);
out_S0_C0_RE = _mm512_mask_mov_ps(out_S0_C0_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C0_RE, out_S0_C0_RE));
out_S0_C0_IM = _mm512_mask_mov_ps(out_S0_C0_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C0_IM, out_S0_C0_IM));
out_S0_C1_RE = _mm512_mask_mov_ps(out_S0_C1_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C1_RE, out_S0_C1_RE));
out_S0_C1_IM = _mm512_mask_mov_ps(out_S0_C1_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C1_IM, out_S0_C1_IM));
out_S0_C2_RE = _mm512_mask_mov_ps(out_S0_C2_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C2_RE, out_S0_C2_RE));
out_S0_C2_IM = _mm512_mask_mov_ps(out_S0_C2_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C2_IM, out_S0_C2_IM));
out_S3_C0_RE = _mm512_mask_mov_ps(out_S3_C0_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C0_IM, out_S3_C0_RE));
out_S3_C0_IM = _mm512_mask_mov_ps(out_S3_C0_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C0_RE, out_S3_C0_IM));
out_S3_C1_RE = _mm512_mask_mov_ps(out_S3_C1_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C1_IM, out_S3_C1_RE));
out_S3_C1_IM = _mm512_mask_mov_ps(out_S3_C1_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C1_RE, out_S3_C1_IM));
out_S3_C2_RE = _mm512_mask_mov_ps(out_S3_C2_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C2_IM, out_S3_C2_RE));
out_S3_C2_IM = _mm512_mask_mov_ps(out_S3_C2_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C2_RE, out_S3_C2_IM));
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + xbOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xfe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + xbOffs[1]))));

 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+128) + offs[0]) ), _MM_HINT_T1);

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + xbOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xfe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + xbOffs[9]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + xbOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xfe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + xbOffs[1]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + xbOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xfe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + xbOffs[9]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + xbOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xfe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + xbOffs[1]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + xbOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xfe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + xbOffs[9]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + xbOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xfe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + xbOffs[1]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + xbOffs[8]))));

 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+128) + offs[8]) ), _MM_HINT_T1);

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xfe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + xbOffs[9]))));

b_S1_C0_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S1_C0_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + xbOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xfe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + xbOffs[1]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + xbOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xfe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + xbOffs[9]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + xbOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xfe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + xbOffs[1]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + xbOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xfe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + xbOffs[9]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + xbOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xfe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + xbOffs[1]))));

 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+160) + offs[0]) ), _MM_HINT_T1);

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + xbOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xfe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + xbOffs[9]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + xbOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xfe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + xbOffs[1]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + xbOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xfe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + xbOffs[9]))));

b_S1_C1_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S1_C1_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + xbOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xfe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + xbOffs[1]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + xbOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xfe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + xbOffs[9]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + xbOffs[0]))));

 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+160) + offs[8]) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xfe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + xbOffs[1]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + xbOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xfe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + xbOffs[9]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + xbOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xfe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + xbOffs[1]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + xbOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xfe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + xbOffs[9]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + xbOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xfe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + xbOffs[1]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + xbOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xfe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + xbOffs[9]))));

b_S1_C2_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S1_C2_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
ub_S1_C0_RE = _mm512_mul_ps( u_00_re , b_S1_C0_RE );
 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+0) + offs[0]) ), _MM_HINT_T1);

ub_S1_C0_RE = _mm512_fmadd_ps(u_00_im, b_S1_C0_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_mul_ps( u_00_re , b_S1_C0_IM );
ub_S1_C0_IM = _mm512_fnmadd_ps(u_00_im, b_S1_C0_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_01_re, b_S1_C1_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fmadd_ps(u_01_im, b_S1_C1_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_01_re, b_S1_C1_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fnmadd_ps(u_01_im, b_S1_C1_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_02_re, b_S1_C2_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fmadd_ps(u_02_im, b_S1_C2_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_02_re, b_S1_C2_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fnmadd_ps(u_02_im, b_S1_C2_RE, ub_S1_C0_IM);
ub_S1_C1_RE = _mm512_mul_ps( u_10_re , b_S1_C0_RE );
ub_S1_C1_RE = _mm512_fmadd_ps(u_10_im, b_S1_C0_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_mul_ps( u_10_re , b_S1_C0_IM );
ub_S1_C1_IM = _mm512_fnmadd_ps(u_10_im, b_S1_C0_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_re, b_S1_C1_RE, ub_S1_C1_RE);
 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+0) + offs[8]) ), _MM_HINT_T1);

ub_S1_C1_RE = _mm512_fmadd_ps(u_11_im, b_S1_C1_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_re, b_S1_C1_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fnmadd_ps(u_11_im, b_S1_C1_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_12_re, b_S1_C2_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fmadd_ps(u_12_im, b_S1_C2_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_12_re, b_S1_C2_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fnmadd_ps(u_12_im, b_S1_C2_RE, ub_S1_C1_IM);
ub_S1_C2_RE = _mm512_mul_ps( u_20_re , b_S1_C0_RE );
ub_S1_C2_RE = _mm512_fmadd_ps(u_20_im, b_S1_C0_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_mul_ps( u_20_re , b_S1_C0_IM );
ub_S1_C2_IM = _mm512_fnmadd_ps(u_20_im, b_S1_C0_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_21_re, b_S1_C1_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fmadd_ps(u_21_im, b_S1_C1_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_21_re, b_S1_C1_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fnmadd_ps(u_21_im, b_S1_C1_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_22_re, b_S1_C2_RE, ub_S1_C2_RE);
 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+32) + offs[0]) ), _MM_HINT_T1);

ub_S1_C2_RE = _mm512_fmadd_ps(u_22_im, b_S1_C2_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_re, b_S1_C2_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fnmadd_ps(u_22_im, b_S1_C2_RE, ub_S1_C2_IM);
out_S1_C0_RE = _mm512_mask_mov_ps(out_S1_C0_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C0_RE, out_S1_C0_RE));
out_S1_C0_IM = _mm512_mask_mov_ps(out_S1_C0_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C0_IM, out_S1_C0_IM));
out_S1_C1_RE = _mm512_mask_mov_ps(out_S1_C1_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C1_RE, out_S1_C1_RE));
out_S1_C1_IM = _mm512_mask_mov_ps(out_S1_C1_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C1_IM, out_S1_C1_IM));
out_S1_C2_RE = _mm512_mask_mov_ps(out_S1_C2_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C2_RE, out_S1_C2_RE));
out_S1_C2_IM = _mm512_mask_mov_ps(out_S1_C2_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C2_IM, out_S1_C2_IM));
out_S2_C0_RE = _mm512_mask_mov_ps(out_S2_C0_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C0_IM, out_S2_C0_RE));
out_S2_C0_IM = _mm512_mask_mov_ps(out_S2_C0_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C0_RE, out_S2_C0_IM));
out_S2_C1_RE = _mm512_mask_mov_ps(out_S2_C1_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C1_IM, out_S2_C1_RE));
out_S2_C1_IM = _mm512_mask_mov_ps(out_S2_C1_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C1_RE, out_S2_C1_IM));
out_S2_C2_RE = _mm512_mask_mov_ps(out_S2_C2_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C2_IM, out_S2_C2_RE));
out_S2_C2_IM = _mm512_mask_mov_ps(out_S2_C2_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C2_RE, out_S2_C2_IM));
}
 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+32) + offs[8]) ), _MM_HINT_T1);

 if ( accumulate[1] ) { 
__m512 beta_vec = _mm512_setzero_ps(); 
beta_vec = _mm512_cvtph_ps(_mm256_set1_epi16(*(&coeff_s)));

__mmask accMask;

accMask = accumulate[1];

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+0) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+0) + xfOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+32) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+32) + xfOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+64) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+64) + xfOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+96) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+96) + xfOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+128) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+128) + xfOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+160) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+64) + offs[0]) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+160) + xfOffs[8]) ), _MM_HINT_T0);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x7f, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + xfOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + xfOffs[7]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x7f00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + xfOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + xfOffs[15]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x7f, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + xfOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + xfOffs[7]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x7f00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + xfOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + xfOffs[15]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x7f, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + xfOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + xfOffs[7]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x7f00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + xfOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + xfOffs[15]))));

 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+64) + offs[8]) ), _MM_HINT_T1);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x7f, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + xfOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + xfOffs[7]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x7f00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + xfOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + xfOffs[15]))));

b_S0_C0_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S0_C0_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x7f, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + xfOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + xfOffs[7]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x7f00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + xfOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + xfOffs[15]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x7f, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + xfOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + xfOffs[7]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x7f00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + xfOffs[8]))));

 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+96) + offs[0]) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + xfOffs[15]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x7f, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + xfOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + xfOffs[7]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x7f00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + xfOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + xfOffs[15]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x7f, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + xfOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + xfOffs[7]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x7f00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + xfOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + xfOffs[15]))));

b_S0_C1_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S0_C1_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x7f, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + xfOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + xfOffs[7]))));

 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+96) + offs[8]) ), _MM_HINT_T1);

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x7f00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + xfOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + xfOffs[15]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x7f, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + xfOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + xfOffs[7]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x7f00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + xfOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + xfOffs[15]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x7f, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + xfOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + xfOffs[7]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x7f00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + xfOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + xfOffs[15]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x7f, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + xfOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + xfOffs[7]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x7f00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + xfOffs[8]))));

 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+128) + offs[0]) ), _MM_HINT_T1);

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + xfOffs[15]))));

b_S0_C2_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S0_C2_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+160) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+192) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+224) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+256) ), _MM_HINT_T0);

u_00_re = _mm512_mask_cvtph_ps(u_00_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[1][0][0][0]));

u_00_im = _mm512_mask_cvtph_ps(u_00_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[1][0][0][1]));

u_01_re = _mm512_mask_cvtph_ps(u_01_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[1][0][1][0]));

u_01_im = _mm512_mask_cvtph_ps(u_01_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[1][0][1][1]));

 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+128) + offs[8]) ), _MM_HINT_T1);

u_02_re = _mm512_mask_cvtph_ps(u_02_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[1][0][2][0]));

u_02_im = _mm512_mask_cvtph_ps(u_02_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[1][0][2][1]));

u_10_re = _mm512_mask_cvtph_ps(u_10_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[1][1][0][0]));

u_10_im = _mm512_mask_cvtph_ps(u_10_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[1][1][0][1]));

u_11_re = _mm512_mask_cvtph_ps(u_11_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[1][1][1][0]));

u_11_im = _mm512_mask_cvtph_ps(u_11_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[1][1][1][1]));

u_12_re = _mm512_mask_cvtph_ps(u_12_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[1][1][2][0]));

u_12_im = _mm512_mask_cvtph_ps(u_12_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[1][1][2][1]));

u_20_re = _mm512_mask_cvtph_ps(u_20_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[1][2][0][0]));

u_20_im = _mm512_mask_cvtph_ps(u_20_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[1][2][0][1]));

u_21_re = _mm512_mask_cvtph_ps(u_21_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[1][2][1][0]));

u_21_im = _mm512_mask_cvtph_ps(u_21_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[1][2][1][1]));

u_22_re = _mm512_mask_cvtph_ps(u_22_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[1][2][2][0]));

u_22_im = _mm512_mask_cvtph_ps(u_22_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[1][2][2][1]));

ub_S0_C0_RE = _mm512_mul_ps( u_00_re , b_S0_C0_RE );
ub_S0_C0_RE = _mm512_fnmadd_ps(u_00_im, b_S0_C0_IM, ub_S0_C0_RE);
 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+160) + offs[0]) ), _MM_HINT_T1);

ub_S0_C0_IM = _mm512_mul_ps( u_00_re , b_S0_C0_IM );
ub_S0_C0_IM = _mm512_fmadd_ps(u_00_im, b_S0_C0_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_10_re, b_S0_C1_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fnmadd_ps(u_10_im, b_S0_C1_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_10_re, b_S0_C1_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fmadd_ps(u_10_im, b_S0_C1_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_20_re, b_S0_C2_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fnmadd_ps(u_20_im, b_S0_C2_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_20_re, b_S0_C2_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fmadd_ps(u_20_im, b_S0_C2_RE, ub_S0_C0_IM);
ub_S0_C1_RE = _mm512_mul_ps( u_01_re , b_S0_C0_RE );
ub_S0_C1_RE = _mm512_fnmadd_ps(u_01_im, b_S0_C0_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_mul_ps( u_01_re , b_S0_C0_IM );
ub_S0_C1_IM = _mm512_fmadd_ps(u_01_im, b_S0_C0_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_re, b_S0_C1_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fnmadd_ps(u_11_im, b_S0_C1_IM, ub_S0_C1_RE);
 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+160) + offs[8]) ), _MM_HINT_T1);

ub_S0_C1_IM = _mm512_fmadd_ps(u_11_re, b_S0_C1_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_im, b_S0_C1_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_21_re, b_S0_C2_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fnmadd_ps(u_21_im, b_S0_C2_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_21_re, b_S0_C2_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fmadd_ps(u_21_im, b_S0_C2_RE, ub_S0_C1_IM);
ub_S0_C2_RE = _mm512_mul_ps( u_02_re , b_S0_C0_RE );
ub_S0_C2_RE = _mm512_fnmadd_ps(u_02_im, b_S0_C0_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_mul_ps( u_02_re , b_S0_C0_IM );
ub_S0_C2_IM = _mm512_fmadd_ps(u_02_im, b_S0_C0_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_12_re, b_S0_C1_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fnmadd_ps(u_12_im, b_S0_C1_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_12_re, b_S0_C1_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fmadd_ps(u_12_im, b_S0_C1_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_22_re, b_S0_C2_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fnmadd_ps(u_22_im, b_S0_C2_IM, ub_S0_C2_RE);
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+0) + offs[0]) ), _MM_HINT_T1);

ub_S0_C2_IM = _mm512_fmadd_ps(u_22_re, b_S0_C2_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_im, b_S0_C2_RE, ub_S0_C2_IM);
out_S0_C0_RE = _mm512_mask_mov_ps(out_S0_C0_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C0_RE, out_S0_C0_RE));
out_S0_C0_IM = _mm512_mask_mov_ps(out_S0_C0_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C0_IM, out_S0_C0_IM));
out_S0_C1_RE = _mm512_mask_mov_ps(out_S0_C1_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C1_RE, out_S0_C1_RE));
out_S0_C1_IM = _mm512_mask_mov_ps(out_S0_C1_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C1_IM, out_S0_C1_IM));
out_S0_C2_RE = _mm512_mask_mov_ps(out_S0_C2_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C2_RE, out_S0_C2_RE));
out_S0_C2_IM = _mm512_mask_mov_ps(out_S0_C2_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C2_IM, out_S0_C2_IM));
out_S3_C0_RE = _mm512_mask_mov_ps(out_S3_C0_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C0_IM, out_S3_C0_RE));
out_S3_C0_IM = _mm512_mask_mov_ps(out_S3_C0_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C0_RE, out_S3_C0_IM));
out_S3_C1_RE = _mm512_mask_mov_ps(out_S3_C1_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C1_IM, out_S3_C1_RE));
out_S3_C1_IM = _mm512_mask_mov_ps(out_S3_C1_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C1_RE, out_S3_C1_IM));
out_S3_C2_RE = _mm512_mask_mov_ps(out_S3_C2_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C2_IM, out_S3_C2_RE));
out_S3_C2_IM = _mm512_mask_mov_ps(out_S3_C2_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C2_RE, out_S3_C2_IM));
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x7f, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + xfOffs[0]))));

 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+0) + offs[8]) ), _MM_HINT_T1);

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + xfOffs[7]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x7f00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + xfOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + xfOffs[15]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x7f, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + xfOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + xfOffs[7]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x7f00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + xfOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + xfOffs[15]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x7f, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + xfOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + xfOffs[7]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x7f00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + xfOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + xfOffs[15]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x7f, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + xfOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + xfOffs[7]))));

 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+32) + offs[0]) ), _MM_HINT_T1);

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x7f00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + xfOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + xfOffs[15]))));

b_S1_C0_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S1_C0_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x7f, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + xfOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + xfOffs[7]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x7f00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + xfOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + xfOffs[15]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x7f, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + xfOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + xfOffs[7]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x7f00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + xfOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + xfOffs[15]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x7f, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + xfOffs[0]))));

 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+32) + offs[8]) ), _MM_HINT_T1);

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + xfOffs[7]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x7f00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + xfOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + xfOffs[15]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x7f, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + xfOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + xfOffs[7]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x7f00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + xfOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + xfOffs[15]))));

b_S1_C1_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S1_C1_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x7f, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + xfOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + xfOffs[7]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x7f00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + xfOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + xfOffs[15]))));

psi_S0_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+64) + offs[0]) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x7f, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + xfOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + xfOffs[7]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x7f00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + xfOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + xfOffs[15]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x7f, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + xfOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + xfOffs[7]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x7f00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + xfOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + xfOffs[15]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x7f, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + xfOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + xfOffs[7]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x7f00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + xfOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + xfOffs[15]))));

b_S1_C2_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S1_C2_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+64) + offs[8]) ), _MM_HINT_T1);

ub_S1_C0_RE = _mm512_mul_ps( u_00_re , b_S1_C0_RE );
ub_S1_C0_RE = _mm512_fnmadd_ps(u_00_im, b_S1_C0_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_mul_ps( u_00_re , b_S1_C0_IM );
ub_S1_C0_IM = _mm512_fmadd_ps(u_00_im, b_S1_C0_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_10_re, b_S1_C1_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fnmadd_ps(u_10_im, b_S1_C1_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_10_re, b_S1_C1_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fmadd_ps(u_10_im, b_S1_C1_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_20_re, b_S1_C2_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fnmadd_ps(u_20_im, b_S1_C2_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_20_re, b_S1_C2_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fmadd_ps(u_20_im, b_S1_C2_RE, ub_S1_C0_IM);
ub_S1_C1_RE = _mm512_mul_ps( u_01_re , b_S1_C0_RE );
ub_S1_C1_RE = _mm512_fnmadd_ps(u_01_im, b_S1_C0_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_mul_ps( u_01_re , b_S1_C0_IM );
ub_S1_C1_IM = _mm512_fmadd_ps(u_01_im, b_S1_C0_RE, ub_S1_C1_IM);
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+96) + offs[0]) ), _MM_HINT_T1);

ub_S1_C1_RE = _mm512_fmadd_ps(u_11_re, b_S1_C1_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fnmadd_ps(u_11_im, b_S1_C1_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_re, b_S1_C1_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_im, b_S1_C1_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_21_re, b_S1_C2_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fnmadd_ps(u_21_im, b_S1_C2_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_21_re, b_S1_C2_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fmadd_ps(u_21_im, b_S1_C2_RE, ub_S1_C1_IM);
ub_S1_C2_RE = _mm512_mul_ps( u_02_re , b_S1_C0_RE );
ub_S1_C2_RE = _mm512_fnmadd_ps(u_02_im, b_S1_C0_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_mul_ps( u_02_re , b_S1_C0_IM );
ub_S1_C2_IM = _mm512_fmadd_ps(u_02_im, b_S1_C0_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_12_re, b_S1_C1_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fnmadd_ps(u_12_im, b_S1_C1_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_12_re, b_S1_C1_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fmadd_ps(u_12_im, b_S1_C1_RE, ub_S1_C2_IM);
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+96) + offs[8]) ), _MM_HINT_T1);

ub_S1_C2_RE = _mm512_fmadd_ps(u_22_re, b_S1_C2_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fnmadd_ps(u_22_im, b_S1_C2_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_re, b_S1_C2_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_im, b_S1_C2_RE, ub_S1_C2_IM);
out_S1_C0_RE = _mm512_mask_mov_ps(out_S1_C0_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C0_RE, out_S1_C0_RE));
out_S1_C0_IM = _mm512_mask_mov_ps(out_S1_C0_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C0_IM, out_S1_C0_IM));
out_S1_C1_RE = _mm512_mask_mov_ps(out_S1_C1_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C1_RE, out_S1_C1_RE));
out_S1_C1_IM = _mm512_mask_mov_ps(out_S1_C1_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C1_IM, out_S1_C1_IM));
out_S1_C2_RE = _mm512_mask_mov_ps(out_S1_C2_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C2_RE, out_S1_C2_RE));
out_S1_C2_IM = _mm512_mask_mov_ps(out_S1_C2_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C2_IM, out_S1_C2_IM));
out_S2_C0_RE = _mm512_mask_mov_ps(out_S2_C0_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C0_IM, out_S2_C0_RE));
out_S2_C0_IM = _mm512_mask_mov_ps(out_S2_C0_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C0_RE, out_S2_C0_IM));
out_S2_C1_RE = _mm512_mask_mov_ps(out_S2_C1_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C1_IM, out_S2_C1_RE));
out_S2_C1_IM = _mm512_mask_mov_ps(out_S2_C1_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C1_RE, out_S2_C1_IM));
out_S2_C2_RE = _mm512_mask_mov_ps(out_S2_C2_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C2_IM, out_S2_C2_RE));
out_S2_C2_IM = _mm512_mask_mov_ps(out_S2_C2_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C2_RE, out_S2_C2_IM));
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+128) + offs[0]) ), _MM_HINT_T1);

}
 if ( accumulate[2] ) { 
__m512 beta_vec = _mm512_setzero_ps(); 
beta_vec = _mm512_cvtph_ps(_mm256_set1_epi16(*(&coeff_s)));

__mmask accMask;

accMask = accumulate[2];

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+0) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+0) + ybOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+32) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+32) + ybOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+64) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+64) + ybOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+96) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+96) + ybOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+128) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+128) + ybOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+128) + offs[8]) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+160) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+160) + ybOffs[8]) ), _MM_HINT_T0);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + ybOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + ybOffs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + ybOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + ybOffs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + ybOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + ybOffs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + ybOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + ybOffs[8]))));

b_S0_C0_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S0_C0_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+160) + offs[0]) ), _MM_HINT_T1);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + ybOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + ybOffs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + ybOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + ybOffs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + ybOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + ybOffs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + ybOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + ybOffs[8]))));

b_S0_C1_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S0_C1_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + ybOffs[0]))));

 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+160) + offs[8]) ), _MM_HINT_T1);

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + ybOffs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + ybOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + ybOffs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + ybOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + ybOffs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + ybOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + ybOffs[8]))));

b_S0_C2_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S0_C2_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((((*pfBaseChi)[0][0][0] + chiprefdist)+0) + offs[0]) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+160) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+192) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+224) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+256) ), _MM_HINT_T0);

u_00_re = _mm512_mask_cvtph_ps(u_00_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[2][0][0][0]));

u_00_im = _mm512_mask_cvtph_ps(u_00_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[2][0][0][1]));

u_01_re = _mm512_mask_cvtph_ps(u_01_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[2][0][1][0]));

u_01_im = _mm512_mask_cvtph_ps(u_01_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[2][0][1][1]));

u_02_re = _mm512_mask_cvtph_ps(u_02_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[2][0][2][0]));

u_02_im = _mm512_mask_cvtph_ps(u_02_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[2][0][2][1]));

u_10_re = _mm512_mask_cvtph_ps(u_10_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[2][1][0][0]));

u_10_im = _mm512_mask_cvtph_ps(u_10_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[2][1][0][1]));

u_11_re = _mm512_mask_cvtph_ps(u_11_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[2][1][1][0]));

u_11_im = _mm512_mask_cvtph_ps(u_11_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[2][1][1][1]));

u_12_re = _mm512_mask_cvtph_ps(u_12_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[2][1][2][0]));

 _mm_prefetch((const char *)( ((((*pfBaseChi)[0][0][0] + chiprefdist)+0) + offs[8]) ), _MM_HINT_T1);

u_12_im = _mm512_mask_cvtph_ps(u_12_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[2][1][2][1]));

u_20_re = _mm512_mask_cvtph_ps(u_20_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[2][2][0][0]));

u_20_im = _mm512_mask_cvtph_ps(u_20_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[2][2][0][1]));

u_21_re = _mm512_mask_cvtph_ps(u_21_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[2][2][1][0]));

u_21_im = _mm512_mask_cvtph_ps(u_21_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[2][2][1][1]));

u_22_re = _mm512_mask_cvtph_ps(u_22_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[2][2][2][0]));

u_22_im = _mm512_mask_cvtph_ps(u_22_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[2][2][2][1]));

ub_S0_C0_RE = _mm512_mul_ps( u_00_re , b_S0_C0_RE );
ub_S0_C0_RE = _mm512_fmadd_ps(u_00_im, b_S0_C0_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_mul_ps( u_00_re , b_S0_C0_IM );
ub_S0_C0_IM = _mm512_fnmadd_ps(u_00_im, b_S0_C0_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_01_re, b_S0_C1_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fmadd_ps(u_01_im, b_S0_C1_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_01_re, b_S0_C1_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fnmadd_ps(u_01_im, b_S0_C1_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_02_re, b_S0_C2_RE, ub_S0_C0_RE);
 _mm_prefetch((const char *)( ((((*pfBaseChi)[0][0][0] + chiprefdist)+32) + offs[0]) ), _MM_HINT_T1);

ub_S0_C0_RE = _mm512_fmadd_ps(u_02_im, b_S0_C2_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_02_re, b_S0_C2_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fnmadd_ps(u_02_im, b_S0_C2_RE, ub_S0_C0_IM);
ub_S0_C1_RE = _mm512_mul_ps( u_10_re , b_S0_C0_RE );
ub_S0_C1_RE = _mm512_fmadd_ps(u_10_im, b_S0_C0_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_mul_ps( u_10_re , b_S0_C0_IM );
ub_S0_C1_IM = _mm512_fnmadd_ps(u_10_im, b_S0_C0_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_re, b_S0_C1_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_im, b_S0_C1_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_re, b_S0_C1_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fnmadd_ps(u_11_im, b_S0_C1_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_12_re, b_S0_C2_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fmadd_ps(u_12_im, b_S0_C2_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_12_re, b_S0_C2_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fnmadd_ps(u_12_im, b_S0_C2_RE, ub_S0_C1_IM);
ub_S0_C2_RE = _mm512_mul_ps( u_20_re , b_S0_C0_RE );
 _mm_prefetch((const char *)( ((((*pfBaseChi)[0][0][0] + chiprefdist)+32) + offs[8]) ), _MM_HINT_T1);

ub_S0_C2_RE = _mm512_fmadd_ps(u_20_im, b_S0_C0_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_mul_ps( u_20_re , b_S0_C0_IM );
ub_S0_C2_IM = _mm512_fnmadd_ps(u_20_im, b_S0_C0_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_21_re, b_S0_C1_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fmadd_ps(u_21_im, b_S0_C1_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_21_re, b_S0_C1_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fnmadd_ps(u_21_im, b_S0_C1_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_22_re, b_S0_C2_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fmadd_ps(u_22_im, b_S0_C2_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_re, b_S0_C2_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fnmadd_ps(u_22_im, b_S0_C2_RE, ub_S0_C2_IM);
out_S0_C0_RE = _mm512_mask_mov_ps(out_S0_C0_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C0_RE, out_S0_C0_RE));
out_S0_C0_IM = _mm512_mask_mov_ps(out_S0_C0_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C0_IM, out_S0_C0_IM));
out_S0_C1_RE = _mm512_mask_mov_ps(out_S0_C1_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C1_RE, out_S0_C1_RE));
out_S0_C1_IM = _mm512_mask_mov_ps(out_S0_C1_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C1_IM, out_S0_C1_IM));
out_S0_C2_RE = _mm512_mask_mov_ps(out_S0_C2_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C2_RE, out_S0_C2_RE));
 _mm_prefetch((const char *)( ((((*pfBaseChi)[0][0][0] + chiprefdist)+64) + offs[0]) ), _MM_HINT_T1);

out_S0_C2_IM = _mm512_mask_mov_ps(out_S0_C2_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C2_IM, out_S0_C2_IM));
out_S3_C0_RE = _mm512_mask_mov_ps(out_S3_C0_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C0_RE, out_S3_C0_RE));
out_S3_C0_IM = _mm512_mask_mov_ps(out_S3_C0_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C0_IM, out_S3_C0_IM));
out_S3_C1_RE = _mm512_mask_mov_ps(out_S3_C1_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C1_RE, out_S3_C1_RE));
out_S3_C1_IM = _mm512_mask_mov_ps(out_S3_C1_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C1_IM, out_S3_C1_IM));
out_S3_C2_RE = _mm512_mask_mov_ps(out_S3_C2_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C2_RE, out_S3_C2_RE));
out_S3_C2_IM = _mm512_mask_mov_ps(out_S3_C2_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C2_IM, out_S3_C2_IM));
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + ybOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + ybOffs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + ybOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + ybOffs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + ybOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + ybOffs[8]))));

 _mm_prefetch((const char *)( ((((*pfBaseChi)[0][0][0] + chiprefdist)+64) + offs[8]) ), _MM_HINT_T1);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + ybOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + ybOffs[8]))));

b_S1_C0_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
b_S1_C0_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + ybOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + ybOffs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + ybOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + ybOffs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + ybOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + ybOffs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + ybOffs[0]))));

 _mm_prefetch((const char *)( ((((*pfBaseChi)[0][0][0] + chiprefdist)+96) + offs[0]) ), _MM_HINT_T1);

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + ybOffs[8]))));

b_S1_C1_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
b_S1_C1_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + ybOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + ybOffs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + ybOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + ybOffs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + ybOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + ybOffs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + ybOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + ybOffs[8]))));

b_S1_C2_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
 _mm_prefetch((const char *)( ((((*pfBaseChi)[0][0][0] + chiprefdist)+96) + offs[8]) ), _MM_HINT_T1);

b_S1_C2_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
ub_S1_C0_RE = _mm512_mul_ps( u_00_re , b_S1_C0_RE );
ub_S1_C0_RE = _mm512_fmadd_ps(u_00_im, b_S1_C0_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_mul_ps( u_00_re , b_S1_C0_IM );
ub_S1_C0_IM = _mm512_fnmadd_ps(u_00_im, b_S1_C0_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_01_re, b_S1_C1_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fmadd_ps(u_01_im, b_S1_C1_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_01_re, b_S1_C1_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fnmadd_ps(u_01_im, b_S1_C1_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_02_re, b_S1_C2_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fmadd_ps(u_02_im, b_S1_C2_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_02_re, b_S1_C2_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fnmadd_ps(u_02_im, b_S1_C2_RE, ub_S1_C0_IM);
ub_S1_C1_RE = _mm512_mul_ps( u_10_re , b_S1_C0_RE );
ub_S1_C1_RE = _mm512_fmadd_ps(u_10_im, b_S1_C0_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_mul_ps( u_10_re , b_S1_C0_IM );
 _mm_prefetch((const char *)( ((((*pfBaseChi)[0][0][0] + chiprefdist)+128) + offs[0]) ), _MM_HINT_T1);

ub_S1_C1_IM = _mm512_fnmadd_ps(u_10_im, b_S1_C0_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_re, b_S1_C1_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_im, b_S1_C1_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_re, b_S1_C1_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fnmadd_ps(u_11_im, b_S1_C1_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_12_re, b_S1_C2_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fmadd_ps(u_12_im, b_S1_C2_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_12_re, b_S1_C2_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fnmadd_ps(u_12_im, b_S1_C2_RE, ub_S1_C1_IM);
ub_S1_C2_RE = _mm512_mul_ps( u_20_re , b_S1_C0_RE );
ub_S1_C2_RE = _mm512_fmadd_ps(u_20_im, b_S1_C0_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_mul_ps( u_20_re , b_S1_C0_IM );
ub_S1_C2_IM = _mm512_fnmadd_ps(u_20_im, b_S1_C0_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_21_re, b_S1_C1_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fmadd_ps(u_21_im, b_S1_C1_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_21_re, b_S1_C1_IM, ub_S1_C2_IM);
 _mm_prefetch((const char *)( ((((*pfBaseChi)[0][0][0] + chiprefdist)+128) + offs[8]) ), _MM_HINT_T1);

ub_S1_C2_IM = _mm512_fnmadd_ps(u_21_im, b_S1_C1_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_22_re, b_S1_C2_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fmadd_ps(u_22_im, b_S1_C2_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_re, b_S1_C2_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fnmadd_ps(u_22_im, b_S1_C2_RE, ub_S1_C2_IM);
out_S1_C0_RE = _mm512_mask_mov_ps(out_S1_C0_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C0_RE, out_S1_C0_RE));
out_S1_C0_IM = _mm512_mask_mov_ps(out_S1_C0_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C0_IM, out_S1_C0_IM));
out_S1_C1_RE = _mm512_mask_mov_ps(out_S1_C1_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C1_RE, out_S1_C1_RE));
out_S1_C1_IM = _mm512_mask_mov_ps(out_S1_C1_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C1_IM, out_S1_C1_IM));
out_S1_C2_RE = _mm512_mask_mov_ps(out_S1_C2_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C2_RE, out_S1_C2_RE));
out_S1_C2_IM = _mm512_mask_mov_ps(out_S1_C2_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C2_IM, out_S1_C2_IM));
out_S2_C0_RE = _mm512_mask_mov_ps(out_S2_C0_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C0_RE, out_S2_C0_RE));
out_S2_C0_IM = _mm512_mask_mov_ps(out_S2_C0_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C0_IM, out_S2_C0_IM));
out_S2_C1_RE = _mm512_mask_mov_ps(out_S2_C1_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C1_RE, out_S2_C1_RE));
out_S2_C1_IM = _mm512_mask_mov_ps(out_S2_C1_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C1_IM, out_S2_C1_IM));
out_S2_C2_RE = _mm512_mask_mov_ps(out_S2_C2_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C2_RE, out_S2_C2_RE));
 _mm_prefetch((const char *)( ((((*pfBaseChi)[0][0][0] + chiprefdist)+160) + offs[0]) ), _MM_HINT_T1);

out_S2_C2_IM = _mm512_mask_mov_ps(out_S2_C2_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C2_IM, out_S2_C2_IM));
}
 if ( accumulate[3] ) { 
__m512 beta_vec = _mm512_setzero_ps(); 
beta_vec = _mm512_cvtph_ps(_mm256_set1_epi16(*(&coeff_s)));

__mmask accMask;

accMask = accumulate[3];

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+0) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+0) + yfOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+32) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+32) + yfOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+64) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+64) + yfOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+96) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+96) + yfOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+128) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((((*pfBaseChi)[0][0][0] + chiprefdist)+160) + offs[8]) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+128) + yfOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+160) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+160) + yfOffs[8]) ), _MM_HINT_T0);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + yfOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + yfOffs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + yfOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + yfOffs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + yfOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + yfOffs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + yfOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + yfOffs[8]))));

b_S0_C0_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+0) ), _MM_HINT_T1);

b_S0_C0_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + yfOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + yfOffs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + yfOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + yfOffs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + yfOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + yfOffs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + yfOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + yfOffs[8]))));

b_S0_C1_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
b_S0_C1_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+32) ), _MM_HINT_T1);

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + yfOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + yfOffs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + yfOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + yfOffs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + yfOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + yfOffs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + yfOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + yfOffs[8]))));

b_S0_C2_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
b_S0_C2_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+64) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+160) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+192) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+224) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+256) ), _MM_HINT_T0);

u_00_re = _mm512_mask_cvtph_ps(u_00_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[3][0][0][0]));

u_00_im = _mm512_mask_cvtph_ps(u_00_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[3][0][0][1]));

u_01_re = _mm512_mask_cvtph_ps(u_01_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[3][0][1][0]));

u_01_im = _mm512_mask_cvtph_ps(u_01_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[3][0][1][1]));

u_02_re = _mm512_mask_cvtph_ps(u_02_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[3][0][2][0]));

u_02_im = _mm512_mask_cvtph_ps(u_02_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[3][0][2][1]));

u_10_re = _mm512_mask_cvtph_ps(u_10_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[3][1][0][0]));

u_10_im = _mm512_mask_cvtph_ps(u_10_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[3][1][0][1]));

u_11_re = _mm512_mask_cvtph_ps(u_11_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[3][1][1][0]));

u_11_im = _mm512_mask_cvtph_ps(u_11_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[3][1][1][1]));

 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+96) ), _MM_HINT_T1);

u_12_re = _mm512_mask_cvtph_ps(u_12_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[3][1][2][0]));

u_12_im = _mm512_mask_cvtph_ps(u_12_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[3][1][2][1]));

u_20_re = _mm512_mask_cvtph_ps(u_20_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[3][2][0][0]));

u_20_im = _mm512_mask_cvtph_ps(u_20_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[3][2][0][1]));

u_21_re = _mm512_mask_cvtph_ps(u_21_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[3][2][1][0]));

u_21_im = _mm512_mask_cvtph_ps(u_21_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[3][2][1][1]));

u_22_re = _mm512_mask_cvtph_ps(u_22_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[3][2][2][0]));

u_22_im = _mm512_mask_cvtph_ps(u_22_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[3][2][2][1]));

ub_S0_C0_RE = _mm512_mul_ps( u_00_re , b_S0_C0_RE );
ub_S0_C0_RE = _mm512_fnmadd_ps(u_00_im, b_S0_C0_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_mul_ps( u_00_re , b_S0_C0_IM );
ub_S0_C0_IM = _mm512_fmadd_ps(u_00_im, b_S0_C0_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_10_re, b_S0_C1_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fnmadd_ps(u_10_im, b_S0_C1_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_10_re, b_S0_C1_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fmadd_ps(u_10_im, b_S0_C1_RE, ub_S0_C0_IM);
 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+128) ), _MM_HINT_T1);

ub_S0_C0_RE = _mm512_fmadd_ps(u_20_re, b_S0_C2_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fnmadd_ps(u_20_im, b_S0_C2_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_20_re, b_S0_C2_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fmadd_ps(u_20_im, b_S0_C2_RE, ub_S0_C0_IM);
ub_S0_C1_RE = _mm512_mul_ps( u_01_re , b_S0_C0_RE );
ub_S0_C1_RE = _mm512_fnmadd_ps(u_01_im, b_S0_C0_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_mul_ps( u_01_re , b_S0_C0_IM );
ub_S0_C1_IM = _mm512_fmadd_ps(u_01_im, b_S0_C0_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_re, b_S0_C1_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fnmadd_ps(u_11_im, b_S0_C1_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_re, b_S0_C1_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_im, b_S0_C1_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_21_re, b_S0_C2_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fnmadd_ps(u_21_im, b_S0_C2_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_21_re, b_S0_C2_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fmadd_ps(u_21_im, b_S0_C2_RE, ub_S0_C1_IM);
 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+160) ), _MM_HINT_T1);

ub_S0_C2_RE = _mm512_mul_ps( u_02_re , b_S0_C0_RE );
ub_S0_C2_RE = _mm512_fnmadd_ps(u_02_im, b_S0_C0_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_mul_ps( u_02_re , b_S0_C0_IM );
ub_S0_C2_IM = _mm512_fmadd_ps(u_02_im, b_S0_C0_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_12_re, b_S0_C1_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fnmadd_ps(u_12_im, b_S0_C1_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_12_re, b_S0_C1_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fmadd_ps(u_12_im, b_S0_C1_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_22_re, b_S0_C2_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fnmadd_ps(u_22_im, b_S0_C2_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_re, b_S0_C2_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_im, b_S0_C2_RE, ub_S0_C2_IM);
out_S0_C0_RE = _mm512_mask_mov_ps(out_S0_C0_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C0_RE, out_S0_C0_RE));
out_S0_C0_IM = _mm512_mask_mov_ps(out_S0_C0_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C0_IM, out_S0_C0_IM));
out_S0_C1_RE = _mm512_mask_mov_ps(out_S0_C1_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C1_RE, out_S0_C1_RE));
out_S0_C1_IM = _mm512_mask_mov_ps(out_S0_C1_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C1_IM, out_S0_C1_IM));
 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+192) ), _MM_HINT_T1);

out_S0_C2_RE = _mm512_mask_mov_ps(out_S0_C2_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C2_RE, out_S0_C2_RE));
out_S0_C2_IM = _mm512_mask_mov_ps(out_S0_C2_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C2_IM, out_S0_C2_IM));
out_S3_C0_RE = _mm512_mask_mov_ps(out_S3_C0_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C0_RE, out_S3_C0_RE));
out_S3_C0_IM = _mm512_mask_mov_ps(out_S3_C0_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C0_IM, out_S3_C0_IM));
out_S3_C1_RE = _mm512_mask_mov_ps(out_S3_C1_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C1_RE, out_S3_C1_RE));
out_S3_C1_IM = _mm512_mask_mov_ps(out_S3_C1_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C1_IM, out_S3_C1_IM));
out_S3_C2_RE = _mm512_mask_mov_ps(out_S3_C2_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C2_RE, out_S3_C2_RE));
out_S3_C2_IM = _mm512_mask_mov_ps(out_S3_C2_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C2_IM, out_S3_C2_IM));
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + yfOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + yfOffs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + yfOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + yfOffs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + yfOffs[0]))));

 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+224) ), _MM_HINT_T1);

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + yfOffs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + yfOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + yfOffs[8]))));

b_S1_C0_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S1_C0_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + yfOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + yfOffs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + yfOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + yfOffs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + yfOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + yfOffs[8]))));

psi_S1_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+256) ), _MM_HINT_T1);

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + yfOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + yfOffs[8]))));

b_S1_C1_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S1_C1_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + yfOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + yfOffs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + yfOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + yfOffs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + yfOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + yfOffs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + yfOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + yfOffs[8]))));

 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+0) ), _MM_HINT_T1);

b_S1_C2_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S1_C2_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
ub_S1_C0_RE = _mm512_mul_ps( u_00_re , b_S1_C0_RE );
ub_S1_C0_RE = _mm512_fnmadd_ps(u_00_im, b_S1_C0_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_mul_ps( u_00_re , b_S1_C0_IM );
ub_S1_C0_IM = _mm512_fmadd_ps(u_00_im, b_S1_C0_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_10_re, b_S1_C1_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fnmadd_ps(u_10_im, b_S1_C1_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_10_re, b_S1_C1_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fmadd_ps(u_10_im, b_S1_C1_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_20_re, b_S1_C2_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fnmadd_ps(u_20_im, b_S1_C2_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_20_re, b_S1_C2_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fmadd_ps(u_20_im, b_S1_C2_RE, ub_S1_C0_IM);
ub_S1_C1_RE = _mm512_mul_ps( u_01_re , b_S1_C0_RE );
ub_S1_C1_RE = _mm512_fnmadd_ps(u_01_im, b_S1_C0_IM, ub_S1_C1_RE);
 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+32) ), _MM_HINT_T1);

ub_S1_C1_IM = _mm512_mul_ps( u_01_re , b_S1_C0_IM );
ub_S1_C1_IM = _mm512_fmadd_ps(u_01_im, b_S1_C0_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_re, b_S1_C1_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fnmadd_ps(u_11_im, b_S1_C1_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_re, b_S1_C1_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_im, b_S1_C1_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_21_re, b_S1_C2_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fnmadd_ps(u_21_im, b_S1_C2_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_21_re, b_S1_C2_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fmadd_ps(u_21_im, b_S1_C2_RE, ub_S1_C1_IM);
ub_S1_C2_RE = _mm512_mul_ps( u_02_re , b_S1_C0_RE );
ub_S1_C2_RE = _mm512_fnmadd_ps(u_02_im, b_S1_C0_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_mul_ps( u_02_re , b_S1_C0_IM );
ub_S1_C2_IM = _mm512_fmadd_ps(u_02_im, b_S1_C0_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_12_re, b_S1_C1_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fnmadd_ps(u_12_im, b_S1_C1_IM, ub_S1_C2_RE);
 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+64) ), _MM_HINT_T1);

ub_S1_C2_IM = _mm512_fmadd_ps(u_12_re, b_S1_C1_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fmadd_ps(u_12_im, b_S1_C1_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_22_re, b_S1_C2_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fnmadd_ps(u_22_im, b_S1_C2_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_re, b_S1_C2_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_im, b_S1_C2_RE, ub_S1_C2_IM);
out_S1_C0_RE = _mm512_mask_mov_ps(out_S1_C0_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C0_RE, out_S1_C0_RE));
out_S1_C0_IM = _mm512_mask_mov_ps(out_S1_C0_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C0_IM, out_S1_C0_IM));
out_S1_C1_RE = _mm512_mask_mov_ps(out_S1_C1_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C1_RE, out_S1_C1_RE));
out_S1_C1_IM = _mm512_mask_mov_ps(out_S1_C1_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C1_IM, out_S1_C1_IM));
out_S1_C2_RE = _mm512_mask_mov_ps(out_S1_C2_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C2_RE, out_S1_C2_RE));
out_S1_C2_IM = _mm512_mask_mov_ps(out_S1_C2_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C2_IM, out_S1_C2_IM));
out_S2_C0_RE = _mm512_mask_mov_ps(out_S2_C0_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C0_RE, out_S2_C0_RE));
out_S2_C0_IM = _mm512_mask_mov_ps(out_S2_C0_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C0_IM, out_S2_C0_IM));
out_S2_C1_RE = _mm512_mask_mov_ps(out_S2_C1_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C1_RE, out_S2_C1_RE));
out_S2_C1_IM = _mm512_mask_mov_ps(out_S2_C1_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C1_IM, out_S2_C1_IM));
 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+96) ), _MM_HINT_T1);

out_S2_C2_RE = _mm512_mask_mov_ps(out_S2_C2_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C2_RE, out_S2_C2_RE));
out_S2_C2_IM = _mm512_mask_mov_ps(out_S2_C2_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C2_IM, out_S2_C2_IM));
}
 if ( accumulate[4] ) { 
__m512 beta_vec = _mm512_setzero_ps(); 
beta_vec = _mm512_cvtph_ps(_mm256_set1_epi16(*(&coeff_s)));

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+0) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+0) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+32) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+32) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+64) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+64) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+96) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+96) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+128) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+128) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+128) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+160) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+160) + offs[8]) ), _MM_HINT_T0);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][0][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][0][0] + offs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][0][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][0][1] + offs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][2][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][2][0] + offs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][2][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][2][1] + offs[8]))));

b_S0_C0_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S0_C0_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+160) ), _MM_HINT_T1);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][0][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][0][0] + offs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][0][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][0][1] + offs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][2][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][2][0] + offs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][2][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][2][1] + offs[8]))));

b_S0_C1_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S0_C1_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][0][0] + offs[0]))));

 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+192) ), _MM_HINT_T1);

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][0][0] + offs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][0][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][0][1] + offs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][2][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][2][0] + offs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][2][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][2][1] + offs[8]))));

b_S0_C2_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S0_C2_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+224) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+160) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+192) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+224) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+256) ), _MM_HINT_T0);

u_00_re = _mm512_mask_cvtph_ps(u_00_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[4][0][0][0]));

u_00_im = _mm512_mask_cvtph_ps(u_00_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[4][0][0][1]));

u_01_re = _mm512_mask_cvtph_ps(u_01_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[4][0][1][0]));

u_01_im = _mm512_mask_cvtph_ps(u_01_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[4][0][1][1]));

u_02_re = _mm512_mask_cvtph_ps(u_02_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[4][0][2][0]));

u_02_im = _mm512_mask_cvtph_ps(u_02_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[4][0][2][1]));

u_10_re = _mm512_mask_cvtph_ps(u_10_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[4][1][0][0]));

u_10_im = _mm512_mask_cvtph_ps(u_10_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[4][1][0][1]));

u_11_re = _mm512_mask_cvtph_ps(u_11_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[4][1][1][0]));

u_11_im = _mm512_mask_cvtph_ps(u_11_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[4][1][1][1]));

u_12_re = _mm512_mask_cvtph_ps(u_12_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[4][1][2][0]));

 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+256) ), _MM_HINT_T1);

u_12_im = _mm512_mask_cvtph_ps(u_12_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[4][1][2][1]));

u_20_re = _mm512_mask_cvtph_ps(u_20_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[4][2][0][0]));

u_20_im = _mm512_mask_cvtph_ps(u_20_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[4][2][0][1]));

u_21_re = _mm512_mask_cvtph_ps(u_21_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[4][2][1][0]));

u_21_im = _mm512_mask_cvtph_ps(u_21_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[4][2][1][1]));

u_22_re = _mm512_mask_cvtph_ps(u_22_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[4][2][2][0]));

u_22_im = _mm512_mask_cvtph_ps(u_22_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[4][2][2][1]));

ub_S0_C0_RE = _mm512_mul_ps( u_00_re , b_S0_C0_RE );
ub_S0_C0_RE = _mm512_fmadd_ps(u_00_im, b_S0_C0_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_mul_ps( u_00_re , b_S0_C0_IM );
ub_S0_C0_IM = _mm512_fnmadd_ps(u_00_im, b_S0_C0_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_01_re, b_S0_C1_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fmadd_ps(u_01_im, b_S0_C1_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_01_re, b_S0_C1_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fnmadd_ps(u_01_im, b_S0_C1_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_02_re, b_S0_C2_RE, ub_S0_C0_RE);
 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+0) ), _MM_HINT_T1);

ub_S0_C0_RE = _mm512_fmadd_ps(u_02_im, b_S0_C2_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_02_re, b_S0_C2_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fnmadd_ps(u_02_im, b_S0_C2_RE, ub_S0_C0_IM);
ub_S0_C1_RE = _mm512_mul_ps( u_10_re , b_S0_C0_RE );
ub_S0_C1_RE = _mm512_fmadd_ps(u_10_im, b_S0_C0_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_mul_ps( u_10_re , b_S0_C0_IM );
ub_S0_C1_IM = _mm512_fnmadd_ps(u_10_im, b_S0_C0_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_re, b_S0_C1_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_im, b_S0_C1_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_re, b_S0_C1_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fnmadd_ps(u_11_im, b_S0_C1_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_12_re, b_S0_C2_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fmadd_ps(u_12_im, b_S0_C2_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_12_re, b_S0_C2_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fnmadd_ps(u_12_im, b_S0_C2_RE, ub_S0_C1_IM);
ub_S0_C2_RE = _mm512_mul_ps( u_20_re , b_S0_C0_RE );
 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+32) ), _MM_HINT_T1);

ub_S0_C2_RE = _mm512_fmadd_ps(u_20_im, b_S0_C0_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_mul_ps( u_20_re , b_S0_C0_IM );
ub_S0_C2_IM = _mm512_fnmadd_ps(u_20_im, b_S0_C0_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_21_re, b_S0_C1_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fmadd_ps(u_21_im, b_S0_C1_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_21_re, b_S0_C1_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fnmadd_ps(u_21_im, b_S0_C1_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_22_re, b_S0_C2_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fmadd_ps(u_22_im, b_S0_C2_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_re, b_S0_C2_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fnmadd_ps(u_22_im, b_S0_C2_RE, ub_S0_C2_IM);
out_S0_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_RE, out_S0_C0_RE);
out_S0_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_IM, out_S0_C0_IM);
out_S0_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_RE, out_S0_C1_RE);
out_S0_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_IM, out_S0_C1_IM);
out_S0_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_RE, out_S0_C2_RE);
 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+64) ), _MM_HINT_T1);

out_S0_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_IM, out_S0_C2_IM);
out_S2_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_IM, out_S2_C0_RE);
out_S2_C0_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C0_RE, out_S2_C0_IM);
out_S2_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_IM, out_S2_C1_RE);
out_S2_C1_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C1_RE, out_S2_C1_IM);
out_S2_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_IM, out_S2_C2_RE);
out_S2_C2_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C2_RE, out_S2_C2_IM);
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][1][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][1][0] + offs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][1][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][1][1] + offs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][3][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][3][0] + offs[8]))));

 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+96) ), _MM_HINT_T1);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][3][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][3][1] + offs[8]))));

b_S1_C0_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S1_C0_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][1][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][1][0] + offs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][1][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][1][1] + offs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][3][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][3][0] + offs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][3][1] + offs[0]))));

 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+128) ), _MM_HINT_T1);

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][3][1] + offs[8]))));

b_S1_C1_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S1_C1_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][1][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][1][0] + offs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][1][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][1][1] + offs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][3][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][3][0] + offs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][3][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][3][1] + offs[8]))));

b_S1_C2_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+160) ), _MM_HINT_T1);

b_S1_C2_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
ub_S1_C0_RE = _mm512_mul_ps( u_00_re , b_S1_C0_RE );
ub_S1_C0_RE = _mm512_fmadd_ps(u_00_im, b_S1_C0_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_mul_ps( u_00_re , b_S1_C0_IM );
ub_S1_C0_IM = _mm512_fnmadd_ps(u_00_im, b_S1_C0_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_01_re, b_S1_C1_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fmadd_ps(u_01_im, b_S1_C1_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_01_re, b_S1_C1_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fnmadd_ps(u_01_im, b_S1_C1_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_02_re, b_S1_C2_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fmadd_ps(u_02_im, b_S1_C2_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_02_re, b_S1_C2_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fnmadd_ps(u_02_im, b_S1_C2_RE, ub_S1_C0_IM);
ub_S1_C1_RE = _mm512_mul_ps( u_10_re , b_S1_C0_RE );
ub_S1_C1_RE = _mm512_fmadd_ps(u_10_im, b_S1_C0_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_mul_ps( u_10_re , b_S1_C0_IM );
 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+192) ), _MM_HINT_T1);

ub_S1_C1_IM = _mm512_fnmadd_ps(u_10_im, b_S1_C0_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_re, b_S1_C1_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_im, b_S1_C1_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_re, b_S1_C1_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fnmadd_ps(u_11_im, b_S1_C1_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_12_re, b_S1_C2_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fmadd_ps(u_12_im, b_S1_C2_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_12_re, b_S1_C2_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fnmadd_ps(u_12_im, b_S1_C2_RE, ub_S1_C1_IM);
ub_S1_C2_RE = _mm512_mul_ps( u_20_re , b_S1_C0_RE );
ub_S1_C2_RE = _mm512_fmadd_ps(u_20_im, b_S1_C0_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_mul_ps( u_20_re , b_S1_C0_IM );
ub_S1_C2_IM = _mm512_fnmadd_ps(u_20_im, b_S1_C0_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_21_re, b_S1_C1_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fmadd_ps(u_21_im, b_S1_C1_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_21_re, b_S1_C1_IM, ub_S1_C2_IM);
 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+224) ), _MM_HINT_T1);

ub_S1_C2_IM = _mm512_fnmadd_ps(u_21_im, b_S1_C1_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_22_re, b_S1_C2_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fmadd_ps(u_22_im, b_S1_C2_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_re, b_S1_C2_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fnmadd_ps(u_22_im, b_S1_C2_RE, ub_S1_C2_IM);
out_S1_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_RE, out_S1_C0_RE);
out_S1_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_IM, out_S1_C0_IM);
out_S1_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_RE, out_S1_C1_RE);
out_S1_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_IM, out_S1_C1_IM);
out_S1_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_RE, out_S1_C2_RE);
out_S1_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_IM, out_S1_C2_IM);
out_S3_C0_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C0_IM, out_S3_C0_RE);
out_S3_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_RE, out_S3_C0_IM);
out_S3_C1_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C1_IM, out_S3_C1_RE);
out_S3_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_RE, out_S3_C1_IM);
out_S3_C2_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C2_IM, out_S3_C2_RE);
 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+256) ), _MM_HINT_T1);

out_S3_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_RE, out_S3_C2_IM);
}
 if ( accumulate[5] ) { 
__m512 beta_vec = _mm512_setzero_ps(); 
beta_vec = _mm512_cvtph_ps(_mm256_set1_epi16(*(&coeff_s)));

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+0) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+0) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+32) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+32) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+64) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+64) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+96) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+96) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+128) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+128) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+160) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+0) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+160) + offs[8]) ), _MM_HINT_T0);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][0][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][0][0] + offs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][0][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][0][1] + offs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][2][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][2][0] + offs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][2][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][2][1] + offs[8]))));

b_S0_C0_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S0_C0_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+32) ), _MM_HINT_T1);

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][0][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][0][0] + offs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][0][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][0][1] + offs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][2][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][2][0] + offs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][2][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][2][1] + offs[8]))));

b_S0_C1_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S0_C1_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][0][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][0][0] + offs[8]))));

 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+64) ), _MM_HINT_T1);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][0][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][0][1] + offs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][2][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][2][0] + offs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][2][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][2][1] + offs[8]))));

b_S0_C2_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S0_C2_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+96) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+160) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+192) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+224) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+256) ), _MM_HINT_T0);

u_00_re = _mm512_mask_cvtph_ps(u_00_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][0][0][0]));

u_00_im = _mm512_mask_cvtph_ps(u_00_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][0][0][1]));

u_01_re = _mm512_mask_cvtph_ps(u_01_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][0][1][0]));

u_01_im = _mm512_mask_cvtph_ps(u_01_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][0][1][1]));

u_02_re = _mm512_mask_cvtph_ps(u_02_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][0][2][0]));

u_02_im = _mm512_mask_cvtph_ps(u_02_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][0][2][1]));

u_10_re = _mm512_mask_cvtph_ps(u_10_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][1][0][0]));

u_10_im = _mm512_mask_cvtph_ps(u_10_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][1][0][1]));

u_11_re = _mm512_mask_cvtph_ps(u_11_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][1][1][0]));

u_11_im = _mm512_mask_cvtph_ps(u_11_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][1][1][1]));

u_12_re = _mm512_mask_cvtph_ps(u_12_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][1][2][0]));

u_12_im = _mm512_mask_cvtph_ps(u_12_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][1][2][1]));

 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+128) ), _MM_HINT_T1);

u_20_re = _mm512_mask_cvtph_ps(u_20_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][2][0][0]));

u_20_im = _mm512_mask_cvtph_ps(u_20_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][2][0][1]));

u_21_re = _mm512_mask_cvtph_ps(u_21_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][2][1][0]));

u_21_im = _mm512_mask_cvtph_ps(u_21_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][2][1][1]));

u_22_re = _mm512_mask_cvtph_ps(u_22_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][2][2][0]));

u_22_im = _mm512_mask_cvtph_ps(u_22_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][2][2][1]));

ub_S0_C0_RE = _mm512_mul_ps( u_00_re , b_S0_C0_RE );
ub_S0_C0_RE = _mm512_fnmadd_ps(u_00_im, b_S0_C0_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_mul_ps( u_00_re , b_S0_C0_IM );
ub_S0_C0_IM = _mm512_fmadd_ps(u_00_im, b_S0_C0_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_10_re, b_S0_C1_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fnmadd_ps(u_10_im, b_S0_C1_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_10_re, b_S0_C1_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fmadd_ps(u_10_im, b_S0_C1_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_20_re, b_S0_C2_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fnmadd_ps(u_20_im, b_S0_C2_IM, ub_S0_C0_RE);
 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+160) ), _MM_HINT_T1);

ub_S0_C0_IM = _mm512_fmadd_ps(u_20_re, b_S0_C2_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fmadd_ps(u_20_im, b_S0_C2_RE, ub_S0_C0_IM);
ub_S0_C1_RE = _mm512_mul_ps( u_01_re , b_S0_C0_RE );
ub_S0_C1_RE = _mm512_fnmadd_ps(u_01_im, b_S0_C0_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_mul_ps( u_01_re , b_S0_C0_IM );
ub_S0_C1_IM = _mm512_fmadd_ps(u_01_im, b_S0_C0_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_re, b_S0_C1_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fnmadd_ps(u_11_im, b_S0_C1_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_re, b_S0_C1_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_im, b_S0_C1_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_21_re, b_S0_C2_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fnmadd_ps(u_21_im, b_S0_C2_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_21_re, b_S0_C2_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fmadd_ps(u_21_im, b_S0_C2_RE, ub_S0_C1_IM);
ub_S0_C2_RE = _mm512_mul_ps( u_02_re , b_S0_C0_RE );
ub_S0_C2_RE = _mm512_fnmadd_ps(u_02_im, b_S0_C0_IM, ub_S0_C2_RE);
 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+192) ), _MM_HINT_T1);

ub_S0_C2_IM = _mm512_mul_ps( u_02_re , b_S0_C0_IM );
ub_S0_C2_IM = _mm512_fmadd_ps(u_02_im, b_S0_C0_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_12_re, b_S0_C1_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fnmadd_ps(u_12_im, b_S0_C1_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_12_re, b_S0_C1_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fmadd_ps(u_12_im, b_S0_C1_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_22_re, b_S0_C2_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fnmadd_ps(u_22_im, b_S0_C2_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_re, b_S0_C2_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_im, b_S0_C2_RE, ub_S0_C2_IM);
out_S0_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_RE, out_S0_C0_RE);
out_S0_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_IM, out_S0_C0_IM);
out_S0_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_RE, out_S0_C1_RE);
out_S0_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_IM, out_S0_C1_IM);
out_S0_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_RE, out_S0_C2_RE);
out_S0_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_IM, out_S0_C2_IM);
 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+224) ), _MM_HINT_T1);

out_S2_C0_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C0_IM, out_S2_C0_RE);
out_S2_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_RE, out_S2_C0_IM);
out_S2_C1_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C1_IM, out_S2_C1_RE);
out_S2_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_RE, out_S2_C1_IM);
out_S2_C2_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C2_IM, out_S2_C2_RE);
out_S2_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_RE, out_S2_C2_IM);
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][1][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][1][0] + offs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][1][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][1][1] + offs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][3][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][3][0] + offs[8]))));

psi_S1_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+256) ), _MM_HINT_T1);

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][3][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][3][1] + offs[8]))));

b_S1_C0_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S1_C0_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][1][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][1][0] + offs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][1][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][1][1] + offs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][3][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][3][0] + offs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][3][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][3][1] + offs[8]))));

 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+0) ), _MM_HINT_T1);

b_S1_C1_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S1_C1_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][1][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][1][0] + offs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][1][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][1][1] + offs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][3][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][3][0] + offs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][3][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][3][1] + offs[8]))));

b_S1_C2_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S1_C2_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+32) ), _MM_HINT_T1);

ub_S1_C0_RE = _mm512_mul_ps( u_00_re , b_S1_C0_RE );
ub_S1_C0_RE = _mm512_fnmadd_ps(u_00_im, b_S1_C0_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_mul_ps( u_00_re , b_S1_C0_IM );
ub_S1_C0_IM = _mm512_fmadd_ps(u_00_im, b_S1_C0_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_10_re, b_S1_C1_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fnmadd_ps(u_10_im, b_S1_C1_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_10_re, b_S1_C1_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fmadd_ps(u_10_im, b_S1_C1_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_20_re, b_S1_C2_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fnmadd_ps(u_20_im, b_S1_C2_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_20_re, b_S1_C2_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fmadd_ps(u_20_im, b_S1_C2_RE, ub_S1_C0_IM);
ub_S1_C1_RE = _mm512_mul_ps( u_01_re , b_S1_C0_RE );
ub_S1_C1_RE = _mm512_fnmadd_ps(u_01_im, b_S1_C0_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_mul_ps( u_01_re , b_S1_C0_IM );
ub_S1_C1_IM = _mm512_fmadd_ps(u_01_im, b_S1_C0_RE, ub_S1_C1_IM);
 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+64) ), _MM_HINT_T1);

ub_S1_C1_RE = _mm512_fmadd_ps(u_11_re, b_S1_C1_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fnmadd_ps(u_11_im, b_S1_C1_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_re, b_S1_C1_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_im, b_S1_C1_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_21_re, b_S1_C2_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fnmadd_ps(u_21_im, b_S1_C2_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_21_re, b_S1_C2_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fmadd_ps(u_21_im, b_S1_C2_RE, ub_S1_C1_IM);
ub_S1_C2_RE = _mm512_mul_ps( u_02_re , b_S1_C0_RE );
ub_S1_C2_RE = _mm512_fnmadd_ps(u_02_im, b_S1_C0_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_mul_ps( u_02_re , b_S1_C0_IM );
ub_S1_C2_IM = _mm512_fmadd_ps(u_02_im, b_S1_C0_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_12_re, b_S1_C1_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fnmadd_ps(u_12_im, b_S1_C1_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_12_re, b_S1_C1_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fmadd_ps(u_12_im, b_S1_C1_RE, ub_S1_C2_IM);
 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+96) ), _MM_HINT_T1);

ub_S1_C2_RE = _mm512_fmadd_ps(u_22_re, b_S1_C2_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fnmadd_ps(u_22_im, b_S1_C2_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_re, b_S1_C2_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_im, b_S1_C2_RE, ub_S1_C2_IM);
out_S1_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_RE, out_S1_C0_RE);
out_S1_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_IM, out_S1_C0_IM);
out_S1_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_RE, out_S1_C1_RE);
out_S1_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_IM, out_S1_C1_IM);
out_S1_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_RE, out_S1_C2_RE);
out_S1_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_IM, out_S1_C2_IM);
out_S3_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_IM, out_S3_C0_RE);
out_S3_C0_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C0_RE, out_S3_C0_IM);
out_S3_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_IM, out_S3_C1_RE);
out_S3_C1_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C1_RE, out_S3_C1_IM);
out_S3_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_IM, out_S3_C2_RE);
out_S3_C2_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C2_RE, out_S3_C2_IM);
 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+128) ), _MM_HINT_T1);

}
 if ( accumulate[6] ) { 
__m512 beta_vec = _mm512_setzero_ps(); 
beta_vec = _mm512_cvtph_ps(_mm256_set1_epi16(*(&coeff_t_b)));

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+0) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+0) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+32) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+32) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+64) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+64) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+96) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+96) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+128) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+128) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+160) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+160) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+160) ), _MM_HINT_T1);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][0][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][0][0] + offs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][0][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][0][1] + offs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][2][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][2][0] + offs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][2][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][2][1] + offs[8]))));

b_S0_C0_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
b_S0_C0_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][0][0] + offs[0]))));

 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+192) ), _MM_HINT_T1);

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][0][0] + offs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][0][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][0][1] + offs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][2][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][2][0] + offs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][2][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][2][1] + offs[8]))));

b_S0_C1_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
b_S0_C1_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][0][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][0][0] + offs[8]))));

psi_S0_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+224) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][0][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][0][1] + offs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][2][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][2][0] + offs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][2][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][2][1] + offs[8]))));

b_S0_C2_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
b_S0_C2_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+160) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+256) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+192) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+224) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+256) ), _MM_HINT_T0);

u_00_re = _mm512_mask_cvtph_ps(u_00_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[6][0][0][0]));

u_00_im = _mm512_mask_cvtph_ps(u_00_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[6][0][0][1]));

u_01_re = _mm512_mask_cvtph_ps(u_01_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[6][0][1][0]));

u_01_im = _mm512_mask_cvtph_ps(u_01_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[6][0][1][1]));

u_02_re = _mm512_mask_cvtph_ps(u_02_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[6][0][2][0]));

u_02_im = _mm512_mask_cvtph_ps(u_02_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[6][0][2][1]));

u_10_re = _mm512_mask_cvtph_ps(u_10_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[6][1][0][0]));

u_10_im = _mm512_mask_cvtph_ps(u_10_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[6][1][0][1]));

u_11_re = _mm512_mask_cvtph_ps(u_11_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[6][1][1][0]));

u_11_im = _mm512_mask_cvtph_ps(u_11_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[6][1][1][1]));

u_12_re = _mm512_mask_cvtph_ps(u_12_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[6][1][2][0]));

u_12_im = _mm512_mask_cvtph_ps(u_12_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[6][1][2][1]));

u_20_re = _mm512_mask_cvtph_ps(u_20_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[6][2][0][0]));

 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+0) ), _MM_HINT_T1);

u_20_im = _mm512_mask_cvtph_ps(u_20_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[6][2][0][1]));

u_21_re = _mm512_mask_cvtph_ps(u_21_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[6][2][1][0]));

u_21_im = _mm512_mask_cvtph_ps(u_21_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[6][2][1][1]));

u_22_re = _mm512_mask_cvtph_ps(u_22_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[6][2][2][0]));

u_22_im = _mm512_mask_cvtph_ps(u_22_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[6][2][2][1]));

ub_S0_C0_RE = _mm512_mul_ps( u_00_re , b_S0_C0_RE );
ub_S0_C0_RE = _mm512_fmadd_ps(u_00_im, b_S0_C0_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_mul_ps( u_00_re , b_S0_C0_IM );
ub_S0_C0_IM = _mm512_fnmadd_ps(u_00_im, b_S0_C0_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_01_re, b_S0_C1_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fmadd_ps(u_01_im, b_S0_C1_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_01_re, b_S0_C1_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fnmadd_ps(u_01_im, b_S0_C1_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_02_re, b_S0_C2_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fmadd_ps(u_02_im, b_S0_C2_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_02_re, b_S0_C2_IM, ub_S0_C0_IM);
 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+32) ), _MM_HINT_T1);

ub_S0_C0_IM = _mm512_fnmadd_ps(u_02_im, b_S0_C2_RE, ub_S0_C0_IM);
ub_S0_C1_RE = _mm512_mul_ps( u_10_re , b_S0_C0_RE );
ub_S0_C1_RE = _mm512_fmadd_ps(u_10_im, b_S0_C0_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_mul_ps( u_10_re , b_S0_C0_IM );
ub_S0_C1_IM = _mm512_fnmadd_ps(u_10_im, b_S0_C0_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_re, b_S0_C1_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_im, b_S0_C1_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_re, b_S0_C1_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fnmadd_ps(u_11_im, b_S0_C1_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_12_re, b_S0_C2_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fmadd_ps(u_12_im, b_S0_C2_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_12_re, b_S0_C2_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fnmadd_ps(u_12_im, b_S0_C2_RE, ub_S0_C1_IM);
ub_S0_C2_RE = _mm512_mul_ps( u_20_re , b_S0_C0_RE );
ub_S0_C2_RE = _mm512_fmadd_ps(u_20_im, b_S0_C0_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_mul_ps( u_20_re , b_S0_C0_IM );
 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+64) ), _MM_HINT_T1);

ub_S0_C2_IM = _mm512_fnmadd_ps(u_20_im, b_S0_C0_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_21_re, b_S0_C1_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fmadd_ps(u_21_im, b_S0_C1_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_21_re, b_S0_C1_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fnmadd_ps(u_21_im, b_S0_C1_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_22_re, b_S0_C2_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fmadd_ps(u_22_im, b_S0_C2_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_re, b_S0_C2_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fnmadd_ps(u_22_im, b_S0_C2_RE, ub_S0_C2_IM);
out_S0_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_RE, out_S0_C0_RE);
out_S0_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_IM, out_S0_C0_IM);
out_S0_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_RE, out_S0_C1_RE);
out_S0_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_IM, out_S0_C1_IM);
out_S0_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_RE, out_S0_C2_RE);
out_S0_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_IM, out_S0_C2_IM);
out_S2_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_RE, out_S2_C0_RE);
 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+96) ), _MM_HINT_T1);

out_S2_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_IM, out_S2_C0_IM);
out_S2_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_RE, out_S2_C1_RE);
out_S2_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_IM, out_S2_C1_IM);
out_S2_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_RE, out_S2_C2_RE);
out_S2_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_IM, out_S2_C2_IM);
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][1][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][1][0] + offs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][1][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][1][1] + offs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][3][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][3][0] + offs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][3][1] + offs[0]))));

 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+128) ), _MM_HINT_T1);

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][3][1] + offs[8]))));

b_S1_C0_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
b_S1_C0_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][1][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][1][0] + offs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][1][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][1][1] + offs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][3][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][3][0] + offs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][3][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][3][1] + offs[8]))));

b_S1_C1_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+160) ), _MM_HINT_T1);

b_S1_C1_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][1][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][1][0] + offs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][1][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][1][1] + offs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][3][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][3][0] + offs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][3][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][3][1] + offs[8]))));

b_S1_C2_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
b_S1_C2_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
ub_S1_C0_RE = _mm512_mul_ps( u_00_re , b_S1_C0_RE );
 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+192) ), _MM_HINT_T1);

ub_S1_C0_RE = _mm512_fmadd_ps(u_00_im, b_S1_C0_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_mul_ps( u_00_re , b_S1_C0_IM );
ub_S1_C0_IM = _mm512_fnmadd_ps(u_00_im, b_S1_C0_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_01_re, b_S1_C1_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fmadd_ps(u_01_im, b_S1_C1_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_01_re, b_S1_C1_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fnmadd_ps(u_01_im, b_S1_C1_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_02_re, b_S1_C2_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fmadd_ps(u_02_im, b_S1_C2_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_02_re, b_S1_C2_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fnmadd_ps(u_02_im, b_S1_C2_RE, ub_S1_C0_IM);
ub_S1_C1_RE = _mm512_mul_ps( u_10_re , b_S1_C0_RE );
ub_S1_C1_RE = _mm512_fmadd_ps(u_10_im, b_S1_C0_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_mul_ps( u_10_re , b_S1_C0_IM );
ub_S1_C1_IM = _mm512_fnmadd_ps(u_10_im, b_S1_C0_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_re, b_S1_C1_RE, ub_S1_C1_RE);
 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+224) ), _MM_HINT_T1);

ub_S1_C1_RE = _mm512_fmadd_ps(u_11_im, b_S1_C1_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_re, b_S1_C1_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fnmadd_ps(u_11_im, b_S1_C1_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_12_re, b_S1_C2_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fmadd_ps(u_12_im, b_S1_C2_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_12_re, b_S1_C2_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fnmadd_ps(u_12_im, b_S1_C2_RE, ub_S1_C1_IM);
ub_S1_C2_RE = _mm512_mul_ps( u_20_re , b_S1_C0_RE );
ub_S1_C2_RE = _mm512_fmadd_ps(u_20_im, b_S1_C0_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_mul_ps( u_20_re , b_S1_C0_IM );
ub_S1_C2_IM = _mm512_fnmadd_ps(u_20_im, b_S1_C0_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_21_re, b_S1_C1_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fmadd_ps(u_21_im, b_S1_C1_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_21_re, b_S1_C1_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fnmadd_ps(u_21_im, b_S1_C1_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_22_re, b_S1_C2_RE, ub_S1_C2_RE);
 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+256) ), _MM_HINT_T1);

ub_S1_C2_RE = _mm512_fmadd_ps(u_22_im, b_S1_C2_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_re, b_S1_C2_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fnmadd_ps(u_22_im, b_S1_C2_RE, ub_S1_C2_IM);
out_S1_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_RE, out_S1_C0_RE);
out_S1_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_IM, out_S1_C0_IM);
out_S1_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_RE, out_S1_C1_RE);
out_S1_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_IM, out_S1_C1_IM);
out_S1_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_RE, out_S1_C2_RE);
out_S1_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_IM, out_S1_C2_IM);
out_S3_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_RE, out_S3_C0_RE);
out_S3_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_IM, out_S3_C0_IM);
out_S3_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_RE, out_S3_C1_RE);
out_S3_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_IM, out_S3_C1_IM);
out_S3_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_RE, out_S3_C2_RE);
out_S3_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_IM, out_S3_C2_IM);
}
 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+0) ), _MM_HINT_T1);

 if ( accumulate[7] ) { 
__m512 beta_vec = _mm512_setzero_ps(); 
beta_vec = _mm512_cvtph_ps(_mm256_set1_epi16(*(&coeff_t_f)));

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+0) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+0) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+32) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+32) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+64) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+64) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+96) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+96) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+128) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+128) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+160) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+160) + offs[8]) ), _MM_HINT_T0);

psi_S0_RE = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+32) ), _MM_HINT_T1);

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][0][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][0][0] + offs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][0][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][0][1] + offs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][2][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][2][0] + offs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][2][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][2][1] + offs[8]))));

b_S0_C0_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S0_C0_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][0][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][0][0] + offs[8]))));

 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+64) ), _MM_HINT_T1);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][0][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][0][1] + offs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][2][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][2][0] + offs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][2][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][2][1] + offs[8]))));

b_S0_C1_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S0_C1_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][0][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][0][0] + offs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][0][1] + offs[0]))));

 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+96) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][0][1] + offs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][2][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][2][0] + offs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][2][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][2][1] + offs[8]))));

b_S0_C2_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S0_C2_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+160) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+192) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+128) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+224) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+256) ), _MM_HINT_T0);

u_00_re = _mm512_mask_cvtph_ps(u_00_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[7][0][0][0]));

u_00_im = _mm512_mask_cvtph_ps(u_00_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[7][0][0][1]));

u_01_re = _mm512_mask_cvtph_ps(u_01_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[7][0][1][0]));

u_01_im = _mm512_mask_cvtph_ps(u_01_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[7][0][1][1]));

u_02_re = _mm512_mask_cvtph_ps(u_02_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[7][0][2][0]));

u_02_im = _mm512_mask_cvtph_ps(u_02_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[7][0][2][1]));

u_10_re = _mm512_mask_cvtph_ps(u_10_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[7][1][0][0]));

u_10_im = _mm512_mask_cvtph_ps(u_10_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[7][1][0][1]));

u_11_re = _mm512_mask_cvtph_ps(u_11_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[7][1][1][0]));

u_11_im = _mm512_mask_cvtph_ps(u_11_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[7][1][1][1]));

u_12_re = _mm512_mask_cvtph_ps(u_12_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[7][1][2][0]));

u_12_im = _mm512_mask_cvtph_ps(u_12_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[7][1][2][1]));

u_20_re = _mm512_mask_cvtph_ps(u_20_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[7][2][0][0]));

u_20_im = _mm512_mask_cvtph_ps(u_20_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[7][2][0][1]));

 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+160) ), _MM_HINT_T1);

u_21_re = _mm512_mask_cvtph_ps(u_21_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[7][2][1][0]));

u_21_im = _mm512_mask_cvtph_ps(u_21_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[7][2][1][1]));

u_22_re = _mm512_mask_cvtph_ps(u_22_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[7][2][2][0]));

u_22_im = _mm512_mask_cvtph_ps(u_22_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[7][2][2][1]));

ub_S0_C0_RE = _mm512_mul_ps( u_00_re , b_S0_C0_RE );
ub_S0_C0_RE = _mm512_fnmadd_ps(u_00_im, b_S0_C0_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_mul_ps( u_00_re , b_S0_C0_IM );
ub_S0_C0_IM = _mm512_fmadd_ps(u_00_im, b_S0_C0_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_10_re, b_S0_C1_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fnmadd_ps(u_10_im, b_S0_C1_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_10_re, b_S0_C1_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fmadd_ps(u_10_im, b_S0_C1_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_20_re, b_S0_C2_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fnmadd_ps(u_20_im, b_S0_C2_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_20_re, b_S0_C2_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fmadd_ps(u_20_im, b_S0_C2_RE, ub_S0_C0_IM);
 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+192) ), _MM_HINT_T1);

ub_S0_C1_RE = _mm512_mul_ps( u_01_re , b_S0_C0_RE );
ub_S0_C1_RE = _mm512_fnmadd_ps(u_01_im, b_S0_C0_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_mul_ps( u_01_re , b_S0_C0_IM );
ub_S0_C1_IM = _mm512_fmadd_ps(u_01_im, b_S0_C0_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_re, b_S0_C1_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fnmadd_ps(u_11_im, b_S0_C1_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_re, b_S0_C1_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_im, b_S0_C1_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_21_re, b_S0_C2_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fnmadd_ps(u_21_im, b_S0_C2_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_21_re, b_S0_C2_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fmadd_ps(u_21_im, b_S0_C2_RE, ub_S0_C1_IM);
ub_S0_C2_RE = _mm512_mul_ps( u_02_re , b_S0_C0_RE );
ub_S0_C2_RE = _mm512_fnmadd_ps(u_02_im, b_S0_C0_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_mul_ps( u_02_re , b_S0_C0_IM );
ub_S0_C2_IM = _mm512_fmadd_ps(u_02_im, b_S0_C0_RE, ub_S0_C2_IM);
 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+224) ), _MM_HINT_T1);

ub_S0_C2_RE = _mm512_fmadd_ps(u_12_re, b_S0_C1_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fnmadd_ps(u_12_im, b_S0_C1_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_12_re, b_S0_C1_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fmadd_ps(u_12_im, b_S0_C1_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_22_re, b_S0_C2_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fnmadd_ps(u_22_im, b_S0_C2_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_re, b_S0_C2_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_im, b_S0_C2_RE, ub_S0_C2_IM);
out_S0_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_RE, out_S0_C0_RE);
out_S0_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_IM, out_S0_C0_IM);
out_S0_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_RE, out_S0_C1_RE);
out_S0_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_IM, out_S0_C1_IM);
out_S0_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_RE, out_S0_C2_RE);
out_S0_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_IM, out_S0_C2_IM);
out_S2_C0_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C0_RE, out_S2_C0_RE);
out_S2_C0_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C0_IM, out_S2_C0_IM);
 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+256) ), _MM_HINT_T1);

out_S2_C1_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C1_RE, out_S2_C1_RE);
out_S2_C1_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C1_IM, out_S2_C1_IM);
out_S2_C2_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C2_RE, out_S2_C2_RE);
out_S2_C2_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C2_IM, out_S2_C2_IM);
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][1][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][1][0] + offs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][1][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][1][1] + offs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][3][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][3][0] + offs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][3][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][3][1] + offs[8]))));

 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+0) ), _MM_HINT_T1);

b_S1_C0_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S1_C0_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][1][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][1][0] + offs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][1][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][1][1] + offs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][3][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][3][0] + offs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][3][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][3][1] + offs[8]))));

b_S1_C1_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S1_C1_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+32) ), _MM_HINT_T1);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][1][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][1][0] + offs[8]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][1][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][1][1] + offs[8]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][3][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][3][0] + offs[8]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][3][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xff00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][3][1] + offs[8]))));

b_S1_C2_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S1_C2_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
ub_S1_C0_RE = _mm512_mul_ps( u_00_re , b_S1_C0_RE );
ub_S1_C0_RE = _mm512_fnmadd_ps(u_00_im, b_S1_C0_IM, ub_S1_C0_RE);
 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+64) ), _MM_HINT_T1);

ub_S1_C0_IM = _mm512_mul_ps( u_00_re , b_S1_C0_IM );
ub_S1_C0_IM = _mm512_fmadd_ps(u_00_im, b_S1_C0_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_10_re, b_S1_C1_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fnmadd_ps(u_10_im, b_S1_C1_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_10_re, b_S1_C1_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fmadd_ps(u_10_im, b_S1_C1_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_20_re, b_S1_C2_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fnmadd_ps(u_20_im, b_S1_C2_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_20_re, b_S1_C2_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fmadd_ps(u_20_im, b_S1_C2_RE, ub_S1_C0_IM);
ub_S1_C1_RE = _mm512_mul_ps( u_01_re , b_S1_C0_RE );
ub_S1_C1_RE = _mm512_fnmadd_ps(u_01_im, b_S1_C0_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_mul_ps( u_01_re , b_S1_C0_IM );
ub_S1_C1_IM = _mm512_fmadd_ps(u_01_im, b_S1_C0_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_re, b_S1_C1_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fnmadd_ps(u_11_im, b_S1_C1_IM, ub_S1_C1_RE);
 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+96) ), _MM_HINT_T1);

ub_S1_C1_IM = _mm512_fmadd_ps(u_11_re, b_S1_C1_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_im, b_S1_C1_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_21_re, b_S1_C2_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fnmadd_ps(u_21_im, b_S1_C2_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_21_re, b_S1_C2_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fmadd_ps(u_21_im, b_S1_C2_RE, ub_S1_C1_IM);
ub_S1_C2_RE = _mm512_mul_ps( u_02_re , b_S1_C0_RE );
ub_S1_C2_RE = _mm512_fnmadd_ps(u_02_im, b_S1_C0_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_mul_ps( u_02_re , b_S1_C0_IM );
ub_S1_C2_IM = _mm512_fmadd_ps(u_02_im, b_S1_C0_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_12_re, b_S1_C1_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fnmadd_ps(u_12_im, b_S1_C1_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_12_re, b_S1_C1_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fmadd_ps(u_12_im, b_S1_C1_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_22_re, b_S1_C2_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fnmadd_ps(u_22_im, b_S1_C2_IM, ub_S1_C2_RE);
 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+128) ), _MM_HINT_T1);

ub_S1_C2_IM = _mm512_fmadd_ps(u_22_re, b_S1_C2_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_im, b_S1_C2_RE, ub_S1_C2_IM);
out_S1_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_RE, out_S1_C0_RE);
out_S1_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_IM, out_S1_C0_IM);
out_S1_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_RE, out_S1_C1_RE);
out_S1_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_IM, out_S1_C1_IM);
out_S1_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_RE, out_S1_C2_RE);
out_S1_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_IM, out_S1_C2_IM);
out_S3_C0_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C0_RE, out_S3_C0_RE);
out_S3_C0_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C0_IM, out_S3_C0_IM);
out_S3_C1_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C1_RE, out_S3_C1_RE);
out_S3_C1_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C1_IM, out_S3_C1_IM);
out_S3_C2_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C2_RE, out_S3_C2_RE);
out_S3_C2_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C2_IM, out_S3_C2_IM);
}
tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xff, out_S0_C0_RE, (_MM_PERM_ENUM)68);
 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+160) ), _MM_HINT_T1);

tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xff00, out_S0_C0_IM, (_MM_PERM_ENUM)68);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xff, out_S0_C0_RE, (_MM_PERM_ENUM)238);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xff00, out_S0_C0_IM, (_MM_PERM_ENUM)238);
_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[0])+0), _mm512_cvtps_ph(tmp_1_re, _MM_FROUND_TO_NEAREST_INT));

_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[8])+0), _mm512_cvtps_ph(tmp_2_re, _MM_FROUND_TO_NEAREST_INT));

tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xff, out_S1_C0_RE, (_MM_PERM_ENUM)68);
tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xff00, out_S1_C0_IM, (_MM_PERM_ENUM)68);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xff, out_S1_C0_RE, (_MM_PERM_ENUM)238);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xff00, out_S1_C0_IM, (_MM_PERM_ENUM)238);
_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[0])+16), _mm512_cvtps_ph(tmp_1_re, _MM_FROUND_TO_NEAREST_INT));

_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[8])+16), _mm512_cvtps_ph(tmp_2_re, _MM_FROUND_TO_NEAREST_INT));

tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xff, out_S2_C0_RE, (_MM_PERM_ENUM)68);
tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xff00, out_S2_C0_IM, (_MM_PERM_ENUM)68);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xff, out_S2_C0_RE, (_MM_PERM_ENUM)238);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xff00, out_S2_C0_IM, (_MM_PERM_ENUM)238);
_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[0])+32), _mm512_cvtps_ph(tmp_1_re, _MM_FROUND_TO_NEAREST_INT));

 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+192) ), _MM_HINT_T1);

_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[8])+32), _mm512_cvtps_ph(tmp_2_re, _MM_FROUND_TO_NEAREST_INT));

tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xff, out_S3_C0_RE, (_MM_PERM_ENUM)68);
tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xff00, out_S3_C0_IM, (_MM_PERM_ENUM)68);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xff, out_S3_C0_RE, (_MM_PERM_ENUM)238);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xff00, out_S3_C0_IM, (_MM_PERM_ENUM)238);
_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[0])+48), _mm512_cvtps_ph(tmp_1_re, _MM_FROUND_TO_NEAREST_INT));

_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[8])+48), _mm512_cvtps_ph(tmp_2_re, _MM_FROUND_TO_NEAREST_INT));

tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xff, out_S0_C1_RE, (_MM_PERM_ENUM)68);
tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xff00, out_S0_C1_IM, (_MM_PERM_ENUM)68);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xff, out_S0_C1_RE, (_MM_PERM_ENUM)238);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xff00, out_S0_C1_IM, (_MM_PERM_ENUM)238);
_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[0])+64), _mm512_cvtps_ph(tmp_1_re, _MM_FROUND_TO_NEAREST_INT));

_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[8])+64), _mm512_cvtps_ph(tmp_2_re, _MM_FROUND_TO_NEAREST_INT));

tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xff, out_S1_C1_RE, (_MM_PERM_ENUM)68);
tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xff00, out_S1_C1_IM, (_MM_PERM_ENUM)68);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xff, out_S1_C1_RE, (_MM_PERM_ENUM)238);
 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+224) ), _MM_HINT_T1);

tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xff00, out_S1_C1_IM, (_MM_PERM_ENUM)238);
_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[0])+80), _mm512_cvtps_ph(tmp_1_re, _MM_FROUND_TO_NEAREST_INT));

_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[8])+80), _mm512_cvtps_ph(tmp_2_re, _MM_FROUND_TO_NEAREST_INT));

tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xff, out_S2_C1_RE, (_MM_PERM_ENUM)68);
tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xff00, out_S2_C1_IM, (_MM_PERM_ENUM)68);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xff, out_S2_C1_RE, (_MM_PERM_ENUM)238);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xff00, out_S2_C1_IM, (_MM_PERM_ENUM)238);
_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[0])+96), _mm512_cvtps_ph(tmp_1_re, _MM_FROUND_TO_NEAREST_INT));

_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[8])+96), _mm512_cvtps_ph(tmp_2_re, _MM_FROUND_TO_NEAREST_INT));

tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xff, out_S3_C1_RE, (_MM_PERM_ENUM)68);
tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xff00, out_S3_C1_IM, (_MM_PERM_ENUM)68);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xff, out_S3_C1_RE, (_MM_PERM_ENUM)238);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xff00, out_S3_C1_IM, (_MM_PERM_ENUM)238);
_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[0])+112), _mm512_cvtps_ph(tmp_1_re, _MM_FROUND_TO_NEAREST_INT));

_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[8])+112), _mm512_cvtps_ph(tmp_2_re, _MM_FROUND_TO_NEAREST_INT));

tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xff, out_S0_C2_RE, (_MM_PERM_ENUM)68);
 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+256) ), _MM_HINT_T1);

tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xff00, out_S0_C2_IM, (_MM_PERM_ENUM)68);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xff, out_S0_C2_RE, (_MM_PERM_ENUM)238);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xff00, out_S0_C2_IM, (_MM_PERM_ENUM)238);
_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[0])+128), _mm512_cvtps_ph(tmp_1_re, _MM_FROUND_TO_NEAREST_INT));

_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[8])+128), _mm512_cvtps_ph(tmp_2_re, _MM_FROUND_TO_NEAREST_INT));

tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xff, out_S1_C2_RE, (_MM_PERM_ENUM)68);
tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xff00, out_S1_C2_IM, (_MM_PERM_ENUM)68);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xff, out_S1_C2_RE, (_MM_PERM_ENUM)238);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xff00, out_S1_C2_IM, (_MM_PERM_ENUM)238);
_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[0])+144), _mm512_cvtps_ph(tmp_1_re, _MM_FROUND_TO_NEAREST_INT));

_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[8])+144), _mm512_cvtps_ph(tmp_2_re, _MM_FROUND_TO_NEAREST_INT));

tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xff, out_S2_C2_RE, (_MM_PERM_ENUM)68);
tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xff00, out_S2_C2_IM, (_MM_PERM_ENUM)68);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xff, out_S2_C2_RE, (_MM_PERM_ENUM)238);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xff00, out_S2_C2_IM, (_MM_PERM_ENUM)238);
_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[0])+160), _mm512_cvtps_ph(tmp_1_re, _MM_FROUND_TO_NEAREST_INT));

_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[8])+160), _mm512_cvtps_ph(tmp_2_re, _MM_FROUND_TO_NEAREST_INT));

tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xff, out_S3_C2_RE, (_MM_PERM_ENUM)68);
tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xff00, out_S3_C2_IM, (_MM_PERM_ENUM)68);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xff, out_S3_C2_RE, (_MM_PERM_ENUM)238);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xff00, out_S3_C2_IM, (_MM_PERM_ENUM)238);
_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[0])+176), _mm512_cvtps_ph(tmp_1_re, _MM_FROUND_TO_NEAREST_INT));

_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[8])+176), _mm512_cvtps_ph(tmp_2_re, _MM_FROUND_TO_NEAREST_INT));


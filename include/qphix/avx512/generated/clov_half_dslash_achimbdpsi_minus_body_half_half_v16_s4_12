__m512 b_S0_C0_RE = _mm512_setzero_ps(); 
__m512 b_S0_C0_IM = _mm512_setzero_ps(); 
__m512 b_S0_C1_RE = _mm512_setzero_ps(); 
__m512 b_S0_C1_IM = _mm512_setzero_ps(); 
__m512 b_S0_C2_RE = _mm512_setzero_ps(); 
__m512 b_S0_C2_IM = _mm512_setzero_ps(); 
__m512 b_S1_C0_RE = _mm512_setzero_ps(); 
__m512 b_S1_C0_IM = _mm512_setzero_ps(); 
__m512 b_S1_C1_RE = _mm512_setzero_ps(); 
__m512 b_S1_C1_IM = _mm512_setzero_ps(); 
__m512 b_S1_C2_RE = _mm512_setzero_ps(); 
__m512 b_S1_C2_IM = _mm512_setzero_ps(); 
__m512 ub_S0_C0_RE = _mm512_setzero_ps(); 
__m512 ub_S0_C0_IM = _mm512_setzero_ps(); 
__m512 ub_S0_C1_RE = _mm512_setzero_ps(); 
__m512 ub_S0_C1_IM = _mm512_setzero_ps(); 
__m512 ub_S0_C2_RE = _mm512_setzero_ps(); 
__m512 ub_S0_C2_IM = _mm512_setzero_ps(); 
__m512 ub_S1_C0_RE = _mm512_setzero_ps(); 
__m512 ub_S1_C0_IM = _mm512_setzero_ps(); 
__m512 ub_S1_C1_RE = _mm512_setzero_ps(); 
__m512 ub_S1_C1_IM = _mm512_setzero_ps(); 
__m512 ub_S1_C2_RE = _mm512_setzero_ps(); 
__m512 ub_S1_C2_IM = _mm512_setzero_ps(); 
__m512 u_00_re = _mm512_setzero_ps(); 
__m512 u_00_im = _mm512_setzero_ps(); 
__m512 u_01_re = _mm512_setzero_ps(); 
__m512 u_01_im = _mm512_setzero_ps(); 
__m512 u_02_re = _mm512_setzero_ps(); 
__m512 u_02_im = _mm512_setzero_ps(); 
__m512 u_10_re = _mm512_setzero_ps(); 
__m512 u_10_im = _mm512_setzero_ps(); 
__m512 u_11_re = _mm512_setzero_ps(); 
__m512 u_11_im = _mm512_setzero_ps(); 
__m512 u_12_re = _mm512_setzero_ps(); 
__m512 u_12_im = _mm512_setzero_ps(); 
__m512 u_20_re = _mm512_setzero_ps(); 
__m512 u_20_im = _mm512_setzero_ps(); 
__m512 u_21_re = _mm512_setzero_ps(); 
__m512 u_21_im = _mm512_setzero_ps(); 
__m512 u_22_re = _mm512_setzero_ps(); 
__m512 u_22_im = _mm512_setzero_ps(); 
__m512 psi_S0_RE = _mm512_setzero_ps(); 
__m512 psi_S0_IM = _mm512_setzero_ps(); 
__m512 psi_S1_RE = _mm512_setzero_ps(); 
__m512 psi_S1_IM = _mm512_setzero_ps(); 
__m512 tmp_1_re = _mm512_setzero_ps(); 
__m512 tmp_1_im = _mm512_setzero_ps(); 
__m512 tmp_2_re = _mm512_setzero_ps(); 
__m512 tmp_2_im = _mm512_setzero_ps(); 
__m512 tmp_3_re = _mm512_setzero_ps(); 
__m512 tmp_3_im = _mm512_setzero_ps(); 
__m512 tmp_4_re = _mm512_setzero_ps(); 
__m512 tmp_4_im = _mm512_setzero_ps(); 
__m512 zero = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+0) + pfyOffs[0]) ), _MM_HINT_T1);

zero = _mm512_setzero_ps(); 
__m512 out_S0_C0_RE = _mm512_setzero_ps(); 
__m512 out_S0_C0_IM = _mm512_setzero_ps(); 
__m512 out_S0_C1_RE = _mm512_setzero_ps(); 
__m512 out_S0_C1_IM = _mm512_setzero_ps(); 
__m512 out_S0_C2_RE = _mm512_setzero_ps(); 
__m512 out_S0_C2_IM = _mm512_setzero_ps(); 
__m512 out_S1_C0_RE = _mm512_setzero_ps(); 
__m512 out_S1_C0_IM = _mm512_setzero_ps(); 
__m512 out_S1_C1_RE = _mm512_setzero_ps(); 
__m512 out_S1_C1_IM = _mm512_setzero_ps(); 
__m512 out_S1_C2_RE = _mm512_setzero_ps(); 
__m512 out_S1_C2_IM = _mm512_setzero_ps(); 
__m512 out_S2_C0_RE = _mm512_setzero_ps(); 
__m512 out_S2_C0_IM = _mm512_setzero_ps(); 
__m512 out_S2_C1_RE = _mm512_setzero_ps(); 
__m512 out_S2_C1_IM = _mm512_setzero_ps(); 
__m512 out_S2_C2_RE = _mm512_setzero_ps(); 
__m512 out_S2_C2_IM = _mm512_setzero_ps(); 
__m512 out_S3_C0_RE = _mm512_setzero_ps(); 
__m512 out_S3_C0_IM = _mm512_setzero_ps(); 
__m512 out_S3_C1_RE = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+0) + pfyOffs[4]) ), _MM_HINT_T1);

__m512 out_S3_C1_IM = _mm512_setzero_ps(); 
__m512 out_S3_C2_RE = _mm512_setzero_ps(); 
__m512 out_S3_C2_IM = _mm512_setzero_ps(); 
__m512 chi_S0_C0_RE = _mm512_setzero_ps(); 
__m512 chi_S0_C0_IM = _mm512_setzero_ps(); 
__m512 chi_S0_C1_RE = _mm512_setzero_ps(); 
__m512 chi_S0_C1_IM = _mm512_setzero_ps(); 
__m512 chi_S0_C2_RE = _mm512_setzero_ps(); 
__m512 chi_S0_C2_IM = _mm512_setzero_ps(); 
__m512 chi_S1_C0_RE = _mm512_setzero_ps(); 
__m512 chi_S1_C0_IM = _mm512_setzero_ps(); 
__m512 chi_S1_C1_RE = _mm512_setzero_ps(); 
__m512 chi_S1_C1_IM = _mm512_setzero_ps(); 
__m512 chi_S1_C2_RE = _mm512_setzero_ps(); 
__m512 chi_S1_C2_IM = _mm512_setzero_ps(); 
__m512 chi_S2_C0_RE = _mm512_setzero_ps(); 
__m512 chi_S2_C0_IM = _mm512_setzero_ps(); 
__m512 chi_S2_C1_RE = _mm512_setzero_ps(); 
__m512 chi_S2_C1_IM = _mm512_setzero_ps(); 
__m512 chi_S2_C2_RE = _mm512_setzero_ps(); 
__m512 chi_S2_C2_IM = _mm512_setzero_ps(); 
__m512 chi_S3_C0_RE = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+0) + pfyOffs[8]) ), _MM_HINT_T1);

__m512 chi_S3_C0_IM = _mm512_setzero_ps(); 
__m512 chi_S3_C1_RE = _mm512_setzero_ps(); 
__m512 chi_S3_C1_IM = _mm512_setzero_ps(); 
__m512 chi_S3_C2_RE = _mm512_setzero_ps(); 
__m512 chi_S3_C2_IM = _mm512_setzero_ps(); 
__m512 dout_S0_C0_RE = _mm512_setzero_ps(); 
__m512 dout_S0_C0_IM = _mm512_setzero_ps(); 
__m512 dout_S0_C1_RE = _mm512_setzero_ps(); 
__m512 dout_S0_C1_IM = _mm512_setzero_ps(); 
__m512 dout_S0_C2_RE = _mm512_setzero_ps(); 
__m512 dout_S0_C2_IM = _mm512_setzero_ps(); 
__m512 dout_S1_C0_RE = _mm512_setzero_ps(); 
__m512 dout_S1_C0_IM = _mm512_setzero_ps(); 
__m512 dout_S1_C1_RE = _mm512_setzero_ps(); 
__m512 dout_S1_C1_IM = _mm512_setzero_ps(); 
__m512 dout_S1_C2_RE = _mm512_setzero_ps(); 
__m512 dout_S1_C2_IM = _mm512_setzero_ps(); 
__m512 dout_S2_C0_RE = _mm512_setzero_ps(); 
__m512 dout_S2_C0_IM = _mm512_setzero_ps(); 
__m512 dout_S2_C1_RE = _mm512_setzero_ps(); 
__m512 dout_S2_C1_IM = _mm512_setzero_ps(); 
__m512 dout_S2_C2_RE = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+0) + pfyOffs[12]) ), _MM_HINT_T1);

__m512 dout_S2_C2_IM = _mm512_setzero_ps(); 
__m512 dout_S3_C0_RE = _mm512_setzero_ps(); 
__m512 dout_S3_C0_IM = _mm512_setzero_ps(); 
__m512 dout_S3_C1_RE = _mm512_setzero_ps(); 
__m512 dout_S3_C1_IM = _mm512_setzero_ps(); 
__m512 dout_S3_C2_RE = _mm512_setzero_ps(); 
__m512 dout_S3_C2_IM = _mm512_setzero_ps(); 
__m512 cl_diag_0 = _mm512_setzero_ps(); 
__m512 cl_diag_1 = _mm512_setzero_ps(); 
__m512 cl_diag_2 = _mm512_setzero_ps(); 
__m512 cl_diag_3 = _mm512_setzero_ps(); 
__m512 cl_diag_4 = _mm512_setzero_ps(); 
__m512 cl_diag_5 = _mm512_setzero_ps(); 
__m512 cl_offdiag_0_RE = _mm512_setzero_ps(); 
__m512 cl_offdiag_0_IM = _mm512_setzero_ps(); 
__m512 cl_offdiag_1_RE = _mm512_setzero_ps(); 
__m512 cl_offdiag_1_IM = _mm512_setzero_ps(); 
__m512 cl_offdiag_2_RE = _mm512_setzero_ps(); 
__m512 cl_offdiag_2_IM = _mm512_setzero_ps(); 
__m512 cl_offdiag_3_RE = _mm512_setzero_ps(); 
__m512 cl_offdiag_3_IM = _mm512_setzero_ps(); 
__m512 cl_offdiag_4_RE = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+32) + pfyOffs[0]) ), _MM_HINT_T1);

__m512 cl_offdiag_4_IM = _mm512_setzero_ps(); 
__m512 cl_offdiag_5_RE = _mm512_setzero_ps(); 
__m512 cl_offdiag_5_IM = _mm512_setzero_ps(); 
__m512 cl_offdiag_6_RE = _mm512_setzero_ps(); 
__m512 cl_offdiag_6_IM = _mm512_setzero_ps(); 
__m512 cl_offdiag_7_RE = _mm512_setzero_ps(); 
__m512 cl_offdiag_7_IM = _mm512_setzero_ps(); 
__m512 cl_offdiag_8_RE = _mm512_setzero_ps(); 
__m512 cl_offdiag_8_IM = _mm512_setzero_ps(); 
__m512 cl_offdiag_9_RE = _mm512_setzero_ps(); 
__m512 cl_offdiag_9_IM = _mm512_setzero_ps(); 
__m512 cl_offdiag_10_RE = _mm512_setzero_ps(); 
__m512 cl_offdiag_10_IM = _mm512_setzero_ps(); 
__m512 cl_offdiag_11_RE = _mm512_setzero_ps(); 
__m512 cl_offdiag_11_IM = _mm512_setzero_ps(); 
__m512 cl_offdiag_12_RE = _mm512_setzero_ps(); 
__m512 cl_offdiag_12_IM = _mm512_setzero_ps(); 
__m512 cl_offdiag_13_RE = _mm512_setzero_ps(); 
__m512 cl_offdiag_13_IM = _mm512_setzero_ps(); 
__m512 cl_offdiag_14_RE = _mm512_setzero_ps(); 
__m512 cl_offdiag_14_IM = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( (((*chiBase)[0][0][0]+0) + offs[0]) ), _MM_HINT_NTA);

 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+32) + pfyOffs[4]) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*chiBase)[0][0][0]+0) + offs[4]) ), _MM_HINT_NTA);

 _mm_prefetch((const char *)( (((*chiBase)[0][0][0]+0) + offs[8]) ), _MM_HINT_NTA);

 _mm_prefetch((const char *)( (((*chiBase)[0][0][0]+0) + offs[12]) ), _MM_HINT_NTA);

 _mm_prefetch((const char *)( (((*chiBase)[0][0][0]+32) + offs[0]) ), _MM_HINT_NTA);

 _mm_prefetch((const char *)( (((*chiBase)[0][0][0]+32) + offs[4]) ), _MM_HINT_NTA);

 _mm_prefetch((const char *)( (((*chiBase)[0][0][0]+32) + offs[8]) ), _MM_HINT_NTA);

 _mm_prefetch((const char *)( (((*chiBase)[0][0][0]+32) + offs[12]) ), _MM_HINT_NTA);

 _mm_prefetch((const char *)( (((*chiBase)[0][0][0]+64) + offs[0]) ), _MM_HINT_NTA);

 _mm_prefetch((const char *)( (((*chiBase)[0][0][0]+64) + offs[4]) ), _MM_HINT_NTA);

 _mm_prefetch((const char *)( (((*chiBase)[0][0][0]+64) + offs[8]) ), _MM_HINT_NTA);

 _mm_prefetch((const char *)( (((*chiBase)[0][0][0]+64) + offs[12]) ), _MM_HINT_NTA);

chi_S0_C0_RE = _mm512_undefined(); 
chi_S0_C0_RE = _mm512_mask_expand_ps(chi_S0_C0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][0][0] + offs[0]))));

chi_S0_C0_RE = _mm512_mask_expand_ps(chi_S0_C0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][0][0] + offs[4]))));

chi_S0_C0_RE = _mm512_mask_expand_ps(chi_S0_C0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][0][0] + offs[8]))));

chi_S0_C0_RE = _mm512_mask_expand_ps(chi_S0_C0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][0][0] + offs[12]))));

chi_S0_C0_IM = _mm512_undefined(); 
chi_S0_C0_IM = _mm512_mask_expand_ps(chi_S0_C0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][0][1] + offs[0]))));

chi_S0_C0_IM = _mm512_mask_expand_ps(chi_S0_C0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][0][1] + offs[4]))));

chi_S0_C0_IM = _mm512_mask_expand_ps(chi_S0_C0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][0][1] + offs[8]))));

chi_S0_C0_IM = _mm512_mask_expand_ps(chi_S0_C0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][0][1] + offs[12]))));

chi_S1_C0_RE = _mm512_undefined(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+32) + pfyOffs[8]) ), _MM_HINT_T1);

chi_S1_C0_RE = _mm512_mask_expand_ps(chi_S1_C0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][1][0] + offs[0]))));

chi_S1_C0_RE = _mm512_mask_expand_ps(chi_S1_C0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][1][0] + offs[4]))));

chi_S1_C0_RE = _mm512_mask_expand_ps(chi_S1_C0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][1][0] + offs[8]))));

chi_S1_C0_RE = _mm512_mask_expand_ps(chi_S1_C0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][1][0] + offs[12]))));

chi_S1_C0_IM = _mm512_undefined(); 
chi_S1_C0_IM = _mm512_mask_expand_ps(chi_S1_C0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][1][1] + offs[0]))));

chi_S1_C0_IM = _mm512_mask_expand_ps(chi_S1_C0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][1][1] + offs[4]))));

chi_S1_C0_IM = _mm512_mask_expand_ps(chi_S1_C0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][1][1] + offs[8]))));

chi_S1_C0_IM = _mm512_mask_expand_ps(chi_S1_C0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][1][1] + offs[12]))));

chi_S2_C0_RE = _mm512_undefined(); 
chi_S2_C0_RE = _mm512_mask_expand_ps(chi_S2_C0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][2][0] + offs[0]))));

chi_S2_C0_RE = _mm512_mask_expand_ps(chi_S2_C0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][2][0] + offs[4]))));

chi_S2_C0_RE = _mm512_mask_expand_ps(chi_S2_C0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][2][0] + offs[8]))));

chi_S2_C0_RE = _mm512_mask_expand_ps(chi_S2_C0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][2][0] + offs[12]))));

chi_S2_C0_IM = _mm512_undefined(); 
chi_S2_C0_IM = _mm512_mask_expand_ps(chi_S2_C0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][2][1] + offs[0]))));

chi_S2_C0_IM = _mm512_mask_expand_ps(chi_S2_C0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][2][1] + offs[4]))));

chi_S2_C0_IM = _mm512_mask_expand_ps(chi_S2_C0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][2][1] + offs[8]))));

chi_S2_C0_IM = _mm512_mask_expand_ps(chi_S2_C0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][2][1] + offs[12]))));

chi_S3_C0_RE = _mm512_undefined(); 
chi_S3_C0_RE = _mm512_mask_expand_ps(chi_S3_C0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][3][0] + offs[0]))));

chi_S3_C0_RE = _mm512_mask_expand_ps(chi_S3_C0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][3][0] + offs[4]))));

 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+32) + pfyOffs[12]) ), _MM_HINT_T1);

chi_S3_C0_RE = _mm512_mask_expand_ps(chi_S3_C0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][3][0] + offs[8]))));

chi_S3_C0_RE = _mm512_mask_expand_ps(chi_S3_C0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][3][0] + offs[12]))));

chi_S3_C0_IM = _mm512_undefined(); 
chi_S3_C0_IM = _mm512_mask_expand_ps(chi_S3_C0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][3][1] + offs[0]))));

chi_S3_C0_IM = _mm512_mask_expand_ps(chi_S3_C0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][3][1] + offs[4]))));

chi_S3_C0_IM = _mm512_mask_expand_ps(chi_S3_C0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][3][1] + offs[8]))));

chi_S3_C0_IM = _mm512_mask_expand_ps(chi_S3_C0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[0][3][1] + offs[12]))));

chi_S0_C1_RE = _mm512_undefined(); 
chi_S0_C1_RE = _mm512_mask_expand_ps(chi_S0_C1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][0][0] + offs[0]))));

chi_S0_C1_RE = _mm512_mask_expand_ps(chi_S0_C1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][0][0] + offs[4]))));

chi_S0_C1_RE = _mm512_mask_expand_ps(chi_S0_C1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][0][0] + offs[8]))));

chi_S0_C1_RE = _mm512_mask_expand_ps(chi_S0_C1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][0][0] + offs[12]))));

chi_S0_C1_IM = _mm512_undefined(); 
chi_S0_C1_IM = _mm512_mask_expand_ps(chi_S0_C1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][0][1] + offs[0]))));

chi_S0_C1_IM = _mm512_mask_expand_ps(chi_S0_C1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][0][1] + offs[4]))));

chi_S0_C1_IM = _mm512_mask_expand_ps(chi_S0_C1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][0][1] + offs[8]))));

chi_S0_C1_IM = _mm512_mask_expand_ps(chi_S0_C1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][0][1] + offs[12]))));

chi_S1_C1_RE = _mm512_undefined(); 
chi_S1_C1_RE = _mm512_mask_expand_ps(chi_S1_C1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][1][0] + offs[0]))));

chi_S1_C1_RE = _mm512_mask_expand_ps(chi_S1_C1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][1][0] + offs[4]))));

chi_S1_C1_RE = _mm512_mask_expand_ps(chi_S1_C1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][1][0] + offs[8]))));

chi_S1_C1_RE = _mm512_mask_expand_ps(chi_S1_C1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][1][0] + offs[12]))));

 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+64) + pfyOffs[0]) ), _MM_HINT_T1);

chi_S1_C1_IM = _mm512_undefined(); 
chi_S1_C1_IM = _mm512_mask_expand_ps(chi_S1_C1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][1][1] + offs[0]))));

chi_S1_C1_IM = _mm512_mask_expand_ps(chi_S1_C1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][1][1] + offs[4]))));

chi_S1_C1_IM = _mm512_mask_expand_ps(chi_S1_C1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][1][1] + offs[8]))));

chi_S1_C1_IM = _mm512_mask_expand_ps(chi_S1_C1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][1][1] + offs[12]))));

chi_S2_C1_RE = _mm512_undefined(); 
chi_S2_C1_RE = _mm512_mask_expand_ps(chi_S2_C1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][2][0] + offs[0]))));

chi_S2_C1_RE = _mm512_mask_expand_ps(chi_S2_C1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][2][0] + offs[4]))));

chi_S2_C1_RE = _mm512_mask_expand_ps(chi_S2_C1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][2][0] + offs[8]))));

chi_S2_C1_RE = _mm512_mask_expand_ps(chi_S2_C1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][2][0] + offs[12]))));

chi_S2_C1_IM = _mm512_undefined(); 
chi_S2_C1_IM = _mm512_mask_expand_ps(chi_S2_C1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][2][1] + offs[0]))));

chi_S2_C1_IM = _mm512_mask_expand_ps(chi_S2_C1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][2][1] + offs[4]))));

chi_S2_C1_IM = _mm512_mask_expand_ps(chi_S2_C1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][2][1] + offs[8]))));

chi_S2_C1_IM = _mm512_mask_expand_ps(chi_S2_C1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][2][1] + offs[12]))));

chi_S3_C1_RE = _mm512_undefined(); 
chi_S3_C1_RE = _mm512_mask_expand_ps(chi_S3_C1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][3][0] + offs[0]))));

chi_S3_C1_RE = _mm512_mask_expand_ps(chi_S3_C1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][3][0] + offs[4]))));

chi_S3_C1_RE = _mm512_mask_expand_ps(chi_S3_C1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][3][0] + offs[8]))));

chi_S3_C1_RE = _mm512_mask_expand_ps(chi_S3_C1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][3][0] + offs[12]))));

chi_S3_C1_IM = _mm512_undefined(); 
chi_S3_C1_IM = _mm512_mask_expand_ps(chi_S3_C1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][3][1] + offs[0]))));

 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+64) + pfyOffs[4]) ), _MM_HINT_T1);

chi_S3_C1_IM = _mm512_mask_expand_ps(chi_S3_C1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][3][1] + offs[4]))));

chi_S3_C1_IM = _mm512_mask_expand_ps(chi_S3_C1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][3][1] + offs[8]))));

chi_S3_C1_IM = _mm512_mask_expand_ps(chi_S3_C1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[1][3][1] + offs[12]))));

chi_S0_C2_RE = _mm512_undefined(); 
chi_S0_C2_RE = _mm512_mask_expand_ps(chi_S0_C2_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][0][0] + offs[0]))));

chi_S0_C2_RE = _mm512_mask_expand_ps(chi_S0_C2_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][0][0] + offs[4]))));

chi_S0_C2_RE = _mm512_mask_expand_ps(chi_S0_C2_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][0][0] + offs[8]))));

chi_S0_C2_RE = _mm512_mask_expand_ps(chi_S0_C2_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][0][0] + offs[12]))));

chi_S0_C2_IM = _mm512_undefined(); 
chi_S0_C2_IM = _mm512_mask_expand_ps(chi_S0_C2_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][0][1] + offs[0]))));

chi_S0_C2_IM = _mm512_mask_expand_ps(chi_S0_C2_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][0][1] + offs[4]))));

chi_S0_C2_IM = _mm512_mask_expand_ps(chi_S0_C2_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][0][1] + offs[8]))));

chi_S0_C2_IM = _mm512_mask_expand_ps(chi_S0_C2_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][0][1] + offs[12]))));

chi_S1_C2_RE = _mm512_undefined(); 
chi_S1_C2_RE = _mm512_mask_expand_ps(chi_S1_C2_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][1][0] + offs[0]))));

chi_S1_C2_RE = _mm512_mask_expand_ps(chi_S1_C2_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][1][0] + offs[4]))));

chi_S1_C2_RE = _mm512_mask_expand_ps(chi_S1_C2_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][1][0] + offs[8]))));

chi_S1_C2_RE = _mm512_mask_expand_ps(chi_S1_C2_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][1][0] + offs[12]))));

chi_S1_C2_IM = _mm512_undefined(); 
chi_S1_C2_IM = _mm512_mask_expand_ps(chi_S1_C2_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][1][1] + offs[0]))));

chi_S1_C2_IM = _mm512_mask_expand_ps(chi_S1_C2_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][1][1] + offs[4]))));

chi_S1_C2_IM = _mm512_mask_expand_ps(chi_S1_C2_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][1][1] + offs[8]))));

 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+64) + pfyOffs[8]) ), _MM_HINT_T1);

chi_S1_C2_IM = _mm512_mask_expand_ps(chi_S1_C2_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][1][1] + offs[12]))));

chi_S2_C2_RE = _mm512_undefined(); 
chi_S2_C2_RE = _mm512_mask_expand_ps(chi_S2_C2_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][2][0] + offs[0]))));

chi_S2_C2_RE = _mm512_mask_expand_ps(chi_S2_C2_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][2][0] + offs[4]))));

chi_S2_C2_RE = _mm512_mask_expand_ps(chi_S2_C2_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][2][0] + offs[8]))));

chi_S2_C2_RE = _mm512_mask_expand_ps(chi_S2_C2_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][2][0] + offs[12]))));

chi_S2_C2_IM = _mm512_undefined(); 
chi_S2_C2_IM = _mm512_mask_expand_ps(chi_S2_C2_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][2][1] + offs[0]))));

chi_S2_C2_IM = _mm512_mask_expand_ps(chi_S2_C2_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][2][1] + offs[4]))));

chi_S2_C2_IM = _mm512_mask_expand_ps(chi_S2_C2_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][2][1] + offs[8]))));

chi_S2_C2_IM = _mm512_mask_expand_ps(chi_S2_C2_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][2][1] + offs[12]))));

chi_S3_C2_RE = _mm512_undefined(); 
chi_S3_C2_RE = _mm512_mask_expand_ps(chi_S3_C2_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][3][0] + offs[0]))));

chi_S3_C2_RE = _mm512_mask_expand_ps(chi_S3_C2_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][3][0] + offs[4]))));

chi_S3_C2_RE = _mm512_mask_expand_ps(chi_S3_C2_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][3][0] + offs[8]))));

chi_S3_C2_RE = _mm512_mask_expand_ps(chi_S3_C2_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][3][0] + offs[12]))));

chi_S3_C2_IM = _mm512_undefined(); 
chi_S3_C2_IM = _mm512_mask_expand_ps(chi_S3_C2_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][3][1] + offs[0]))));

chi_S3_C2_IM = _mm512_mask_expand_ps(chi_S3_C2_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][3][1] + offs[4]))));

chi_S3_C2_IM = _mm512_mask_expand_ps(chi_S3_C2_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][3][1] + offs[8]))));

chi_S3_C2_IM = _mm512_mask_expand_ps(chi_S3_C2_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*chiBase)[2][3][1] + offs[12]))));

 _mm_prefetch((const char *)( ((*clBase).diag1[ 0 ] +0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+64) + pfyOffs[12]) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*clBase).diag1[ 0 ] +32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag1[ 0 ] +64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag1[ 0 ] +96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag1[ 0 ] +128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag1[ 0 ] +160) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag1[ 0 ] +192) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag1[ 0 ] +224) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag1[ 0 ] +256) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag1[ 0 ] +288) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag1[ 0 ] +320) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag1[ 0 ] +352) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag1[ 0 ] +384) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag1[ 0 ] +416) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag1[ 0 ] +448) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag1[ 0 ] +480) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag1[ 0 ] +512) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag1[ 0 ] +544) ), _MM_HINT_T0);

cl_diag_0 = _mm512_mask_cvtph_ps(cl_diag_0, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).diag1[ 0 ] ));

cl_diag_1 = _mm512_mask_cvtph_ps(cl_diag_1, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).diag1[ 1 ] ));

cl_diag_2 = _mm512_mask_cvtph_ps(cl_diag_2, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).diag1[ 2 ] ));

cl_diag_3 = _mm512_mask_cvtph_ps(cl_diag_3, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).diag1[ 3 ] ));

cl_diag_4 = _mm512_mask_cvtph_ps(cl_diag_4, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).diag1[ 4 ] ));

 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+0) + offs[0]) ), _MM_HINT_T1);

cl_diag_5 = _mm512_mask_cvtph_ps(cl_diag_5, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).diag1[ 5 ] ));

cl_offdiag_0_RE = _mm512_mask_cvtph_ps(cl_offdiag_0_RE, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag1[ 0 ][ 0]));

cl_offdiag_0_IM = _mm512_mask_cvtph_ps(cl_offdiag_0_IM, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag1[ 0 ][ 1]));

cl_offdiag_1_RE = _mm512_mask_cvtph_ps(cl_offdiag_1_RE, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag1[ 1 ][ 0]));

cl_offdiag_1_IM = _mm512_mask_cvtph_ps(cl_offdiag_1_IM, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag1[ 1 ][ 1]));

cl_offdiag_2_RE = _mm512_mask_cvtph_ps(cl_offdiag_2_RE, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag1[ 2 ][ 0]));

cl_offdiag_2_IM = _mm512_mask_cvtph_ps(cl_offdiag_2_IM, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag1[ 2 ][ 1]));

cl_offdiag_3_RE = _mm512_mask_cvtph_ps(cl_offdiag_3_RE, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag1[ 3 ][ 0]));

cl_offdiag_3_IM = _mm512_mask_cvtph_ps(cl_offdiag_3_IM, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag1[ 3 ][ 1]));

cl_offdiag_4_RE = _mm512_mask_cvtph_ps(cl_offdiag_4_RE, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag1[ 4 ][ 0]));

cl_offdiag_4_IM = _mm512_mask_cvtph_ps(cl_offdiag_4_IM, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag1[ 4 ][ 1]));

cl_offdiag_5_RE = _mm512_mask_cvtph_ps(cl_offdiag_5_RE, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag1[ 5 ][ 0]));

cl_offdiag_5_IM = _mm512_mask_cvtph_ps(cl_offdiag_5_IM, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag1[ 5 ][ 1]));

cl_offdiag_6_RE = _mm512_mask_cvtph_ps(cl_offdiag_6_RE, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag1[ 6 ][ 0]));

cl_offdiag_6_IM = _mm512_mask_cvtph_ps(cl_offdiag_6_IM, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag1[ 6 ][ 1]));

cl_offdiag_7_RE = _mm512_mask_cvtph_ps(cl_offdiag_7_RE, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag1[ 7 ][ 0]));

cl_offdiag_7_IM = _mm512_mask_cvtph_ps(cl_offdiag_7_IM, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag1[ 7 ][ 1]));

cl_offdiag_8_RE = _mm512_mask_cvtph_ps(cl_offdiag_8_RE, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag1[ 8 ][ 0]));

cl_offdiag_8_IM = _mm512_mask_cvtph_ps(cl_offdiag_8_IM, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag1[ 8 ][ 1]));

cl_offdiag_9_RE = _mm512_mask_cvtph_ps(cl_offdiag_9_RE, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag1[ 9 ][ 0]));

cl_offdiag_9_IM = _mm512_mask_cvtph_ps(cl_offdiag_9_IM, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag1[ 9 ][ 1]));

cl_offdiag_10_RE = _mm512_mask_cvtph_ps(cl_offdiag_10_RE, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag1[ 10 ][ 0]));

 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+0) + offs[4]) ), _MM_HINT_T1);

cl_offdiag_10_IM = _mm512_mask_cvtph_ps(cl_offdiag_10_IM, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag1[ 10 ][ 1]));

cl_offdiag_11_RE = _mm512_mask_cvtph_ps(cl_offdiag_11_RE, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag1[ 11 ][ 0]));

cl_offdiag_11_IM = _mm512_mask_cvtph_ps(cl_offdiag_11_IM, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag1[ 11 ][ 1]));

cl_offdiag_12_RE = _mm512_mask_cvtph_ps(cl_offdiag_12_RE, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag1[ 12 ][ 0]));

cl_offdiag_12_IM = _mm512_mask_cvtph_ps(cl_offdiag_12_IM, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag1[ 12 ][ 1]));

cl_offdiag_13_RE = _mm512_mask_cvtph_ps(cl_offdiag_13_RE, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag1[ 13 ][ 0]));

cl_offdiag_13_IM = _mm512_mask_cvtph_ps(cl_offdiag_13_IM, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag1[ 13 ][ 1]));

cl_offdiag_14_RE = _mm512_mask_cvtph_ps(cl_offdiag_14_RE, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag1[ 14 ][ 0]));

cl_offdiag_14_IM = _mm512_mask_cvtph_ps(cl_offdiag_14_IM, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag1[ 14 ][ 1]));

out_S0_C0_RE = _mm512_mul_ps( cl_diag_0 , chi_S0_C0_RE );
out_S0_C0_IM = _mm512_mul_ps( cl_diag_0 , chi_S0_C0_IM );
out_S0_C0_RE = _mm512_fmadd_ps(cl_offdiag_0_RE, chi_S0_C1_RE, out_S0_C0_RE);
out_S0_C0_RE = _mm512_fmadd_ps(cl_offdiag_0_IM, chi_S0_C1_IM, out_S0_C0_RE);
out_S0_C0_IM = _mm512_fmadd_ps(cl_offdiag_0_RE, chi_S0_C1_IM, out_S0_C0_IM);
out_S0_C0_IM = _mm512_fnmadd_ps(cl_offdiag_0_IM, chi_S0_C1_RE, out_S0_C0_IM);
out_S0_C0_RE = _mm512_fmadd_ps(cl_offdiag_1_RE, chi_S0_C2_RE, out_S0_C0_RE);
out_S0_C0_RE = _mm512_fmadd_ps(cl_offdiag_1_IM, chi_S0_C2_IM, out_S0_C0_RE);
out_S0_C0_IM = _mm512_fmadd_ps(cl_offdiag_1_RE, chi_S0_C2_IM, out_S0_C0_IM);
out_S0_C0_IM = _mm512_fnmadd_ps(cl_offdiag_1_IM, chi_S0_C2_RE, out_S0_C0_IM);
out_S0_C0_RE = _mm512_fmadd_ps(cl_offdiag_3_RE, chi_S1_C0_RE, out_S0_C0_RE);
out_S0_C0_RE = _mm512_fmadd_ps(cl_offdiag_3_IM, chi_S1_C0_IM, out_S0_C0_RE);
out_S0_C0_IM = _mm512_fmadd_ps(cl_offdiag_3_RE, chi_S1_C0_IM, out_S0_C0_IM);
 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+0) + offs[8]) ), _MM_HINT_T1);

out_S0_C0_IM = _mm512_fnmadd_ps(cl_offdiag_3_IM, chi_S1_C0_RE, out_S0_C0_IM);
out_S0_C0_RE = _mm512_fmadd_ps(cl_offdiag_6_RE, chi_S1_C1_RE, out_S0_C0_RE);
out_S0_C0_RE = _mm512_fmadd_ps(cl_offdiag_6_IM, chi_S1_C1_IM, out_S0_C0_RE);
out_S0_C0_IM = _mm512_fmadd_ps(cl_offdiag_6_RE, chi_S1_C1_IM, out_S0_C0_IM);
out_S0_C0_IM = _mm512_fnmadd_ps(cl_offdiag_6_IM, chi_S1_C1_RE, out_S0_C0_IM);
out_S0_C0_RE = _mm512_fmadd_ps(cl_offdiag_10_RE, chi_S1_C2_RE, out_S0_C0_RE);
out_S0_C0_RE = _mm512_fmadd_ps(cl_offdiag_10_IM, chi_S1_C2_IM, out_S0_C0_RE);
out_S0_C0_IM = _mm512_fmadd_ps(cl_offdiag_10_RE, chi_S1_C2_IM, out_S0_C0_IM);
out_S0_C0_IM = _mm512_fnmadd_ps(cl_offdiag_10_IM, chi_S1_C2_RE, out_S0_C0_IM);
out_S0_C1_RE = _mm512_mul_ps( cl_diag_1 , chi_S0_C1_RE );
out_S0_C1_IM = _mm512_mul_ps( cl_diag_1 , chi_S0_C1_IM );
out_S0_C1_RE = _mm512_fmadd_ps(cl_offdiag_0_RE, chi_S0_C0_RE, out_S0_C1_RE);
out_S0_C1_RE = _mm512_fnmadd_ps(cl_offdiag_0_IM, chi_S0_C0_IM, out_S0_C1_RE);
out_S0_C1_IM = _mm512_fmadd_ps(cl_offdiag_0_RE, chi_S0_C0_IM, out_S0_C1_IM);
out_S0_C1_IM = _mm512_fmadd_ps(cl_offdiag_0_IM, chi_S0_C0_RE, out_S0_C1_IM);
out_S0_C1_RE = _mm512_fmadd_ps(cl_offdiag_2_RE, chi_S0_C2_RE, out_S0_C1_RE);
out_S0_C1_RE = _mm512_fmadd_ps(cl_offdiag_2_IM, chi_S0_C2_IM, out_S0_C1_RE);
out_S0_C1_IM = _mm512_fmadd_ps(cl_offdiag_2_RE, chi_S0_C2_IM, out_S0_C1_IM);
out_S0_C1_IM = _mm512_fnmadd_ps(cl_offdiag_2_IM, chi_S0_C2_RE, out_S0_C1_IM);
out_S0_C1_RE = _mm512_fmadd_ps(cl_offdiag_4_RE, chi_S1_C0_RE, out_S0_C1_RE);
out_S0_C1_RE = _mm512_fmadd_ps(cl_offdiag_4_IM, chi_S1_C0_IM, out_S0_C1_RE);
out_S0_C1_IM = _mm512_fmadd_ps(cl_offdiag_4_RE, chi_S1_C0_IM, out_S0_C1_IM);
 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+0) + offs[12]) ), _MM_HINT_T1);

out_S0_C1_IM = _mm512_fnmadd_ps(cl_offdiag_4_IM, chi_S1_C0_RE, out_S0_C1_IM);
out_S0_C1_RE = _mm512_fmadd_ps(cl_offdiag_7_RE, chi_S1_C1_RE, out_S0_C1_RE);
out_S0_C1_RE = _mm512_fmadd_ps(cl_offdiag_7_IM, chi_S1_C1_IM, out_S0_C1_RE);
out_S0_C1_IM = _mm512_fmadd_ps(cl_offdiag_7_RE, chi_S1_C1_IM, out_S0_C1_IM);
out_S0_C1_IM = _mm512_fnmadd_ps(cl_offdiag_7_IM, chi_S1_C1_RE, out_S0_C1_IM);
out_S0_C1_RE = _mm512_fmadd_ps(cl_offdiag_11_RE, chi_S1_C2_RE, out_S0_C1_RE);
out_S0_C1_RE = _mm512_fmadd_ps(cl_offdiag_11_IM, chi_S1_C2_IM, out_S0_C1_RE);
out_S0_C1_IM = _mm512_fmadd_ps(cl_offdiag_11_RE, chi_S1_C2_IM, out_S0_C1_IM);
out_S0_C1_IM = _mm512_fnmadd_ps(cl_offdiag_11_IM, chi_S1_C2_RE, out_S0_C1_IM);
out_S0_C2_RE = _mm512_mul_ps( cl_diag_2 , chi_S0_C2_RE );
out_S0_C2_IM = _mm512_mul_ps( cl_diag_2 , chi_S0_C2_IM );
out_S0_C2_RE = _mm512_fmadd_ps(cl_offdiag_1_RE, chi_S0_C0_RE, out_S0_C2_RE);
out_S0_C2_RE = _mm512_fnmadd_ps(cl_offdiag_1_IM, chi_S0_C0_IM, out_S0_C2_RE);
out_S0_C2_IM = _mm512_fmadd_ps(cl_offdiag_1_RE, chi_S0_C0_IM, out_S0_C2_IM);
out_S0_C2_IM = _mm512_fmadd_ps(cl_offdiag_1_IM, chi_S0_C0_RE, out_S0_C2_IM);
out_S0_C2_RE = _mm512_fmadd_ps(cl_offdiag_2_RE, chi_S0_C1_RE, out_S0_C2_RE);
out_S0_C2_RE = _mm512_fnmadd_ps(cl_offdiag_2_IM, chi_S0_C1_IM, out_S0_C2_RE);
out_S0_C2_IM = _mm512_fmadd_ps(cl_offdiag_2_RE, chi_S0_C1_IM, out_S0_C2_IM);
out_S0_C2_IM = _mm512_fmadd_ps(cl_offdiag_2_IM, chi_S0_C1_RE, out_S0_C2_IM);
out_S0_C2_RE = _mm512_fmadd_ps(cl_offdiag_5_RE, chi_S1_C0_RE, out_S0_C2_RE);
out_S0_C2_RE = _mm512_fmadd_ps(cl_offdiag_5_IM, chi_S1_C0_IM, out_S0_C2_RE);
out_S0_C2_IM = _mm512_fmadd_ps(cl_offdiag_5_RE, chi_S1_C0_IM, out_S0_C2_IM);
 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+32) + offs[0]) ), _MM_HINT_T1);

out_S0_C2_IM = _mm512_fnmadd_ps(cl_offdiag_5_IM, chi_S1_C0_RE, out_S0_C2_IM);
out_S0_C2_RE = _mm512_fmadd_ps(cl_offdiag_8_RE, chi_S1_C1_RE, out_S0_C2_RE);
out_S0_C2_RE = _mm512_fmadd_ps(cl_offdiag_8_IM, chi_S1_C1_IM, out_S0_C2_RE);
out_S0_C2_IM = _mm512_fmadd_ps(cl_offdiag_8_RE, chi_S1_C1_IM, out_S0_C2_IM);
out_S0_C2_IM = _mm512_fnmadd_ps(cl_offdiag_8_IM, chi_S1_C1_RE, out_S0_C2_IM);
out_S0_C2_RE = _mm512_fmadd_ps(cl_offdiag_12_RE, chi_S1_C2_RE, out_S0_C2_RE);
out_S0_C2_RE = _mm512_fmadd_ps(cl_offdiag_12_IM, chi_S1_C2_IM, out_S0_C2_RE);
out_S0_C2_IM = _mm512_fmadd_ps(cl_offdiag_12_RE, chi_S1_C2_IM, out_S0_C2_IM);
out_S0_C2_IM = _mm512_fnmadd_ps(cl_offdiag_12_IM, chi_S1_C2_RE, out_S0_C2_IM);
out_S1_C0_RE = _mm512_mul_ps( cl_diag_3 , chi_S1_C0_RE );
out_S1_C0_IM = _mm512_mul_ps( cl_diag_3 , chi_S1_C0_IM );
out_S1_C0_RE = _mm512_fmadd_ps(cl_offdiag_3_RE, chi_S0_C0_RE, out_S1_C0_RE);
out_S1_C0_RE = _mm512_fnmadd_ps(cl_offdiag_3_IM, chi_S0_C0_IM, out_S1_C0_RE);
out_S1_C0_IM = _mm512_fmadd_ps(cl_offdiag_3_RE, chi_S0_C0_IM, out_S1_C0_IM);
out_S1_C0_IM = _mm512_fmadd_ps(cl_offdiag_3_IM, chi_S0_C0_RE, out_S1_C0_IM);
out_S1_C0_RE = _mm512_fmadd_ps(cl_offdiag_4_RE, chi_S0_C1_RE, out_S1_C0_RE);
out_S1_C0_RE = _mm512_fnmadd_ps(cl_offdiag_4_IM, chi_S0_C1_IM, out_S1_C0_RE);
out_S1_C0_IM = _mm512_fmadd_ps(cl_offdiag_4_RE, chi_S0_C1_IM, out_S1_C0_IM);
out_S1_C0_IM = _mm512_fmadd_ps(cl_offdiag_4_IM, chi_S0_C1_RE, out_S1_C0_IM);
out_S1_C0_RE = _mm512_fmadd_ps(cl_offdiag_5_RE, chi_S0_C2_RE, out_S1_C0_RE);
out_S1_C0_RE = _mm512_fnmadd_ps(cl_offdiag_5_IM, chi_S0_C2_IM, out_S1_C0_RE);
out_S1_C0_IM = _mm512_fmadd_ps(cl_offdiag_5_RE, chi_S0_C2_IM, out_S1_C0_IM);
 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+32) + offs[4]) ), _MM_HINT_T1);

out_S1_C0_IM = _mm512_fmadd_ps(cl_offdiag_5_IM, chi_S0_C2_RE, out_S1_C0_IM);
out_S1_C0_RE = _mm512_fmadd_ps(cl_offdiag_9_RE, chi_S1_C1_RE, out_S1_C0_RE);
out_S1_C0_RE = _mm512_fmadd_ps(cl_offdiag_9_IM, chi_S1_C1_IM, out_S1_C0_RE);
out_S1_C0_IM = _mm512_fmadd_ps(cl_offdiag_9_RE, chi_S1_C1_IM, out_S1_C0_IM);
out_S1_C0_IM = _mm512_fnmadd_ps(cl_offdiag_9_IM, chi_S1_C1_RE, out_S1_C0_IM);
out_S1_C0_RE = _mm512_fmadd_ps(cl_offdiag_13_RE, chi_S1_C2_RE, out_S1_C0_RE);
out_S1_C0_RE = _mm512_fmadd_ps(cl_offdiag_13_IM, chi_S1_C2_IM, out_S1_C0_RE);
out_S1_C0_IM = _mm512_fmadd_ps(cl_offdiag_13_RE, chi_S1_C2_IM, out_S1_C0_IM);
out_S1_C0_IM = _mm512_fnmadd_ps(cl_offdiag_13_IM, chi_S1_C2_RE, out_S1_C0_IM);
out_S1_C1_RE = _mm512_mul_ps( cl_diag_4 , chi_S1_C1_RE );
out_S1_C1_IM = _mm512_mul_ps( cl_diag_4 , chi_S1_C1_IM );
out_S1_C1_RE = _mm512_fmadd_ps(cl_offdiag_6_RE, chi_S0_C0_RE, out_S1_C1_RE);
out_S1_C1_RE = _mm512_fnmadd_ps(cl_offdiag_6_IM, chi_S0_C0_IM, out_S1_C1_RE);
out_S1_C1_IM = _mm512_fmadd_ps(cl_offdiag_6_RE, chi_S0_C0_IM, out_S1_C1_IM);
out_S1_C1_IM = _mm512_fmadd_ps(cl_offdiag_6_IM, chi_S0_C0_RE, out_S1_C1_IM);
out_S1_C1_RE = _mm512_fmadd_ps(cl_offdiag_7_RE, chi_S0_C1_RE, out_S1_C1_RE);
out_S1_C1_RE = _mm512_fnmadd_ps(cl_offdiag_7_IM, chi_S0_C1_IM, out_S1_C1_RE);
out_S1_C1_IM = _mm512_fmadd_ps(cl_offdiag_7_RE, chi_S0_C1_IM, out_S1_C1_IM);
out_S1_C1_IM = _mm512_fmadd_ps(cl_offdiag_7_IM, chi_S0_C1_RE, out_S1_C1_IM);
out_S1_C1_RE = _mm512_fmadd_ps(cl_offdiag_8_RE, chi_S0_C2_RE, out_S1_C1_RE);
out_S1_C1_RE = _mm512_fnmadd_ps(cl_offdiag_8_IM, chi_S0_C2_IM, out_S1_C1_RE);
out_S1_C1_IM = _mm512_fmadd_ps(cl_offdiag_8_RE, chi_S0_C2_IM, out_S1_C1_IM);
 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+32) + offs[8]) ), _MM_HINT_T1);

out_S1_C1_IM = _mm512_fmadd_ps(cl_offdiag_8_IM, chi_S0_C2_RE, out_S1_C1_IM);
out_S1_C1_RE = _mm512_fmadd_ps(cl_offdiag_9_RE, chi_S1_C0_RE, out_S1_C1_RE);
out_S1_C1_RE = _mm512_fnmadd_ps(cl_offdiag_9_IM, chi_S1_C0_IM, out_S1_C1_RE);
out_S1_C1_IM = _mm512_fmadd_ps(cl_offdiag_9_RE, chi_S1_C0_IM, out_S1_C1_IM);
out_S1_C1_IM = _mm512_fmadd_ps(cl_offdiag_9_IM, chi_S1_C0_RE, out_S1_C1_IM);
out_S1_C1_RE = _mm512_fmadd_ps(cl_offdiag_14_RE, chi_S1_C2_RE, out_S1_C1_RE);
out_S1_C1_RE = _mm512_fmadd_ps(cl_offdiag_14_IM, chi_S1_C2_IM, out_S1_C1_RE);
out_S1_C1_IM = _mm512_fmadd_ps(cl_offdiag_14_RE, chi_S1_C2_IM, out_S1_C1_IM);
out_S1_C1_IM = _mm512_fnmadd_ps(cl_offdiag_14_IM, chi_S1_C2_RE, out_S1_C1_IM);
out_S1_C2_RE = _mm512_mul_ps( cl_diag_5 , chi_S1_C2_RE );
out_S1_C2_IM = _mm512_mul_ps( cl_diag_5 , chi_S1_C2_IM );
out_S1_C2_RE = _mm512_fmadd_ps(cl_offdiag_10_RE, chi_S0_C0_RE, out_S1_C2_RE);
out_S1_C2_RE = _mm512_fnmadd_ps(cl_offdiag_10_IM, chi_S0_C0_IM, out_S1_C2_RE);
out_S1_C2_IM = _mm512_fmadd_ps(cl_offdiag_10_RE, chi_S0_C0_IM, out_S1_C2_IM);
out_S1_C2_IM = _mm512_fmadd_ps(cl_offdiag_10_IM, chi_S0_C0_RE, out_S1_C2_IM);
out_S1_C2_RE = _mm512_fmadd_ps(cl_offdiag_11_RE, chi_S0_C1_RE, out_S1_C2_RE);
out_S1_C2_RE = _mm512_fnmadd_ps(cl_offdiag_11_IM, chi_S0_C1_IM, out_S1_C2_RE);
out_S1_C2_IM = _mm512_fmadd_ps(cl_offdiag_11_RE, chi_S0_C1_IM, out_S1_C2_IM);
out_S1_C2_IM = _mm512_fmadd_ps(cl_offdiag_11_IM, chi_S0_C1_RE, out_S1_C2_IM);
out_S1_C2_RE = _mm512_fmadd_ps(cl_offdiag_12_RE, chi_S0_C2_RE, out_S1_C2_RE);
out_S1_C2_RE = _mm512_fnmadd_ps(cl_offdiag_12_IM, chi_S0_C2_IM, out_S1_C2_RE);
out_S1_C2_IM = _mm512_fmadd_ps(cl_offdiag_12_RE, chi_S0_C2_IM, out_S1_C2_IM);
 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+32) + offs[12]) ), _MM_HINT_T1);

out_S1_C2_IM = _mm512_fmadd_ps(cl_offdiag_12_IM, chi_S0_C2_RE, out_S1_C2_IM);
out_S1_C2_RE = _mm512_fmadd_ps(cl_offdiag_13_RE, chi_S1_C0_RE, out_S1_C2_RE);
out_S1_C2_RE = _mm512_fnmadd_ps(cl_offdiag_13_IM, chi_S1_C0_IM, out_S1_C2_RE);
out_S1_C2_IM = _mm512_fmadd_ps(cl_offdiag_13_RE, chi_S1_C0_IM, out_S1_C2_IM);
out_S1_C2_IM = _mm512_fmadd_ps(cl_offdiag_13_IM, chi_S1_C0_RE, out_S1_C2_IM);
out_S1_C2_RE = _mm512_fmadd_ps(cl_offdiag_14_RE, chi_S1_C1_RE, out_S1_C2_RE);
out_S1_C2_RE = _mm512_fnmadd_ps(cl_offdiag_14_IM, chi_S1_C1_IM, out_S1_C2_RE);
out_S1_C2_IM = _mm512_fmadd_ps(cl_offdiag_14_RE, chi_S1_C1_IM, out_S1_C2_IM);
out_S1_C2_IM = _mm512_fmadd_ps(cl_offdiag_14_IM, chi_S1_C1_RE, out_S1_C2_IM);
 _mm_prefetch((const char *)( ((*clBase).diag2[ 0 ] +0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag2[ 0 ] +32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag2[ 0 ] +64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag2[ 0 ] +96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag2[ 0 ] +128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag2[ 0 ] +160) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag2[ 0 ] +192) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag2[ 0 ] +224) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag2[ 0 ] +256) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag2[ 0 ] +288) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag2[ 0 ] +320) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag2[ 0 ] +352) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag2[ 0 ] +384) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+64) + offs[0]) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*clBase).diag2[ 0 ] +416) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag2[ 0 ] +448) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag2[ 0 ] +480) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag2[ 0 ] +512) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).diag2[ 0 ] +544) ), _MM_HINT_T0);

cl_diag_0 = _mm512_mask_cvtph_ps(cl_diag_0, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).diag2[ 0 ] ));

cl_diag_1 = _mm512_mask_cvtph_ps(cl_diag_1, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).diag2[ 1 ] ));

cl_diag_2 = _mm512_mask_cvtph_ps(cl_diag_2, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).diag2[ 2 ] ));

cl_diag_3 = _mm512_mask_cvtph_ps(cl_diag_3, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).diag2[ 3 ] ));

cl_diag_4 = _mm512_mask_cvtph_ps(cl_diag_4, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).diag2[ 4 ] ));

cl_diag_5 = _mm512_mask_cvtph_ps(cl_diag_5, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).diag2[ 5 ] ));

cl_offdiag_0_RE = _mm512_mask_cvtph_ps(cl_offdiag_0_RE, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag2[ 0 ][ 0]));

cl_offdiag_0_IM = _mm512_mask_cvtph_ps(cl_offdiag_0_IM, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag2[ 0 ][ 1]));

cl_offdiag_1_RE = _mm512_mask_cvtph_ps(cl_offdiag_1_RE, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag2[ 1 ][ 0]));

cl_offdiag_1_IM = _mm512_mask_cvtph_ps(cl_offdiag_1_IM, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag2[ 1 ][ 1]));

cl_offdiag_2_RE = _mm512_mask_cvtph_ps(cl_offdiag_2_RE, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag2[ 2 ][ 0]));

cl_offdiag_2_IM = _mm512_mask_cvtph_ps(cl_offdiag_2_IM, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag2[ 2 ][ 1]));

cl_offdiag_3_RE = _mm512_mask_cvtph_ps(cl_offdiag_3_RE, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag2[ 3 ][ 0]));

cl_offdiag_3_IM = _mm512_mask_cvtph_ps(cl_offdiag_3_IM, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag2[ 3 ][ 1]));

cl_offdiag_4_RE = _mm512_mask_cvtph_ps(cl_offdiag_4_RE, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag2[ 4 ][ 0]));

cl_offdiag_4_IM = _mm512_mask_cvtph_ps(cl_offdiag_4_IM, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag2[ 4 ][ 1]));

cl_offdiag_5_RE = _mm512_mask_cvtph_ps(cl_offdiag_5_RE, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag2[ 5 ][ 0]));

 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+64) + offs[4]) ), _MM_HINT_T1);

cl_offdiag_5_IM = _mm512_mask_cvtph_ps(cl_offdiag_5_IM, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag2[ 5 ][ 1]));

cl_offdiag_6_RE = _mm512_mask_cvtph_ps(cl_offdiag_6_RE, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag2[ 6 ][ 0]));

cl_offdiag_6_IM = _mm512_mask_cvtph_ps(cl_offdiag_6_IM, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag2[ 6 ][ 1]));

cl_offdiag_7_RE = _mm512_mask_cvtph_ps(cl_offdiag_7_RE, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag2[ 7 ][ 0]));

cl_offdiag_7_IM = _mm512_mask_cvtph_ps(cl_offdiag_7_IM, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag2[ 7 ][ 1]));

cl_offdiag_8_RE = _mm512_mask_cvtph_ps(cl_offdiag_8_RE, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag2[ 8 ][ 0]));

cl_offdiag_8_IM = _mm512_mask_cvtph_ps(cl_offdiag_8_IM, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag2[ 8 ][ 1]));

cl_offdiag_9_RE = _mm512_mask_cvtph_ps(cl_offdiag_9_RE, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag2[ 9 ][ 0]));

cl_offdiag_9_IM = _mm512_mask_cvtph_ps(cl_offdiag_9_IM, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag2[ 9 ][ 1]));

cl_offdiag_10_RE = _mm512_mask_cvtph_ps(cl_offdiag_10_RE, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag2[ 10 ][ 0]));

cl_offdiag_10_IM = _mm512_mask_cvtph_ps(cl_offdiag_10_IM, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag2[ 10 ][ 1]));

cl_offdiag_11_RE = _mm512_mask_cvtph_ps(cl_offdiag_11_RE, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag2[ 11 ][ 0]));

cl_offdiag_11_IM = _mm512_mask_cvtph_ps(cl_offdiag_11_IM, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag2[ 11 ][ 1]));

cl_offdiag_12_RE = _mm512_mask_cvtph_ps(cl_offdiag_12_RE, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag2[ 12 ][ 0]));

cl_offdiag_12_IM = _mm512_mask_cvtph_ps(cl_offdiag_12_IM, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag2[ 12 ][ 1]));

cl_offdiag_13_RE = _mm512_mask_cvtph_ps(cl_offdiag_13_RE, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag2[ 13 ][ 0]));

cl_offdiag_13_IM = _mm512_mask_cvtph_ps(cl_offdiag_13_IM, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag2[ 13 ][ 1]));

cl_offdiag_14_RE = _mm512_mask_cvtph_ps(cl_offdiag_14_RE, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag2[ 14 ][ 0]));

cl_offdiag_14_IM = _mm512_mask_cvtph_ps(cl_offdiag_14_IM, 0xFFFF, _mm256_load_si256((__m256i*)(*clBase).off_diag2[ 14 ][ 1]));

out_S2_C0_RE = _mm512_mul_ps( cl_diag_0 , chi_S2_C0_RE );
out_S2_C0_IM = _mm512_mul_ps( cl_diag_0 , chi_S2_C0_IM );
out_S2_C0_RE = _mm512_fmadd_ps(cl_offdiag_0_RE, chi_S2_C1_RE, out_S2_C0_RE);
 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+64) + offs[8]) ), _MM_HINT_T1);

out_S2_C0_RE = _mm512_fmadd_ps(cl_offdiag_0_IM, chi_S2_C1_IM, out_S2_C0_RE);
out_S2_C0_IM = _mm512_fmadd_ps(cl_offdiag_0_RE, chi_S2_C1_IM, out_S2_C0_IM);
out_S2_C0_IM = _mm512_fnmadd_ps(cl_offdiag_0_IM, chi_S2_C1_RE, out_S2_C0_IM);
out_S2_C0_RE = _mm512_fmadd_ps(cl_offdiag_1_RE, chi_S2_C2_RE, out_S2_C0_RE);
out_S2_C0_RE = _mm512_fmadd_ps(cl_offdiag_1_IM, chi_S2_C2_IM, out_S2_C0_RE);
out_S2_C0_IM = _mm512_fmadd_ps(cl_offdiag_1_RE, chi_S2_C2_IM, out_S2_C0_IM);
out_S2_C0_IM = _mm512_fnmadd_ps(cl_offdiag_1_IM, chi_S2_C2_RE, out_S2_C0_IM);
out_S2_C0_RE = _mm512_fmadd_ps(cl_offdiag_3_RE, chi_S3_C0_RE, out_S2_C0_RE);
out_S2_C0_RE = _mm512_fmadd_ps(cl_offdiag_3_IM, chi_S3_C0_IM, out_S2_C0_RE);
out_S2_C0_IM = _mm512_fmadd_ps(cl_offdiag_3_RE, chi_S3_C0_IM, out_S2_C0_IM);
out_S2_C0_IM = _mm512_fnmadd_ps(cl_offdiag_3_IM, chi_S3_C0_RE, out_S2_C0_IM);
out_S2_C0_RE = _mm512_fmadd_ps(cl_offdiag_6_RE, chi_S3_C1_RE, out_S2_C0_RE);
out_S2_C0_RE = _mm512_fmadd_ps(cl_offdiag_6_IM, chi_S3_C1_IM, out_S2_C0_RE);
out_S2_C0_IM = _mm512_fmadd_ps(cl_offdiag_6_RE, chi_S3_C1_IM, out_S2_C0_IM);
out_S2_C0_IM = _mm512_fnmadd_ps(cl_offdiag_6_IM, chi_S3_C1_RE, out_S2_C0_IM);
out_S2_C0_RE = _mm512_fmadd_ps(cl_offdiag_10_RE, chi_S3_C2_RE, out_S2_C0_RE);
out_S2_C0_RE = _mm512_fmadd_ps(cl_offdiag_10_IM, chi_S3_C2_IM, out_S2_C0_RE);
out_S2_C0_IM = _mm512_fmadd_ps(cl_offdiag_10_RE, chi_S3_C2_IM, out_S2_C0_IM);
out_S2_C0_IM = _mm512_fnmadd_ps(cl_offdiag_10_IM, chi_S3_C2_RE, out_S2_C0_IM);
out_S2_C1_RE = _mm512_mul_ps( cl_diag_1 , chi_S2_C1_RE );
out_S2_C1_IM = _mm512_mul_ps( cl_diag_1 , chi_S2_C1_IM );
out_S2_C1_RE = _mm512_fmadd_ps(cl_offdiag_0_RE, chi_S2_C0_RE, out_S2_C1_RE);
 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+64) + offs[12]) ), _MM_HINT_T1);

out_S2_C1_RE = _mm512_fnmadd_ps(cl_offdiag_0_IM, chi_S2_C0_IM, out_S2_C1_RE);
out_S2_C1_IM = _mm512_fmadd_ps(cl_offdiag_0_RE, chi_S2_C0_IM, out_S2_C1_IM);
out_S2_C1_IM = _mm512_fmadd_ps(cl_offdiag_0_IM, chi_S2_C0_RE, out_S2_C1_IM);
out_S2_C1_RE = _mm512_fmadd_ps(cl_offdiag_2_RE, chi_S2_C2_RE, out_S2_C1_RE);
out_S2_C1_RE = _mm512_fmadd_ps(cl_offdiag_2_IM, chi_S2_C2_IM, out_S2_C1_RE);
out_S2_C1_IM = _mm512_fmadd_ps(cl_offdiag_2_RE, chi_S2_C2_IM, out_S2_C1_IM);
out_S2_C1_IM = _mm512_fnmadd_ps(cl_offdiag_2_IM, chi_S2_C2_RE, out_S2_C1_IM);
out_S2_C1_RE = _mm512_fmadd_ps(cl_offdiag_4_RE, chi_S3_C0_RE, out_S2_C1_RE);
out_S2_C1_RE = _mm512_fmadd_ps(cl_offdiag_4_IM, chi_S3_C0_IM, out_S2_C1_RE);
out_S2_C1_IM = _mm512_fmadd_ps(cl_offdiag_4_RE, chi_S3_C0_IM, out_S2_C1_IM);
out_S2_C1_IM = _mm512_fnmadd_ps(cl_offdiag_4_IM, chi_S3_C0_RE, out_S2_C1_IM);
out_S2_C1_RE = _mm512_fmadd_ps(cl_offdiag_7_RE, chi_S3_C1_RE, out_S2_C1_RE);
out_S2_C1_RE = _mm512_fmadd_ps(cl_offdiag_7_IM, chi_S3_C1_IM, out_S2_C1_RE);
out_S2_C1_IM = _mm512_fmadd_ps(cl_offdiag_7_RE, chi_S3_C1_IM, out_S2_C1_IM);
out_S2_C1_IM = _mm512_fnmadd_ps(cl_offdiag_7_IM, chi_S3_C1_RE, out_S2_C1_IM);
out_S2_C1_RE = _mm512_fmadd_ps(cl_offdiag_11_RE, chi_S3_C2_RE, out_S2_C1_RE);
out_S2_C1_RE = _mm512_fmadd_ps(cl_offdiag_11_IM, chi_S3_C2_IM, out_S2_C1_RE);
out_S2_C1_IM = _mm512_fmadd_ps(cl_offdiag_11_RE, chi_S3_C2_IM, out_S2_C1_IM);
out_S2_C1_IM = _mm512_fnmadd_ps(cl_offdiag_11_IM, chi_S3_C2_RE, out_S2_C1_IM);
out_S2_C2_RE = _mm512_mul_ps( cl_diag_2 , chi_S2_C2_RE );
out_S2_C2_IM = _mm512_mul_ps( cl_diag_2 , chi_S2_C2_IM );
out_S2_C2_RE = _mm512_fmadd_ps(cl_offdiag_1_RE, chi_S2_C0_RE, out_S2_C2_RE);
 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+0) + offs[0]) ), _MM_HINT_T1);

out_S2_C2_RE = _mm512_fnmadd_ps(cl_offdiag_1_IM, chi_S2_C0_IM, out_S2_C2_RE);
out_S2_C2_IM = _mm512_fmadd_ps(cl_offdiag_1_RE, chi_S2_C0_IM, out_S2_C2_IM);
out_S2_C2_IM = _mm512_fmadd_ps(cl_offdiag_1_IM, chi_S2_C0_RE, out_S2_C2_IM);
out_S2_C2_RE = _mm512_fmadd_ps(cl_offdiag_2_RE, chi_S2_C1_RE, out_S2_C2_RE);
out_S2_C2_RE = _mm512_fnmadd_ps(cl_offdiag_2_IM, chi_S2_C1_IM, out_S2_C2_RE);
out_S2_C2_IM = _mm512_fmadd_ps(cl_offdiag_2_RE, chi_S2_C1_IM, out_S2_C2_IM);
out_S2_C2_IM = _mm512_fmadd_ps(cl_offdiag_2_IM, chi_S2_C1_RE, out_S2_C2_IM);
out_S2_C2_RE = _mm512_fmadd_ps(cl_offdiag_5_RE, chi_S3_C0_RE, out_S2_C2_RE);
out_S2_C2_RE = _mm512_fmadd_ps(cl_offdiag_5_IM, chi_S3_C0_IM, out_S2_C2_RE);
out_S2_C2_IM = _mm512_fmadd_ps(cl_offdiag_5_RE, chi_S3_C0_IM, out_S2_C2_IM);
out_S2_C2_IM = _mm512_fnmadd_ps(cl_offdiag_5_IM, chi_S3_C0_RE, out_S2_C2_IM);
out_S2_C2_RE = _mm512_fmadd_ps(cl_offdiag_8_RE, chi_S3_C1_RE, out_S2_C2_RE);
out_S2_C2_RE = _mm512_fmadd_ps(cl_offdiag_8_IM, chi_S3_C1_IM, out_S2_C2_RE);
out_S2_C2_IM = _mm512_fmadd_ps(cl_offdiag_8_RE, chi_S3_C1_IM, out_S2_C2_IM);
out_S2_C2_IM = _mm512_fnmadd_ps(cl_offdiag_8_IM, chi_S3_C1_RE, out_S2_C2_IM);
out_S2_C2_RE = _mm512_fmadd_ps(cl_offdiag_12_RE, chi_S3_C2_RE, out_S2_C2_RE);
out_S2_C2_RE = _mm512_fmadd_ps(cl_offdiag_12_IM, chi_S3_C2_IM, out_S2_C2_RE);
out_S2_C2_IM = _mm512_fmadd_ps(cl_offdiag_12_RE, chi_S3_C2_IM, out_S2_C2_IM);
out_S2_C2_IM = _mm512_fnmadd_ps(cl_offdiag_12_IM, chi_S3_C2_RE, out_S2_C2_IM);
out_S3_C0_RE = _mm512_mul_ps( cl_diag_3 , chi_S3_C0_RE );
out_S3_C0_IM = _mm512_mul_ps( cl_diag_3 , chi_S3_C0_IM );
out_S3_C0_RE = _mm512_fmadd_ps(cl_offdiag_3_RE, chi_S2_C0_RE, out_S3_C0_RE);
 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+0) + offs[4]) ), _MM_HINT_T1);

out_S3_C0_RE = _mm512_fnmadd_ps(cl_offdiag_3_IM, chi_S2_C0_IM, out_S3_C0_RE);
out_S3_C0_IM = _mm512_fmadd_ps(cl_offdiag_3_RE, chi_S2_C0_IM, out_S3_C0_IM);
out_S3_C0_IM = _mm512_fmadd_ps(cl_offdiag_3_IM, chi_S2_C0_RE, out_S3_C0_IM);
out_S3_C0_RE = _mm512_fmadd_ps(cl_offdiag_4_RE, chi_S2_C1_RE, out_S3_C0_RE);
out_S3_C0_RE = _mm512_fnmadd_ps(cl_offdiag_4_IM, chi_S2_C1_IM, out_S3_C0_RE);
out_S3_C0_IM = _mm512_fmadd_ps(cl_offdiag_4_RE, chi_S2_C1_IM, out_S3_C0_IM);
out_S3_C0_IM = _mm512_fmadd_ps(cl_offdiag_4_IM, chi_S2_C1_RE, out_S3_C0_IM);
out_S3_C0_RE = _mm512_fmadd_ps(cl_offdiag_5_RE, chi_S2_C2_RE, out_S3_C0_RE);
out_S3_C0_RE = _mm512_fnmadd_ps(cl_offdiag_5_IM, chi_S2_C2_IM, out_S3_C0_RE);
out_S3_C0_IM = _mm512_fmadd_ps(cl_offdiag_5_RE, chi_S2_C2_IM, out_S3_C0_IM);
out_S3_C0_IM = _mm512_fmadd_ps(cl_offdiag_5_IM, chi_S2_C2_RE, out_S3_C0_IM);
out_S3_C0_RE = _mm512_fmadd_ps(cl_offdiag_9_RE, chi_S3_C1_RE, out_S3_C0_RE);
out_S3_C0_RE = _mm512_fmadd_ps(cl_offdiag_9_IM, chi_S3_C1_IM, out_S3_C0_RE);
out_S3_C0_IM = _mm512_fmadd_ps(cl_offdiag_9_RE, chi_S3_C1_IM, out_S3_C0_IM);
out_S3_C0_IM = _mm512_fnmadd_ps(cl_offdiag_9_IM, chi_S3_C1_RE, out_S3_C0_IM);
out_S3_C0_RE = _mm512_fmadd_ps(cl_offdiag_13_RE, chi_S3_C2_RE, out_S3_C0_RE);
out_S3_C0_RE = _mm512_fmadd_ps(cl_offdiag_13_IM, chi_S3_C2_IM, out_S3_C0_RE);
out_S3_C0_IM = _mm512_fmadd_ps(cl_offdiag_13_RE, chi_S3_C2_IM, out_S3_C0_IM);
out_S3_C0_IM = _mm512_fnmadd_ps(cl_offdiag_13_IM, chi_S3_C2_RE, out_S3_C0_IM);
out_S3_C1_RE = _mm512_mul_ps( cl_diag_4 , chi_S3_C1_RE );
out_S3_C1_IM = _mm512_mul_ps( cl_diag_4 , chi_S3_C1_IM );
out_S3_C1_RE = _mm512_fmadd_ps(cl_offdiag_6_RE, chi_S2_C0_RE, out_S3_C1_RE);
 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+0) + offs[8]) ), _MM_HINT_T1);

out_S3_C1_RE = _mm512_fnmadd_ps(cl_offdiag_6_IM, chi_S2_C0_IM, out_S3_C1_RE);
out_S3_C1_IM = _mm512_fmadd_ps(cl_offdiag_6_RE, chi_S2_C0_IM, out_S3_C1_IM);
out_S3_C1_IM = _mm512_fmadd_ps(cl_offdiag_6_IM, chi_S2_C0_RE, out_S3_C1_IM);
out_S3_C1_RE = _mm512_fmadd_ps(cl_offdiag_7_RE, chi_S2_C1_RE, out_S3_C1_RE);
out_S3_C1_RE = _mm512_fnmadd_ps(cl_offdiag_7_IM, chi_S2_C1_IM, out_S3_C1_RE);
out_S3_C1_IM = _mm512_fmadd_ps(cl_offdiag_7_RE, chi_S2_C1_IM, out_S3_C1_IM);
out_S3_C1_IM = _mm512_fmadd_ps(cl_offdiag_7_IM, chi_S2_C1_RE, out_S3_C1_IM);
out_S3_C1_RE = _mm512_fmadd_ps(cl_offdiag_8_RE, chi_S2_C2_RE, out_S3_C1_RE);
out_S3_C1_RE = _mm512_fnmadd_ps(cl_offdiag_8_IM, chi_S2_C2_IM, out_S3_C1_RE);
out_S3_C1_IM = _mm512_fmadd_ps(cl_offdiag_8_RE, chi_S2_C2_IM, out_S3_C1_IM);
out_S3_C1_IM = _mm512_fmadd_ps(cl_offdiag_8_IM, chi_S2_C2_RE, out_S3_C1_IM);
out_S3_C1_RE = _mm512_fmadd_ps(cl_offdiag_9_RE, chi_S3_C0_RE, out_S3_C1_RE);
out_S3_C1_RE = _mm512_fnmadd_ps(cl_offdiag_9_IM, chi_S3_C0_IM, out_S3_C1_RE);
out_S3_C1_IM = _mm512_fmadd_ps(cl_offdiag_9_RE, chi_S3_C0_IM, out_S3_C1_IM);
out_S3_C1_IM = _mm512_fmadd_ps(cl_offdiag_9_IM, chi_S3_C0_RE, out_S3_C1_IM);
out_S3_C1_RE = _mm512_fmadd_ps(cl_offdiag_14_RE, chi_S3_C2_RE, out_S3_C1_RE);
out_S3_C1_RE = _mm512_fmadd_ps(cl_offdiag_14_IM, chi_S3_C2_IM, out_S3_C1_RE);
out_S3_C1_IM = _mm512_fmadd_ps(cl_offdiag_14_RE, chi_S3_C2_IM, out_S3_C1_IM);
out_S3_C1_IM = _mm512_fnmadd_ps(cl_offdiag_14_IM, chi_S3_C2_RE, out_S3_C1_IM);
out_S3_C2_RE = _mm512_mul_ps( cl_diag_5 , chi_S3_C2_RE );
out_S3_C2_IM = _mm512_mul_ps( cl_diag_5 , chi_S3_C2_IM );
out_S3_C2_RE = _mm512_fmadd_ps(cl_offdiag_10_RE, chi_S2_C0_RE, out_S3_C2_RE);
 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+0) + offs[12]) ), _MM_HINT_T1);

out_S3_C2_RE = _mm512_fnmadd_ps(cl_offdiag_10_IM, chi_S2_C0_IM, out_S3_C2_RE);
out_S3_C2_IM = _mm512_fmadd_ps(cl_offdiag_10_RE, chi_S2_C0_IM, out_S3_C2_IM);
out_S3_C2_IM = _mm512_fmadd_ps(cl_offdiag_10_IM, chi_S2_C0_RE, out_S3_C2_IM);
out_S3_C2_RE = _mm512_fmadd_ps(cl_offdiag_11_RE, chi_S2_C1_RE, out_S3_C2_RE);
out_S3_C2_RE = _mm512_fnmadd_ps(cl_offdiag_11_IM, chi_S2_C1_IM, out_S3_C2_RE);
out_S3_C2_IM = _mm512_fmadd_ps(cl_offdiag_11_RE, chi_S2_C1_IM, out_S3_C2_IM);
out_S3_C2_IM = _mm512_fmadd_ps(cl_offdiag_11_IM, chi_S2_C1_RE, out_S3_C2_IM);
out_S3_C2_RE = _mm512_fmadd_ps(cl_offdiag_12_RE, chi_S2_C2_RE, out_S3_C2_RE);
out_S3_C2_RE = _mm512_fnmadd_ps(cl_offdiag_12_IM, chi_S2_C2_IM, out_S3_C2_RE);
out_S3_C2_IM = _mm512_fmadd_ps(cl_offdiag_12_RE, chi_S2_C2_IM, out_S3_C2_IM);
out_S3_C2_IM = _mm512_fmadd_ps(cl_offdiag_12_IM, chi_S2_C2_RE, out_S3_C2_IM);
out_S3_C2_RE = _mm512_fmadd_ps(cl_offdiag_13_RE, chi_S3_C0_RE, out_S3_C2_RE);
out_S3_C2_RE = _mm512_fnmadd_ps(cl_offdiag_13_IM, chi_S3_C0_IM, out_S3_C2_RE);
out_S3_C2_IM = _mm512_fmadd_ps(cl_offdiag_13_RE, chi_S3_C0_IM, out_S3_C2_IM);
out_S3_C2_IM = _mm512_fmadd_ps(cl_offdiag_13_IM, chi_S3_C0_RE, out_S3_C2_IM);
out_S3_C2_RE = _mm512_fmadd_ps(cl_offdiag_14_RE, chi_S3_C1_RE, out_S3_C2_RE);
out_S3_C2_RE = _mm512_fnmadd_ps(cl_offdiag_14_IM, chi_S3_C1_IM, out_S3_C2_RE);
out_S3_C2_IM = _mm512_fmadd_ps(cl_offdiag_14_RE, chi_S3_C1_IM, out_S3_C2_IM);
out_S3_C2_IM = _mm512_fmadd_ps(cl_offdiag_14_IM, chi_S3_C1_RE, out_S3_C2_IM);
 if ( accumulate[0] ) { 
__m512 beta_vec = _mm512_setzero_ps(); 
beta_vec = _mm512_cvtph_ps(_mm256_set1_epi16(*(&coeff_s)));

 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+32) + offs[0]) ), _MM_HINT_T1);

__mmask accMask;

accMask = accumulate[0];

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+0) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+0) + xbOffs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+0) + xbOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+0) + xbOffs[12]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+32) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+32) + xbOffs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+32) + xbOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+32) + xbOffs[12]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+64) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+64) + xbOffs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+64) + xbOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+64) + xbOffs[12]) ), _MM_HINT_T0);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + xbOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + xbOffs[1]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x10, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + xbOffs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xe0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + xbOffs[5]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + xbOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + xbOffs[9]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x1000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + xbOffs[12]))));

 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+32) + offs[4]) ), _MM_HINT_T1);

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xe000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + xbOffs[13]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + xbOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + xbOffs[1]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x10, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + xbOffs[4]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xe0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + xbOffs[5]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + xbOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + xbOffs[9]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x1000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + xbOffs[12]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xe000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + xbOffs[13]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + xbOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + xbOffs[1]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x10, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + xbOffs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xe0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + xbOffs[5]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + xbOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + xbOffs[9]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x1000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + xbOffs[12]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xe000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + xbOffs[13]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + xbOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + xbOffs[1]))));

 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+32) + offs[8]) ), _MM_HINT_T1);

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x10, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + xbOffs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xe0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + xbOffs[5]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + xbOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + xbOffs[9]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x1000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + xbOffs[12]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xe000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + xbOffs[13]))));

b_S0_C0_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S0_C0_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + xbOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + xbOffs[1]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x10, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + xbOffs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xe0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + xbOffs[5]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + xbOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + xbOffs[9]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x1000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + xbOffs[12]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xe000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + xbOffs[13]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + xbOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + xbOffs[1]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x10, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + xbOffs[4]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xe0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + xbOffs[5]))));

 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+32) + offs[12]) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + xbOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + xbOffs[9]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x1000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + xbOffs[12]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xe000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + xbOffs[13]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + xbOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + xbOffs[1]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x10, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + xbOffs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xe0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + xbOffs[5]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + xbOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + xbOffs[9]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x1000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + xbOffs[12]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xe000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + xbOffs[13]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + xbOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + xbOffs[1]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x10, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + xbOffs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xe0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + xbOffs[5]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + xbOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + xbOffs[9]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x1000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + xbOffs[12]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xe000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + xbOffs[13]))));

 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+64) + offs[0]) ), _MM_HINT_T1);

b_S0_C1_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S0_C1_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + xbOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + xbOffs[1]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x10, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + xbOffs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xe0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + xbOffs[5]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + xbOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + xbOffs[9]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x1000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + xbOffs[12]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xe000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + xbOffs[13]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + xbOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + xbOffs[1]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x10, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + xbOffs[4]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xe0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + xbOffs[5]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + xbOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + xbOffs[9]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x1000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + xbOffs[12]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xe000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + xbOffs[13]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + xbOffs[0]))));

 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+64) + offs[4]) ), _MM_HINT_T1);

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + xbOffs[1]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x10, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + xbOffs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xe0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + xbOffs[5]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + xbOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + xbOffs[9]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x1000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + xbOffs[12]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xe000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + xbOffs[13]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + xbOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + xbOffs[1]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x10, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + xbOffs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xe0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + xbOffs[5]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + xbOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + xbOffs[9]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x1000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + xbOffs[12]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xe000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + xbOffs[13]))));

b_S0_C2_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S0_C2_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+64) + offs[8]) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+160) ), _MM_HINT_T0);

u_00_re = _mm512_mask_cvtph_ps(u_00_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[0][0][0][0]));

u_00_im = _mm512_mask_cvtph_ps(u_00_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[0][0][0][1]));

u_01_re = _mm512_mask_cvtph_ps(u_01_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[0][0][1][0]));

u_01_im = _mm512_mask_cvtph_ps(u_01_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[0][0][1][1]));

u_02_re = _mm512_mask_cvtph_ps(u_02_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[0][0][2][0]));

u_02_im = _mm512_mask_cvtph_ps(u_02_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[0][0][2][1]));

u_10_re = _mm512_mask_cvtph_ps(u_10_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[0][1][0][0]));

u_10_im = _mm512_mask_cvtph_ps(u_10_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[0][1][0][1]));

u_11_re = _mm512_mask_cvtph_ps(u_11_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[0][1][1][0]));

u_11_im = _mm512_mask_cvtph_ps(u_11_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[0][1][1][1]));

u_12_re = _mm512_mask_cvtph_ps(u_12_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[0][1][2][0]));

u_12_im = _mm512_mask_cvtph_ps(u_12_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[0][1][2][1]));

u_20_re = _mm512_mul_ps( u_01_re , u_12_re );
u_20_re = _mm512_fnmadd_ps(u_01_im, u_12_im, u_20_re);
u_20_re = _mm512_fnmadd_ps(u_02_re, u_11_re, u_20_re);
u_20_re = _mm512_fmadd_ps(u_02_im, u_11_im, u_20_re);
u_20_im = _mm512_mul_ps( u_02_re , u_11_im );
u_20_im = _mm512_fmadd_ps(u_02_im, u_11_re, u_20_im);
u_20_im = _mm512_fnmadd_ps(u_01_re, u_12_im, u_20_im);
u_20_im = _mm512_fnmadd_ps(u_01_im, u_12_re, u_20_im);
 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+64) + offs[12]) ), _MM_HINT_T1);

u_21_re = _mm512_mul_ps( u_02_re , u_10_re );
u_21_re = _mm512_fnmadd_ps(u_02_im, u_10_im, u_21_re);
u_21_re = _mm512_fnmadd_ps(u_00_re, u_12_re, u_21_re);
u_21_re = _mm512_fmadd_ps(u_00_im, u_12_im, u_21_re);
u_21_im = _mm512_mul_ps( u_00_re , u_12_im );
u_21_im = _mm512_fmadd_ps(u_00_im, u_12_re, u_21_im);
u_21_im = _mm512_fnmadd_ps(u_02_re, u_10_im, u_21_im);
u_21_im = _mm512_fnmadd_ps(u_02_im, u_10_re, u_21_im);
u_22_re = _mm512_mul_ps( u_00_re , u_11_re );
u_22_re = _mm512_fnmadd_ps(u_00_im, u_11_im, u_22_re);
u_22_re = _mm512_fnmadd_ps(u_01_re, u_10_re, u_22_re);
u_22_re = _mm512_fmadd_ps(u_01_im, u_10_im, u_22_re);
u_22_im = _mm512_mul_ps( u_01_re , u_10_im );
u_22_im = _mm512_fmadd_ps(u_01_im, u_10_re, u_22_im);
u_22_im = _mm512_fnmadd_ps(u_00_re, u_11_im, u_22_im);
u_22_im = _mm512_fnmadd_ps(u_00_im, u_11_re, u_22_im);
ub_S0_C0_RE = _mm512_mul_ps( u_00_re , b_S0_C0_RE );
ub_S0_C0_RE = _mm512_fmadd_ps(u_00_im, b_S0_C0_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_mul_ps( u_00_re , b_S0_C0_IM );
ub_S0_C0_IM = _mm512_fnmadd_ps(u_00_im, b_S0_C0_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_01_re, b_S0_C1_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fmadd_ps(u_01_im, b_S0_C1_IM, ub_S0_C0_RE);
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+0) + offs[0]) ), _MM_HINT_T1);

ub_S0_C0_IM = _mm512_fmadd_ps(u_01_re, b_S0_C1_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fnmadd_ps(u_01_im, b_S0_C1_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_02_re, b_S0_C2_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fmadd_ps(u_02_im, b_S0_C2_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_02_re, b_S0_C2_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fnmadd_ps(u_02_im, b_S0_C2_RE, ub_S0_C0_IM);
ub_S0_C1_RE = _mm512_mul_ps( u_10_re , b_S0_C0_RE );
ub_S0_C1_RE = _mm512_fmadd_ps(u_10_im, b_S0_C0_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_mul_ps( u_10_re , b_S0_C0_IM );
ub_S0_C1_IM = _mm512_fnmadd_ps(u_10_im, b_S0_C0_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_re, b_S0_C1_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_im, b_S0_C1_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_re, b_S0_C1_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fnmadd_ps(u_11_im, b_S0_C1_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_12_re, b_S0_C2_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fmadd_ps(u_12_im, b_S0_C2_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_12_re, b_S0_C2_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fnmadd_ps(u_12_im, b_S0_C2_RE, ub_S0_C1_IM);
ub_S0_C2_RE = _mm512_mul_ps( u_20_re , b_S0_C0_RE );
ub_S0_C2_RE = _mm512_fmadd_ps(u_20_im, b_S0_C0_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_mul_ps( u_20_re , b_S0_C0_IM );
ub_S0_C2_IM = _mm512_fnmadd_ps(u_20_im, b_S0_C0_RE, ub_S0_C2_IM);
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+0) + offs[4]) ), _MM_HINT_T1);

ub_S0_C2_RE = _mm512_fmadd_ps(u_21_re, b_S0_C1_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fmadd_ps(u_21_im, b_S0_C1_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_21_re, b_S0_C1_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fnmadd_ps(u_21_im, b_S0_C1_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_22_re, b_S0_C2_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fmadd_ps(u_22_im, b_S0_C2_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_re, b_S0_C2_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fnmadd_ps(u_22_im, b_S0_C2_RE, ub_S0_C2_IM);
out_S0_C0_RE = _mm512_mask_mov_ps(out_S0_C0_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C0_RE, out_S0_C0_RE));
out_S0_C0_IM = _mm512_mask_mov_ps(out_S0_C0_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C0_IM, out_S0_C0_IM));
out_S0_C1_RE = _mm512_mask_mov_ps(out_S0_C1_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C1_RE, out_S0_C1_RE));
out_S0_C1_IM = _mm512_mask_mov_ps(out_S0_C1_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C1_IM, out_S0_C1_IM));
out_S0_C2_RE = _mm512_mask_mov_ps(out_S0_C2_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C2_RE, out_S0_C2_RE));
out_S0_C2_IM = _mm512_mask_mov_ps(out_S0_C2_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C2_IM, out_S0_C2_IM));
out_S3_C0_RE = _mm512_mask_mov_ps(out_S3_C0_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C0_IM, out_S3_C0_RE));
out_S3_C0_IM = _mm512_mask_mov_ps(out_S3_C0_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C0_RE, out_S3_C0_IM));
out_S3_C1_RE = _mm512_mask_mov_ps(out_S3_C1_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C1_IM, out_S3_C1_RE));
out_S3_C1_IM = _mm512_mask_mov_ps(out_S3_C1_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C1_RE, out_S3_C1_IM));
out_S3_C2_RE = _mm512_mask_mov_ps(out_S3_C2_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C2_IM, out_S3_C2_RE));
out_S3_C2_IM = _mm512_mask_mov_ps(out_S3_C2_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C2_RE, out_S3_C2_IM));
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + xbOffs[0]))));

 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+0) + offs[8]) ), _MM_HINT_T1);

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + xbOffs[1]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x10, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + xbOffs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xe0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + xbOffs[5]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + xbOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + xbOffs[9]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x1000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + xbOffs[12]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xe000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + xbOffs[13]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + xbOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + xbOffs[1]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x10, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + xbOffs[4]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xe0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + xbOffs[5]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + xbOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + xbOffs[9]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x1000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + xbOffs[12]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xe000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + xbOffs[13]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + xbOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + xbOffs[1]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x10, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + xbOffs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xe0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + xbOffs[5]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + xbOffs[8]))));

 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+0) + offs[12]) ), _MM_HINT_T1);

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + xbOffs[9]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x1000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + xbOffs[12]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xe000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + xbOffs[13]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + xbOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + xbOffs[1]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x10, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + xbOffs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xe0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + xbOffs[5]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + xbOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + xbOffs[9]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x1000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + xbOffs[12]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xe000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + xbOffs[13]))));

b_S1_C0_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S1_C0_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + xbOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + xbOffs[1]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x10, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + xbOffs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xe0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + xbOffs[5]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + xbOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + xbOffs[9]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x1000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + xbOffs[12]))));

 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+32) + offs[0]) ), _MM_HINT_T1);

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xe000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + xbOffs[13]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + xbOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + xbOffs[1]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x10, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + xbOffs[4]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xe0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + xbOffs[5]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + xbOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + xbOffs[9]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x1000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + xbOffs[12]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xe000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + xbOffs[13]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + xbOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + xbOffs[1]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x10, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + xbOffs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xe0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + xbOffs[5]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + xbOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + xbOffs[9]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x1000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + xbOffs[12]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xe000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + xbOffs[13]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + xbOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + xbOffs[1]))));

 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+32) + offs[4]) ), _MM_HINT_T1);

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x10, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + xbOffs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xe0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + xbOffs[5]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + xbOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + xbOffs[9]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x1000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + xbOffs[12]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xe000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + xbOffs[13]))));

b_S1_C1_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S1_C1_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + xbOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + xbOffs[1]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x10, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + xbOffs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xe0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + xbOffs[5]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + xbOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + xbOffs[9]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x1000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + xbOffs[12]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xe000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + xbOffs[13]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + xbOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + xbOffs[1]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x10, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + xbOffs[4]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xe0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + xbOffs[5]))));

 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+32) + offs[8]) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + xbOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + xbOffs[9]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x1000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + xbOffs[12]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xe000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + xbOffs[13]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + xbOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + xbOffs[1]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x10, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + xbOffs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xe0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + xbOffs[5]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + xbOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + xbOffs[9]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x1000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + xbOffs[12]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xe000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + xbOffs[13]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x1, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + xbOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xe, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + xbOffs[1]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x10, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + xbOffs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xe0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + xbOffs[5]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x100, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + xbOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xe00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + xbOffs[9]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x1000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + xbOffs[12]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xe000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + xbOffs[13]))));

 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+32) + offs[12]) ), _MM_HINT_T1);

b_S1_C2_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S1_C2_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
ub_S1_C0_RE = _mm512_mul_ps( u_00_re , b_S1_C0_RE );
ub_S1_C0_RE = _mm512_fmadd_ps(u_00_im, b_S1_C0_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_mul_ps( u_00_re , b_S1_C0_IM );
ub_S1_C0_IM = _mm512_fnmadd_ps(u_00_im, b_S1_C0_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_01_re, b_S1_C1_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fmadd_ps(u_01_im, b_S1_C1_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_01_re, b_S1_C1_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fnmadd_ps(u_01_im, b_S1_C1_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_02_re, b_S1_C2_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fmadd_ps(u_02_im, b_S1_C2_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_02_re, b_S1_C2_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fnmadd_ps(u_02_im, b_S1_C2_RE, ub_S1_C0_IM);
ub_S1_C1_RE = _mm512_mul_ps( u_10_re , b_S1_C0_RE );
ub_S1_C1_RE = _mm512_fmadd_ps(u_10_im, b_S1_C0_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_mul_ps( u_10_re , b_S1_C0_IM );
ub_S1_C1_IM = _mm512_fnmadd_ps(u_10_im, b_S1_C0_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_re, b_S1_C1_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_im, b_S1_C1_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_re, b_S1_C1_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fnmadd_ps(u_11_im, b_S1_C1_RE, ub_S1_C1_IM);
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+64) + offs[0]) ), _MM_HINT_T1);

ub_S1_C1_RE = _mm512_fmadd_ps(u_12_re, b_S1_C2_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fmadd_ps(u_12_im, b_S1_C2_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_12_re, b_S1_C2_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fnmadd_ps(u_12_im, b_S1_C2_RE, ub_S1_C1_IM);
ub_S1_C2_RE = _mm512_mul_ps( u_20_re , b_S1_C0_RE );
ub_S1_C2_RE = _mm512_fmadd_ps(u_20_im, b_S1_C0_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_mul_ps( u_20_re , b_S1_C0_IM );
ub_S1_C2_IM = _mm512_fnmadd_ps(u_20_im, b_S1_C0_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_21_re, b_S1_C1_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fmadd_ps(u_21_im, b_S1_C1_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_21_re, b_S1_C1_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fnmadd_ps(u_21_im, b_S1_C1_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_22_re, b_S1_C2_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fmadd_ps(u_22_im, b_S1_C2_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_re, b_S1_C2_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fnmadd_ps(u_22_im, b_S1_C2_RE, ub_S1_C2_IM);
out_S1_C0_RE = _mm512_mask_mov_ps(out_S1_C0_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C0_RE, out_S1_C0_RE));
out_S1_C0_IM = _mm512_mask_mov_ps(out_S1_C0_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C0_IM, out_S1_C0_IM));
out_S1_C1_RE = _mm512_mask_mov_ps(out_S1_C1_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C1_RE, out_S1_C1_RE));
out_S1_C1_IM = _mm512_mask_mov_ps(out_S1_C1_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C1_IM, out_S1_C1_IM));
out_S1_C2_RE = _mm512_mask_mov_ps(out_S1_C2_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C2_RE, out_S1_C2_RE));
out_S1_C2_IM = _mm512_mask_mov_ps(out_S1_C2_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C2_IM, out_S1_C2_IM));
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+64) + offs[4]) ), _MM_HINT_T1);

out_S2_C0_RE = _mm512_mask_mov_ps(out_S2_C0_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C0_IM, out_S2_C0_RE));
out_S2_C0_IM = _mm512_mask_mov_ps(out_S2_C0_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C0_RE, out_S2_C0_IM));
out_S2_C1_RE = _mm512_mask_mov_ps(out_S2_C1_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C1_IM, out_S2_C1_RE));
out_S2_C1_IM = _mm512_mask_mov_ps(out_S2_C1_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C1_RE, out_S2_C1_IM));
out_S2_C2_RE = _mm512_mask_mov_ps(out_S2_C2_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C2_IM, out_S2_C2_RE));
out_S2_C2_IM = _mm512_mask_mov_ps(out_S2_C2_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C2_RE, out_S2_C2_IM));
}
 if ( accumulate[1] ) { 
__m512 beta_vec = _mm512_setzero_ps(); 
beta_vec = _mm512_cvtph_ps(_mm256_set1_epi16(*(&coeff_s)));

__mmask accMask;

accMask = accumulate[1];

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+0) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+0) + xfOffs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+0) + xfOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+0) + xfOffs[12]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+32) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+32) + xfOffs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+32) + xfOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+32) + xfOffs[12]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+64) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+64) + xfOffs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+64) + offs[8]) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+64) + xfOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+64) + xfOffs[12]) ), _MM_HINT_T0);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x7, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + xfOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x8, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + xfOffs[3]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x70, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + xfOffs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + xfOffs[7]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x700, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + xfOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x800, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + xfOffs[11]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x7000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + xfOffs[12]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + xfOffs[15]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x7, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + xfOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x8, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + xfOffs[3]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x70, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + xfOffs[4]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + xfOffs[7]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x700, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + xfOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x800, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + xfOffs[11]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x7000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + xfOffs[12]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + xfOffs[15]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x7, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + xfOffs[0]))));

 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+64) + offs[12]) ), _MM_HINT_T1);

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x8, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + xfOffs[3]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x70, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + xfOffs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + xfOffs[7]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x700, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + xfOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x800, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + xfOffs[11]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x7000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + xfOffs[12]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + xfOffs[15]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x7, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + xfOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x8, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + xfOffs[3]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x70, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + xfOffs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + xfOffs[7]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x700, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + xfOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x800, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + xfOffs[11]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x7000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + xfOffs[12]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + xfOffs[15]))));

b_S0_C0_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S0_C0_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x7, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + xfOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x8, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + xfOffs[3]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x70, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + xfOffs[4]))));

 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+0) ), _MM_HINT_T1);

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + xfOffs[7]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x700, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + xfOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x800, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + xfOffs[11]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x7000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + xfOffs[12]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + xfOffs[15]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x7, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + xfOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x8, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + xfOffs[3]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x70, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + xfOffs[4]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + xfOffs[7]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x700, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + xfOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x800, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + xfOffs[11]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x7000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + xfOffs[12]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + xfOffs[15]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x7, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + xfOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x8, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + xfOffs[3]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x70, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + xfOffs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + xfOffs[7]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x700, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + xfOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x800, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + xfOffs[11]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x7000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + xfOffs[12]))));

 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+32) ), _MM_HINT_T1);

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + xfOffs[15]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x7, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + xfOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x8, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + xfOffs[3]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x70, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + xfOffs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + xfOffs[7]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x700, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + xfOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x800, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + xfOffs[11]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x7000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + xfOffs[12]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + xfOffs[15]))));

b_S0_C1_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S0_C1_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x7, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + xfOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x8, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + xfOffs[3]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x70, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + xfOffs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + xfOffs[7]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x700, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + xfOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x800, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + xfOffs[11]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x7000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + xfOffs[12]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + xfOffs[15]))));

psi_S0_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+64) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x7, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + xfOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x8, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + xfOffs[3]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x70, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + xfOffs[4]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + xfOffs[7]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x700, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + xfOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x800, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + xfOffs[11]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x7000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + xfOffs[12]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + xfOffs[15]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x7, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + xfOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x8, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + xfOffs[3]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x70, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + xfOffs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + xfOffs[7]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x700, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + xfOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x800, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + xfOffs[11]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x7000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + xfOffs[12]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + xfOffs[15]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x7, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + xfOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x8, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + xfOffs[3]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x70, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + xfOffs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + xfOffs[7]))));

 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+96) ), _MM_HINT_T1);

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x700, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + xfOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x800, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + xfOffs[11]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x7000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + xfOffs[12]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + xfOffs[15]))));

b_S0_C2_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S0_C2_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+160) ), _MM_HINT_T0);

u_00_re = _mm512_mask_cvtph_ps(u_00_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[1][0][0][0]));

u_00_im = _mm512_mask_cvtph_ps(u_00_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[1][0][0][1]));

u_01_re = _mm512_mask_cvtph_ps(u_01_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[1][0][1][0]));

u_01_im = _mm512_mask_cvtph_ps(u_01_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[1][0][1][1]));

u_02_re = _mm512_mask_cvtph_ps(u_02_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[1][0][2][0]));

u_02_im = _mm512_mask_cvtph_ps(u_02_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[1][0][2][1]));

u_10_re = _mm512_mask_cvtph_ps(u_10_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[1][1][0][0]));

u_10_im = _mm512_mask_cvtph_ps(u_10_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[1][1][0][1]));

u_11_re = _mm512_mask_cvtph_ps(u_11_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[1][1][1][0]));

u_11_im = _mm512_mask_cvtph_ps(u_11_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[1][1][1][1]));

 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+128) ), _MM_HINT_T1);

u_12_re = _mm512_mask_cvtph_ps(u_12_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[1][1][2][0]));

u_12_im = _mm512_mask_cvtph_ps(u_12_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[1][1][2][1]));

u_20_re = _mm512_mul_ps( u_01_re , u_12_re );
u_20_re = _mm512_fnmadd_ps(u_01_im, u_12_im, u_20_re);
u_20_re = _mm512_fnmadd_ps(u_02_re, u_11_re, u_20_re);
u_20_re = _mm512_fmadd_ps(u_02_im, u_11_im, u_20_re);
u_20_im = _mm512_mul_ps( u_02_re , u_11_im );
u_20_im = _mm512_fmadd_ps(u_02_im, u_11_re, u_20_im);
u_20_im = _mm512_fnmadd_ps(u_01_re, u_12_im, u_20_im);
u_20_im = _mm512_fnmadd_ps(u_01_im, u_12_re, u_20_im);
u_21_re = _mm512_mul_ps( u_02_re , u_10_re );
u_21_re = _mm512_fnmadd_ps(u_02_im, u_10_im, u_21_re);
u_21_re = _mm512_fnmadd_ps(u_00_re, u_12_re, u_21_re);
u_21_re = _mm512_fmadd_ps(u_00_im, u_12_im, u_21_re);
u_21_im = _mm512_mul_ps( u_00_re , u_12_im );
u_21_im = _mm512_fmadd_ps(u_00_im, u_12_re, u_21_im);
u_21_im = _mm512_fnmadd_ps(u_02_re, u_10_im, u_21_im);
u_21_im = _mm512_fnmadd_ps(u_02_im, u_10_re, u_21_im);
u_22_re = _mm512_mul_ps( u_00_re , u_11_re );
u_22_re = _mm512_fnmadd_ps(u_00_im, u_11_im, u_22_re);
u_22_re = _mm512_fnmadd_ps(u_01_re, u_10_re, u_22_re);
u_22_re = _mm512_fmadd_ps(u_01_im, u_10_im, u_22_re);
 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+160) ), _MM_HINT_T1);

u_22_im = _mm512_mul_ps( u_01_re , u_10_im );
u_22_im = _mm512_fmadd_ps(u_01_im, u_10_re, u_22_im);
u_22_im = _mm512_fnmadd_ps(u_00_re, u_11_im, u_22_im);
u_22_im = _mm512_fnmadd_ps(u_00_im, u_11_re, u_22_im);
ub_S0_C0_RE = _mm512_mul_ps( u_00_re , b_S0_C0_RE );
ub_S0_C0_RE = _mm512_fnmadd_ps(u_00_im, b_S0_C0_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_mul_ps( u_00_re , b_S0_C0_IM );
ub_S0_C0_IM = _mm512_fmadd_ps(u_00_im, b_S0_C0_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_10_re, b_S0_C1_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fnmadd_ps(u_10_im, b_S0_C1_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_10_re, b_S0_C1_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fmadd_ps(u_10_im, b_S0_C1_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_20_re, b_S0_C2_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fnmadd_ps(u_20_im, b_S0_C2_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_20_re, b_S0_C2_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fmadd_ps(u_20_im, b_S0_C2_RE, ub_S0_C0_IM);
ub_S0_C1_RE = _mm512_mul_ps( u_01_re , b_S0_C0_RE );
ub_S0_C1_RE = _mm512_fnmadd_ps(u_01_im, b_S0_C0_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_mul_ps( u_01_re , b_S0_C0_IM );
ub_S0_C1_IM = _mm512_fmadd_ps(u_01_im, b_S0_C0_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_re, b_S0_C1_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fnmadd_ps(u_11_im, b_S0_C1_IM, ub_S0_C1_RE);
 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+192) ), _MM_HINT_T1);

ub_S0_C1_IM = _mm512_fmadd_ps(u_11_re, b_S0_C1_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_im, b_S0_C1_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_21_re, b_S0_C2_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fnmadd_ps(u_21_im, b_S0_C2_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_21_re, b_S0_C2_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fmadd_ps(u_21_im, b_S0_C2_RE, ub_S0_C1_IM);
ub_S0_C2_RE = _mm512_mul_ps( u_02_re , b_S0_C0_RE );
ub_S0_C2_RE = _mm512_fnmadd_ps(u_02_im, b_S0_C0_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_mul_ps( u_02_re , b_S0_C0_IM );
ub_S0_C2_IM = _mm512_fmadd_ps(u_02_im, b_S0_C0_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_12_re, b_S0_C1_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fnmadd_ps(u_12_im, b_S0_C1_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_12_re, b_S0_C1_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fmadd_ps(u_12_im, b_S0_C1_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_22_re, b_S0_C2_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fnmadd_ps(u_22_im, b_S0_C2_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_re, b_S0_C2_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_im, b_S0_C2_RE, ub_S0_C2_IM);
out_S0_C0_RE = _mm512_mask_mov_ps(out_S0_C0_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C0_RE, out_S0_C0_RE));
out_S0_C0_IM = _mm512_mask_mov_ps(out_S0_C0_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C0_IM, out_S0_C0_IM));
out_S0_C1_RE = _mm512_mask_mov_ps(out_S0_C1_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C1_RE, out_S0_C1_RE));
out_S0_C1_IM = _mm512_mask_mov_ps(out_S0_C1_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C1_IM, out_S0_C1_IM));
 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+224) ), _MM_HINT_T1);

out_S0_C2_RE = _mm512_mask_mov_ps(out_S0_C2_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C2_RE, out_S0_C2_RE));
out_S0_C2_IM = _mm512_mask_mov_ps(out_S0_C2_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C2_IM, out_S0_C2_IM));
out_S3_C0_RE = _mm512_mask_mov_ps(out_S3_C0_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C0_IM, out_S3_C0_RE));
out_S3_C0_IM = _mm512_mask_mov_ps(out_S3_C0_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C0_RE, out_S3_C0_IM));
out_S3_C1_RE = _mm512_mask_mov_ps(out_S3_C1_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C1_IM, out_S3_C1_RE));
out_S3_C1_IM = _mm512_mask_mov_ps(out_S3_C1_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C1_RE, out_S3_C1_IM));
out_S3_C2_RE = _mm512_mask_mov_ps(out_S3_C2_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C2_IM, out_S3_C2_RE));
out_S3_C2_IM = _mm512_mask_mov_ps(out_S3_C2_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C2_RE, out_S3_C2_IM));
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x7, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + xfOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x8, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + xfOffs[3]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x70, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + xfOffs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + xfOffs[7]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x700, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + xfOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x800, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + xfOffs[11]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x7000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + xfOffs[12]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + xfOffs[15]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x7, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + xfOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x8, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + xfOffs[3]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x70, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + xfOffs[4]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + xfOffs[7]))));

 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+256) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x700, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + xfOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x800, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + xfOffs[11]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x7000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + xfOffs[12]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + xfOffs[15]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x7, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + xfOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x8, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + xfOffs[3]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x70, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + xfOffs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + xfOffs[7]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x700, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + xfOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x800, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + xfOffs[11]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x7000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + xfOffs[12]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + xfOffs[15]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x7, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + xfOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x8, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + xfOffs[3]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x70, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + xfOffs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + xfOffs[7]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x700, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + xfOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x800, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + xfOffs[11]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x7000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + xfOffs[12]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + xfOffs[15]))));

 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+288) ), _MM_HINT_T1);

b_S1_C0_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S1_C0_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x7, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + xfOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x8, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + xfOffs[3]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x70, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + xfOffs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + xfOffs[7]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x700, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + xfOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x800, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + xfOffs[11]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x7000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + xfOffs[12]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + xfOffs[15]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x7, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + xfOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x8, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + xfOffs[3]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x70, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + xfOffs[4]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + xfOffs[7]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x700, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + xfOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x800, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + xfOffs[11]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x7000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + xfOffs[12]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + xfOffs[15]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x7, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + xfOffs[0]))));

 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+320) ), _MM_HINT_T1);

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x8, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + xfOffs[3]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x70, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + xfOffs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + xfOffs[7]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x700, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + xfOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x800, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + xfOffs[11]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x7000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + xfOffs[12]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + xfOffs[15]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x7, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + xfOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x8, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + xfOffs[3]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x70, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + xfOffs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + xfOffs[7]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x700, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + xfOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x800, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + xfOffs[11]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x7000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + xfOffs[12]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + xfOffs[15]))));

b_S1_C1_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S1_C1_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x7, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + xfOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x8, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + xfOffs[3]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x70, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + xfOffs[4]))));

 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+352) ), _MM_HINT_T1);

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + xfOffs[7]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x700, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + xfOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x800, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + xfOffs[11]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x7000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + xfOffs[12]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + xfOffs[15]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x7, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + xfOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x8, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + xfOffs[3]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x70, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + xfOffs[4]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + xfOffs[7]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x700, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + xfOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x800, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + xfOffs[11]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x7000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + xfOffs[12]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + xfOffs[15]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x7, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + xfOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x8, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + xfOffs[3]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x70, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + xfOffs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + xfOffs[7]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x700, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + xfOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x800, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + xfOffs[11]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x7000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + xfOffs[12]))));

 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+384) ), _MM_HINT_T1);

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + xfOffs[15]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x7, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + xfOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x8, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + xfOffs[3]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x70, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + xfOffs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x80, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + xfOffs[7]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x700, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + xfOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x800, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + xfOffs[11]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x7000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + xfOffs[12]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0x8000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + xfOffs[15]))));

b_S1_C2_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S1_C2_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
ub_S1_C0_RE = _mm512_mul_ps( u_00_re , b_S1_C0_RE );
ub_S1_C0_RE = _mm512_fnmadd_ps(u_00_im, b_S1_C0_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_mul_ps( u_00_re , b_S1_C0_IM );
ub_S1_C0_IM = _mm512_fmadd_ps(u_00_im, b_S1_C0_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_10_re, b_S1_C1_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fnmadd_ps(u_10_im, b_S1_C1_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_10_re, b_S1_C1_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fmadd_ps(u_10_im, b_S1_C1_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_20_re, b_S1_C2_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fnmadd_ps(u_20_im, b_S1_C2_IM, ub_S1_C0_RE);
 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+416) ), _MM_HINT_T1);

ub_S1_C0_IM = _mm512_fmadd_ps(u_20_re, b_S1_C2_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fmadd_ps(u_20_im, b_S1_C2_RE, ub_S1_C0_IM);
ub_S1_C1_RE = _mm512_mul_ps( u_01_re , b_S1_C0_RE );
ub_S1_C1_RE = _mm512_fnmadd_ps(u_01_im, b_S1_C0_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_mul_ps( u_01_re , b_S1_C0_IM );
ub_S1_C1_IM = _mm512_fmadd_ps(u_01_im, b_S1_C0_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_re, b_S1_C1_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fnmadd_ps(u_11_im, b_S1_C1_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_re, b_S1_C1_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_im, b_S1_C1_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_21_re, b_S1_C2_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fnmadd_ps(u_21_im, b_S1_C2_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_21_re, b_S1_C2_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fmadd_ps(u_21_im, b_S1_C2_RE, ub_S1_C1_IM);
ub_S1_C2_RE = _mm512_mul_ps( u_02_re , b_S1_C0_RE );
ub_S1_C2_RE = _mm512_fnmadd_ps(u_02_im, b_S1_C0_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_mul_ps( u_02_re , b_S1_C0_IM );
ub_S1_C2_IM = _mm512_fmadd_ps(u_02_im, b_S1_C0_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_12_re, b_S1_C1_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fnmadd_ps(u_12_im, b_S1_C1_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_12_re, b_S1_C1_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fmadd_ps(u_12_im, b_S1_C1_RE, ub_S1_C2_IM);
 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+448) ), _MM_HINT_T1);

ub_S1_C2_RE = _mm512_fmadd_ps(u_22_re, b_S1_C2_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fnmadd_ps(u_22_im, b_S1_C2_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_re, b_S1_C2_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_im, b_S1_C2_RE, ub_S1_C2_IM);
out_S1_C0_RE = _mm512_mask_mov_ps(out_S1_C0_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C0_RE, out_S1_C0_RE));
out_S1_C0_IM = _mm512_mask_mov_ps(out_S1_C0_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C0_IM, out_S1_C0_IM));
out_S1_C1_RE = _mm512_mask_mov_ps(out_S1_C1_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C1_RE, out_S1_C1_RE));
out_S1_C1_IM = _mm512_mask_mov_ps(out_S1_C1_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C1_IM, out_S1_C1_IM));
out_S1_C2_RE = _mm512_mask_mov_ps(out_S1_C2_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C2_RE, out_S1_C2_RE));
out_S1_C2_IM = _mm512_mask_mov_ps(out_S1_C2_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C2_IM, out_S1_C2_IM));
out_S2_C0_RE = _mm512_mask_mov_ps(out_S2_C0_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C0_IM, out_S2_C0_RE));
out_S2_C0_IM = _mm512_mask_mov_ps(out_S2_C0_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C0_RE, out_S2_C0_IM));
out_S2_C1_RE = _mm512_mask_mov_ps(out_S2_C1_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C1_IM, out_S2_C1_RE));
out_S2_C1_IM = _mm512_mask_mov_ps(out_S2_C1_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C1_RE, out_S2_C1_IM));
out_S2_C2_RE = _mm512_mask_mov_ps(out_S2_C2_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C2_IM, out_S2_C2_RE));
out_S2_C2_IM = _mm512_mask_mov_ps(out_S2_C2_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C2_RE, out_S2_C2_IM));
}
 if ( accumulate[2] ) { 
__m512 beta_vec = _mm512_setzero_ps(); 
beta_vec = _mm512_cvtph_ps(_mm256_set1_epi16(*(&coeff_s)));

__mmask accMask;

accMask = accumulate[2];

 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+480) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+0) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+0) + ybOffs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+0) + ybOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+0) + ybOffs[12]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+32) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+32) + ybOffs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+32) + ybOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+32) + ybOffs[12]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+64) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+64) + ybOffs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+64) + ybOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+64) + ybOffs[12]) ), _MM_HINT_T0);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + ybOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + ybOffs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + ybOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + ybOffs[12]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + ybOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + ybOffs[4]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + ybOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + ybOffs[12]))));

 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+512) ), _MM_HINT_T1);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + ybOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + ybOffs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + ybOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + ybOffs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + ybOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + ybOffs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + ybOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + ybOffs[12]))));

b_S0_C0_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
b_S0_C0_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + ybOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + ybOffs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + ybOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + ybOffs[12]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + ybOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + ybOffs[4]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + ybOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + ybOffs[12]))));

 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+544) ), _MM_HINT_T1);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + ybOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + ybOffs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + ybOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + ybOffs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + ybOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + ybOffs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + ybOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + ybOffs[12]))));

b_S0_C1_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
b_S0_C1_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + ybOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + ybOffs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + ybOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + ybOffs[12]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + ybOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + ybOffs[4]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + ybOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + ybOffs[12]))));

 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+576) ), _MM_HINT_T1);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + ybOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + ybOffs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + ybOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + ybOffs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + ybOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + ybOffs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + ybOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + ybOffs[12]))));

b_S0_C2_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
b_S0_C2_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+160) ), _MM_HINT_T0);

u_00_re = _mm512_mask_cvtph_ps(u_00_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[2][0][0][0]));

u_00_im = _mm512_mask_cvtph_ps(u_00_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[2][0][0][1]));

u_01_re = _mm512_mask_cvtph_ps(u_01_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[2][0][1][0]));

u_01_im = _mm512_mask_cvtph_ps(u_01_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[2][0][1][1]));

 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+608) ), _MM_HINT_T1);

u_02_re = _mm512_mask_cvtph_ps(u_02_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[2][0][2][0]));

u_02_im = _mm512_mask_cvtph_ps(u_02_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[2][0][2][1]));

u_10_re = _mm512_mask_cvtph_ps(u_10_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[2][1][0][0]));

u_10_im = _mm512_mask_cvtph_ps(u_10_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[2][1][0][1]));

u_11_re = _mm512_mask_cvtph_ps(u_11_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[2][1][1][0]));

u_11_im = _mm512_mask_cvtph_ps(u_11_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[2][1][1][1]));

u_12_re = _mm512_mask_cvtph_ps(u_12_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[2][1][2][0]));

u_12_im = _mm512_mask_cvtph_ps(u_12_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[2][1][2][1]));

u_20_re = _mm512_mul_ps( u_01_re , u_12_re );
u_20_re = _mm512_fnmadd_ps(u_01_im, u_12_im, u_20_re);
u_20_re = _mm512_fnmadd_ps(u_02_re, u_11_re, u_20_re);
u_20_re = _mm512_fmadd_ps(u_02_im, u_11_im, u_20_re);
u_20_im = _mm512_mul_ps( u_02_re , u_11_im );
u_20_im = _mm512_fmadd_ps(u_02_im, u_11_re, u_20_im);
u_20_im = _mm512_fnmadd_ps(u_01_re, u_12_im, u_20_im);
u_20_im = _mm512_fnmadd_ps(u_01_im, u_12_re, u_20_im);
u_21_re = _mm512_mul_ps( u_02_re , u_10_re );
u_21_re = _mm512_fnmadd_ps(u_02_im, u_10_im, u_21_re);
u_21_re = _mm512_fnmadd_ps(u_00_re, u_12_re, u_21_re);
u_21_re = _mm512_fmadd_ps(u_00_im, u_12_im, u_21_re);
u_21_im = _mm512_mul_ps( u_00_re , u_12_im );
u_21_im = _mm512_fmadd_ps(u_00_im, u_12_re, u_21_im);
 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+640) ), _MM_HINT_T1);

u_21_im = _mm512_fnmadd_ps(u_02_re, u_10_im, u_21_im);
u_21_im = _mm512_fnmadd_ps(u_02_im, u_10_re, u_21_im);
u_22_re = _mm512_mul_ps( u_00_re , u_11_re );
u_22_re = _mm512_fnmadd_ps(u_00_im, u_11_im, u_22_re);
u_22_re = _mm512_fnmadd_ps(u_01_re, u_10_re, u_22_re);
u_22_re = _mm512_fmadd_ps(u_01_im, u_10_im, u_22_re);
u_22_im = _mm512_mul_ps( u_01_re , u_10_im );
u_22_im = _mm512_fmadd_ps(u_01_im, u_10_re, u_22_im);
u_22_im = _mm512_fnmadd_ps(u_00_re, u_11_im, u_22_im);
u_22_im = _mm512_fnmadd_ps(u_00_im, u_11_re, u_22_im);
ub_S0_C0_RE = _mm512_mul_ps( u_00_re , b_S0_C0_RE );
ub_S0_C0_RE = _mm512_fmadd_ps(u_00_im, b_S0_C0_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_mul_ps( u_00_re , b_S0_C0_IM );
ub_S0_C0_IM = _mm512_fnmadd_ps(u_00_im, b_S0_C0_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_01_re, b_S0_C1_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fmadd_ps(u_01_im, b_S0_C1_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_01_re, b_S0_C1_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fnmadd_ps(u_01_im, b_S0_C1_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_02_re, b_S0_C2_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fmadd_ps(u_02_im, b_S0_C2_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_02_re, b_S0_C2_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fnmadd_ps(u_02_im, b_S0_C2_RE, ub_S0_C0_IM);
 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+672) ), _MM_HINT_T1);

ub_S0_C1_RE = _mm512_mul_ps( u_10_re , b_S0_C0_RE );
ub_S0_C1_RE = _mm512_fmadd_ps(u_10_im, b_S0_C0_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_mul_ps( u_10_re , b_S0_C0_IM );
ub_S0_C1_IM = _mm512_fnmadd_ps(u_10_im, b_S0_C0_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_re, b_S0_C1_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_im, b_S0_C1_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_re, b_S0_C1_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fnmadd_ps(u_11_im, b_S0_C1_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_12_re, b_S0_C2_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fmadd_ps(u_12_im, b_S0_C2_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_12_re, b_S0_C2_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fnmadd_ps(u_12_im, b_S0_C2_RE, ub_S0_C1_IM);
ub_S0_C2_RE = _mm512_mul_ps( u_20_re , b_S0_C0_RE );
ub_S0_C2_RE = _mm512_fmadd_ps(u_20_im, b_S0_C0_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_mul_ps( u_20_re , b_S0_C0_IM );
ub_S0_C2_IM = _mm512_fnmadd_ps(u_20_im, b_S0_C0_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_21_re, b_S0_C1_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fmadd_ps(u_21_im, b_S0_C1_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_21_re, b_S0_C1_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fnmadd_ps(u_21_im, b_S0_C1_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_22_re, b_S0_C2_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fmadd_ps(u_22_im, b_S0_C2_IM, ub_S0_C2_RE);
 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+704) ), _MM_HINT_T1);

ub_S0_C2_IM = _mm512_fmadd_ps(u_22_re, b_S0_C2_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fnmadd_ps(u_22_im, b_S0_C2_RE, ub_S0_C2_IM);
out_S0_C0_RE = _mm512_mask_mov_ps(out_S0_C0_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C0_RE, out_S0_C0_RE));
out_S0_C0_IM = _mm512_mask_mov_ps(out_S0_C0_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C0_IM, out_S0_C0_IM));
out_S0_C1_RE = _mm512_mask_mov_ps(out_S0_C1_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C1_RE, out_S0_C1_RE));
out_S0_C1_IM = _mm512_mask_mov_ps(out_S0_C1_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C1_IM, out_S0_C1_IM));
out_S0_C2_RE = _mm512_mask_mov_ps(out_S0_C2_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C2_RE, out_S0_C2_RE));
out_S0_C2_IM = _mm512_mask_mov_ps(out_S0_C2_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C2_IM, out_S0_C2_IM));
out_S3_C0_RE = _mm512_mask_mov_ps(out_S3_C0_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C0_RE, out_S3_C0_RE));
out_S3_C0_IM = _mm512_mask_mov_ps(out_S3_C0_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C0_IM, out_S3_C0_IM));
out_S3_C1_RE = _mm512_mask_mov_ps(out_S3_C1_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C1_RE, out_S3_C1_RE));
out_S3_C1_IM = _mm512_mask_mov_ps(out_S3_C1_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C1_IM, out_S3_C1_IM));
out_S3_C2_RE = _mm512_mask_mov_ps(out_S3_C2_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C2_RE, out_S3_C2_RE));
out_S3_C2_IM = _mm512_mask_mov_ps(out_S3_C2_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C2_IM, out_S3_C2_IM));
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + ybOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + ybOffs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + ybOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + ybOffs[12]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + ybOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + ybOffs[4]))));

 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+736) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + ybOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + ybOffs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + ybOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + ybOffs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + ybOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + ybOffs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + ybOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + ybOffs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + ybOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + ybOffs[12]))));

b_S1_C0_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S1_C0_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + ybOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + ybOffs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + ybOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + ybOffs[12]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + ybOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + ybOffs[4]))));

 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+768) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + ybOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + ybOffs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + ybOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + ybOffs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + ybOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + ybOffs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + ybOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + ybOffs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + ybOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + ybOffs[12]))));

b_S1_C1_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S1_C1_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + ybOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + ybOffs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + ybOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + ybOffs[12]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + ybOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + ybOffs[4]))));

 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+800) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + ybOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + ybOffs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + ybOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + ybOffs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + ybOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + ybOffs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + ybOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + ybOffs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + ybOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + ybOffs[12]))));

b_S1_C2_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S1_C2_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
ub_S1_C0_RE = _mm512_mul_ps( u_00_re , b_S1_C0_RE );
ub_S1_C0_RE = _mm512_fmadd_ps(u_00_im, b_S1_C0_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_mul_ps( u_00_re , b_S1_C0_IM );
ub_S1_C0_IM = _mm512_fnmadd_ps(u_00_im, b_S1_C0_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_01_re, b_S1_C1_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fmadd_ps(u_01_im, b_S1_C1_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_01_re, b_S1_C1_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fnmadd_ps(u_01_im, b_S1_C1_RE, ub_S1_C0_IM);
 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+832) ), _MM_HINT_T1);

ub_S1_C0_RE = _mm512_fmadd_ps(u_02_re, b_S1_C2_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fmadd_ps(u_02_im, b_S1_C2_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_02_re, b_S1_C2_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fnmadd_ps(u_02_im, b_S1_C2_RE, ub_S1_C0_IM);
ub_S1_C1_RE = _mm512_mul_ps( u_10_re , b_S1_C0_RE );
ub_S1_C1_RE = _mm512_fmadd_ps(u_10_im, b_S1_C0_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_mul_ps( u_10_re , b_S1_C0_IM );
ub_S1_C1_IM = _mm512_fnmadd_ps(u_10_im, b_S1_C0_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_re, b_S1_C1_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_im, b_S1_C1_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_re, b_S1_C1_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fnmadd_ps(u_11_im, b_S1_C1_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_12_re, b_S1_C2_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fmadd_ps(u_12_im, b_S1_C2_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_12_re, b_S1_C2_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fnmadd_ps(u_12_im, b_S1_C2_RE, ub_S1_C1_IM);
ub_S1_C2_RE = _mm512_mul_ps( u_20_re , b_S1_C0_RE );
ub_S1_C2_RE = _mm512_fmadd_ps(u_20_im, b_S1_C0_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_mul_ps( u_20_re , b_S1_C0_IM );
ub_S1_C2_IM = _mm512_fnmadd_ps(u_20_im, b_S1_C0_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_21_re, b_S1_C1_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fmadd_ps(u_21_im, b_S1_C1_IM, ub_S1_C2_RE);
 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+864) ), _MM_HINT_T1);

ub_S1_C2_IM = _mm512_fmadd_ps(u_21_re, b_S1_C1_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fnmadd_ps(u_21_im, b_S1_C1_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_22_re, b_S1_C2_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fmadd_ps(u_22_im, b_S1_C2_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_re, b_S1_C2_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fnmadd_ps(u_22_im, b_S1_C2_RE, ub_S1_C2_IM);
out_S1_C0_RE = _mm512_mask_mov_ps(out_S1_C0_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C0_RE, out_S1_C0_RE));
out_S1_C0_IM = _mm512_mask_mov_ps(out_S1_C0_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C0_IM, out_S1_C0_IM));
out_S1_C1_RE = _mm512_mask_mov_ps(out_S1_C1_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C1_RE, out_S1_C1_RE));
out_S1_C1_IM = _mm512_mask_mov_ps(out_S1_C1_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C1_IM, out_S1_C1_IM));
out_S1_C2_RE = _mm512_mask_mov_ps(out_S1_C2_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C2_RE, out_S1_C2_RE));
out_S1_C2_IM = _mm512_mask_mov_ps(out_S1_C2_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C2_IM, out_S1_C2_IM));
out_S2_C0_RE = _mm512_mask_mov_ps(out_S2_C0_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C0_RE, out_S2_C0_RE));
out_S2_C0_IM = _mm512_mask_mov_ps(out_S2_C0_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C0_IM, out_S2_C0_IM));
out_S2_C1_RE = _mm512_mask_mov_ps(out_S2_C1_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C1_RE, out_S2_C1_RE));
out_S2_C1_IM = _mm512_mask_mov_ps(out_S2_C1_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C1_IM, out_S2_C1_IM));
out_S2_C2_RE = _mm512_mask_mov_ps(out_S2_C2_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C2_RE, out_S2_C2_RE));
out_S2_C2_IM = _mm512_mask_mov_ps(out_S2_C2_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C2_IM, out_S2_C2_IM));
}
 if ( accumulate[3] ) { 
__m512 beta_vec = _mm512_setzero_ps(); 
beta_vec = _mm512_cvtph_ps(_mm256_set1_epi16(*(&coeff_s)));

 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+896) ), _MM_HINT_T1);

__mmask accMask;

accMask = accumulate[3];

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+0) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+0) + yfOffs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+0) + yfOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+0) + yfOffs[12]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+32) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+32) + yfOffs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+32) + yfOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+32) + yfOffs[12]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+64) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+64) + yfOffs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+64) + yfOffs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+64) + yfOffs[12]) ), _MM_HINT_T0);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + yfOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + yfOffs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + yfOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][0] + yfOffs[12]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + yfOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + yfOffs[4]))));

 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+928) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + yfOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][0][1] + yfOffs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + yfOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + yfOffs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + yfOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][0] + yfOffs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + yfOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + yfOffs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + yfOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][3][1] + yfOffs[12]))));

b_S0_C0_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S0_C0_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + yfOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + yfOffs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + yfOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][0] + yfOffs[12]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + yfOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + yfOffs[4]))));

 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+960) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + yfOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][0][1] + yfOffs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + yfOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + yfOffs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + yfOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][0] + yfOffs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + yfOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + yfOffs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + yfOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][3][1] + yfOffs[12]))));

b_S0_C1_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S0_C1_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + yfOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + yfOffs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + yfOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][0] + yfOffs[12]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + yfOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + yfOffs[4]))));

 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+992) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + yfOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][0][1] + yfOffs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + yfOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + yfOffs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + yfOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][0] + yfOffs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + yfOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + yfOffs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + yfOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][3][1] + yfOffs[12]))));

b_S0_C2_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S0_C2_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+160) ), _MM_HINT_T0);

u_00_re = _mm512_mask_cvtph_ps(u_00_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[3][0][0][0]));

u_00_im = _mm512_mask_cvtph_ps(u_00_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[3][0][0][1]));

 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+1024) ), _MM_HINT_T1);

u_01_re = _mm512_mask_cvtph_ps(u_01_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[3][0][1][0]));

u_01_im = _mm512_mask_cvtph_ps(u_01_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[3][0][1][1]));

u_02_re = _mm512_mask_cvtph_ps(u_02_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[3][0][2][0]));

u_02_im = _mm512_mask_cvtph_ps(u_02_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[3][0][2][1]));

u_10_re = _mm512_mask_cvtph_ps(u_10_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[3][1][0][0]));

u_10_im = _mm512_mask_cvtph_ps(u_10_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[3][1][0][1]));

u_11_re = _mm512_mask_cvtph_ps(u_11_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[3][1][1][0]));

u_11_im = _mm512_mask_cvtph_ps(u_11_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[3][1][1][1]));

u_12_re = _mm512_mask_cvtph_ps(u_12_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[3][1][2][0]));

u_12_im = _mm512_mask_cvtph_ps(u_12_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[3][1][2][1]));

u_20_re = _mm512_mul_ps( u_01_re , u_12_re );
u_20_re = _mm512_fnmadd_ps(u_01_im, u_12_im, u_20_re);
u_20_re = _mm512_fnmadd_ps(u_02_re, u_11_re, u_20_re);
u_20_re = _mm512_fmadd_ps(u_02_im, u_11_im, u_20_re);
u_20_im = _mm512_mul_ps( u_02_re , u_11_im );
u_20_im = _mm512_fmadd_ps(u_02_im, u_11_re, u_20_im);
u_20_im = _mm512_fnmadd_ps(u_01_re, u_12_im, u_20_im);
u_20_im = _mm512_fnmadd_ps(u_01_im, u_12_re, u_20_im);
u_21_re = _mm512_mul_ps( u_02_re , u_10_re );
u_21_re = _mm512_fnmadd_ps(u_02_im, u_10_im, u_21_re);
u_21_re = _mm512_fnmadd_ps(u_00_re, u_12_re, u_21_re);
u_21_re = _mm512_fmadd_ps(u_00_im, u_12_im, u_21_re);
 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+1056) ), _MM_HINT_T1);

u_21_im = _mm512_mul_ps( u_00_re , u_12_im );
u_21_im = _mm512_fmadd_ps(u_00_im, u_12_re, u_21_im);
u_21_im = _mm512_fnmadd_ps(u_02_re, u_10_im, u_21_im);
u_21_im = _mm512_fnmadd_ps(u_02_im, u_10_re, u_21_im);
u_22_re = _mm512_mul_ps( u_00_re , u_11_re );
u_22_re = _mm512_fnmadd_ps(u_00_im, u_11_im, u_22_re);
u_22_re = _mm512_fnmadd_ps(u_01_re, u_10_re, u_22_re);
u_22_re = _mm512_fmadd_ps(u_01_im, u_10_im, u_22_re);
u_22_im = _mm512_mul_ps( u_01_re , u_10_im );
u_22_im = _mm512_fmadd_ps(u_01_im, u_10_re, u_22_im);
u_22_im = _mm512_fnmadd_ps(u_00_re, u_11_im, u_22_im);
u_22_im = _mm512_fnmadd_ps(u_00_im, u_11_re, u_22_im);
ub_S0_C0_RE = _mm512_mul_ps( u_00_re , b_S0_C0_RE );
ub_S0_C0_RE = _mm512_fnmadd_ps(u_00_im, b_S0_C0_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_mul_ps( u_00_re , b_S0_C0_IM );
ub_S0_C0_IM = _mm512_fmadd_ps(u_00_im, b_S0_C0_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_10_re, b_S0_C1_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fnmadd_ps(u_10_im, b_S0_C1_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_10_re, b_S0_C1_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fmadd_ps(u_10_im, b_S0_C1_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_20_re, b_S0_C2_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fnmadd_ps(u_20_im, b_S0_C2_IM, ub_S0_C0_RE);
 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+1088) ), _MM_HINT_T1);

ub_S0_C0_IM = _mm512_fmadd_ps(u_20_re, b_S0_C2_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fmadd_ps(u_20_im, b_S0_C2_RE, ub_S0_C0_IM);
ub_S0_C1_RE = _mm512_mul_ps( u_01_re , b_S0_C0_RE );
ub_S0_C1_RE = _mm512_fnmadd_ps(u_01_im, b_S0_C0_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_mul_ps( u_01_re , b_S0_C0_IM );
ub_S0_C1_IM = _mm512_fmadd_ps(u_01_im, b_S0_C0_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_re, b_S0_C1_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fnmadd_ps(u_11_im, b_S0_C1_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_re, b_S0_C1_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_im, b_S0_C1_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_21_re, b_S0_C2_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fnmadd_ps(u_21_im, b_S0_C2_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_21_re, b_S0_C2_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fmadd_ps(u_21_im, b_S0_C2_RE, ub_S0_C1_IM);
ub_S0_C2_RE = _mm512_mul_ps( u_02_re , b_S0_C0_RE );
ub_S0_C2_RE = _mm512_fnmadd_ps(u_02_im, b_S0_C0_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_mul_ps( u_02_re , b_S0_C0_IM );
ub_S0_C2_IM = _mm512_fmadd_ps(u_02_im, b_S0_C0_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_12_re, b_S0_C1_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fnmadd_ps(u_12_im, b_S0_C1_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_12_re, b_S0_C1_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fmadd_ps(u_12_im, b_S0_C1_RE, ub_S0_C2_IM);
 _mm_prefetch((const char *)( (((*clBase).diag1[ 0 ]  + clprefdist)+1120) ), _MM_HINT_T1);

ub_S0_C2_RE = _mm512_fmadd_ps(u_22_re, b_S0_C2_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fnmadd_ps(u_22_im, b_S0_C2_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_re, b_S0_C2_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_im, b_S0_C2_RE, ub_S0_C2_IM);
out_S0_C0_RE = _mm512_mask_mov_ps(out_S0_C0_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C0_RE, out_S0_C0_RE));
out_S0_C0_IM = _mm512_mask_mov_ps(out_S0_C0_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C0_IM, out_S0_C0_IM));
out_S0_C1_RE = _mm512_mask_mov_ps(out_S0_C1_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C1_RE, out_S0_C1_RE));
out_S0_C1_IM = _mm512_mask_mov_ps(out_S0_C1_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C1_IM, out_S0_C1_IM));
out_S0_C2_RE = _mm512_mask_mov_ps(out_S0_C2_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C2_RE, out_S0_C2_RE));
out_S0_C2_IM = _mm512_mask_mov_ps(out_S0_C2_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C2_IM, out_S0_C2_IM));
out_S3_C0_RE = _mm512_mask_mov_ps(out_S3_C0_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C0_RE, out_S3_C0_RE));
out_S3_C0_IM = _mm512_mask_mov_ps(out_S3_C0_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C0_IM, out_S3_C0_IM));
out_S3_C1_RE = _mm512_mask_mov_ps(out_S3_C1_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C1_RE, out_S3_C1_RE));
out_S3_C1_IM = _mm512_mask_mov_ps(out_S3_C1_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C1_IM, out_S3_C1_IM));
out_S3_C2_RE = _mm512_mask_mov_ps(out_S3_C2_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C2_RE, out_S3_C2_RE));
out_S3_C2_IM = _mm512_mask_mov_ps(out_S3_C2_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C2_IM, out_S3_C2_IM));
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + yfOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + yfOffs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + yfOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][0] + yfOffs[12]))));

psi_S0_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( ((((*pfBaseChi)[0][0][0] + chiprefdist)+0) + offs[0]) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + yfOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + yfOffs[4]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + yfOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][1][1] + yfOffs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + yfOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + yfOffs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + yfOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][0] + yfOffs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + yfOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + yfOffs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + yfOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[0][2][1] + yfOffs[12]))));

b_S1_C0_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
b_S1_C0_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + yfOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + yfOffs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + yfOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][0] + yfOffs[12]))));

psi_S0_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( ((((*pfBaseChi)[0][0][0] + chiprefdist)+0) + offs[4]) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + yfOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + yfOffs[4]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + yfOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][1][1] + yfOffs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + yfOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + yfOffs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + yfOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][0] + yfOffs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + yfOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + yfOffs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + yfOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[1][2][1] + yfOffs[12]))));

b_S1_C1_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
b_S1_C1_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + yfOffs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + yfOffs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + yfOffs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][0] + yfOffs[12]))));

psi_S0_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( ((((*pfBaseChi)[0][0][0] + chiprefdist)+0) + offs[8]) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + yfOffs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + yfOffs[4]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + yfOffs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][1][1] + yfOffs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + yfOffs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + yfOffs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + yfOffs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][0] + yfOffs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + yfOffs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + yfOffs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + yfOffs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*xyBase)[2][2][1] + yfOffs[12]))));

b_S1_C2_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
b_S1_C2_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
ub_S1_C0_RE = _mm512_mul_ps( u_00_re , b_S1_C0_RE );
ub_S1_C0_RE = _mm512_fnmadd_ps(u_00_im, b_S1_C0_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_mul_ps( u_00_re , b_S1_C0_IM );
ub_S1_C0_IM = _mm512_fmadd_ps(u_00_im, b_S1_C0_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_10_re, b_S1_C1_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fnmadd_ps(u_10_im, b_S1_C1_IM, ub_S1_C0_RE);
 _mm_prefetch((const char *)( ((((*pfBaseChi)[0][0][0] + chiprefdist)+0) + offs[12]) ), _MM_HINT_T1);

ub_S1_C0_IM = _mm512_fmadd_ps(u_10_re, b_S1_C1_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fmadd_ps(u_10_im, b_S1_C1_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_20_re, b_S1_C2_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fnmadd_ps(u_20_im, b_S1_C2_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_20_re, b_S1_C2_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fmadd_ps(u_20_im, b_S1_C2_RE, ub_S1_C0_IM);
ub_S1_C1_RE = _mm512_mul_ps( u_01_re , b_S1_C0_RE );
ub_S1_C1_RE = _mm512_fnmadd_ps(u_01_im, b_S1_C0_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_mul_ps( u_01_re , b_S1_C0_IM );
ub_S1_C1_IM = _mm512_fmadd_ps(u_01_im, b_S1_C0_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_re, b_S1_C1_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fnmadd_ps(u_11_im, b_S1_C1_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_re, b_S1_C1_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_im, b_S1_C1_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_21_re, b_S1_C2_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fnmadd_ps(u_21_im, b_S1_C2_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_21_re, b_S1_C2_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fmadd_ps(u_21_im, b_S1_C2_RE, ub_S1_C1_IM);
ub_S1_C2_RE = _mm512_mul_ps( u_02_re , b_S1_C0_RE );
ub_S1_C2_RE = _mm512_fnmadd_ps(u_02_im, b_S1_C0_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_mul_ps( u_02_re , b_S1_C0_IM );
ub_S1_C2_IM = _mm512_fmadd_ps(u_02_im, b_S1_C0_RE, ub_S1_C2_IM);
 _mm_prefetch((const char *)( ((((*pfBaseChi)[0][0][0] + chiprefdist)+32) + offs[0]) ), _MM_HINT_T1);

ub_S1_C2_RE = _mm512_fmadd_ps(u_12_re, b_S1_C1_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fnmadd_ps(u_12_im, b_S1_C1_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_12_re, b_S1_C1_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fmadd_ps(u_12_im, b_S1_C1_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_22_re, b_S1_C2_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fnmadd_ps(u_22_im, b_S1_C2_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_re, b_S1_C2_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_im, b_S1_C2_RE, ub_S1_C2_IM);
out_S1_C0_RE = _mm512_mask_mov_ps(out_S1_C0_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C0_RE, out_S1_C0_RE));
out_S1_C0_IM = _mm512_mask_mov_ps(out_S1_C0_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C0_IM, out_S1_C0_IM));
out_S1_C1_RE = _mm512_mask_mov_ps(out_S1_C1_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C1_RE, out_S1_C1_RE));
out_S1_C1_IM = _mm512_mask_mov_ps(out_S1_C1_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C1_IM, out_S1_C1_IM));
out_S1_C2_RE = _mm512_mask_mov_ps(out_S1_C2_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C2_RE, out_S1_C2_RE));
out_S1_C2_IM = _mm512_mask_mov_ps(out_S1_C2_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C2_IM, out_S1_C2_IM));
out_S2_C0_RE = _mm512_mask_mov_ps(out_S2_C0_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C0_RE, out_S2_C0_RE));
out_S2_C0_IM = _mm512_mask_mov_ps(out_S2_C0_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C0_IM, out_S2_C0_IM));
out_S2_C1_RE = _mm512_mask_mov_ps(out_S2_C1_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C1_RE, out_S2_C1_RE));
out_S2_C1_IM = _mm512_mask_mov_ps(out_S2_C1_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C1_IM, out_S2_C1_IM));
out_S2_C2_RE = _mm512_mask_mov_ps(out_S2_C2_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C2_RE, out_S2_C2_RE));
out_S2_C2_IM = _mm512_mask_mov_ps(out_S2_C2_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C2_IM, out_S2_C2_IM));
}
 if ( accumulate[4] ) { 
 _mm_prefetch((const char *)( ((((*pfBaseChi)[0][0][0] + chiprefdist)+32) + offs[4]) ), _MM_HINT_T1);

__m512 beta_vec = _mm512_setzero_ps(); 
beta_vec = _mm512_cvtph_ps(_mm256_set1_epi16(*(&coeff_s)));

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+0) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+0) + offs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+0) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+0) + offs[12]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+32) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+32) + offs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+32) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+32) + offs[12]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+64) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+64) + offs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+64) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+64) + offs[12]) ), _MM_HINT_T0);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][0][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][0][0] + offs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][0][0] + offs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][0][0] + offs[12]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][0][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][0][1] + offs[4]))));

 _mm_prefetch((const char *)( ((((*pfBaseChi)[0][0][0] + chiprefdist)+32) + offs[8]) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][0][1] + offs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][0][1] + offs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][2][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][2][0] + offs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][2][0] + offs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][2][0] + offs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][2][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][2][1] + offs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][2][1] + offs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][2][1] + offs[12]))));

b_S0_C0_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S0_C0_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][0][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][0][0] + offs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][0][0] + offs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][0][0] + offs[12]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][0][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][0][1] + offs[4]))));

 _mm_prefetch((const char *)( ((((*pfBaseChi)[0][0][0] + chiprefdist)+32) + offs[12]) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][0][1] + offs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][0][1] + offs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][2][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][2][0] + offs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][2][0] + offs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][2][0] + offs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][2][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][2][1] + offs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][2][1] + offs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][2][1] + offs[12]))));

b_S0_C1_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S0_C1_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][0][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][0][0] + offs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][0][0] + offs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][0][0] + offs[12]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][0][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][0][1] + offs[4]))));

 _mm_prefetch((const char *)( ((((*pfBaseChi)[0][0][0] + chiprefdist)+64) + offs[0]) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][0][1] + offs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][0][1] + offs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][2][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][2][0] + offs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][2][0] + offs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][2][0] + offs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][2][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][2][1] + offs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][2][1] + offs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][2][1] + offs[12]))));

b_S0_C2_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S0_C2_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+160) ), _MM_HINT_T0);

u_00_re = _mm512_mask_cvtph_ps(u_00_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[4][0][0][0]));

u_00_im = _mm512_mask_cvtph_ps(u_00_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[4][0][0][1]));

 _mm_prefetch((const char *)( ((((*pfBaseChi)[0][0][0] + chiprefdist)+64) + offs[4]) ), _MM_HINT_T1);

u_01_re = _mm512_mask_cvtph_ps(u_01_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[4][0][1][0]));

u_01_im = _mm512_mask_cvtph_ps(u_01_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[4][0][1][1]));

u_02_re = _mm512_mask_cvtph_ps(u_02_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[4][0][2][0]));

u_02_im = _mm512_mask_cvtph_ps(u_02_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[4][0][2][1]));

u_10_re = _mm512_mask_cvtph_ps(u_10_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[4][1][0][0]));

u_10_im = _mm512_mask_cvtph_ps(u_10_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[4][1][0][1]));

u_11_re = _mm512_mask_cvtph_ps(u_11_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[4][1][1][0]));

u_11_im = _mm512_mask_cvtph_ps(u_11_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[4][1][1][1]));

u_12_re = _mm512_mask_cvtph_ps(u_12_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[4][1][2][0]));

u_12_im = _mm512_mask_cvtph_ps(u_12_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[4][1][2][1]));

u_20_re = _mm512_mul_ps( u_01_re , u_12_re );
u_20_re = _mm512_fnmadd_ps(u_01_im, u_12_im, u_20_re);
u_20_re = _mm512_fnmadd_ps(u_02_re, u_11_re, u_20_re);
u_20_re = _mm512_fmadd_ps(u_02_im, u_11_im, u_20_re);
u_20_im = _mm512_mul_ps( u_02_re , u_11_im );
u_20_im = _mm512_fmadd_ps(u_02_im, u_11_re, u_20_im);
u_20_im = _mm512_fnmadd_ps(u_01_re, u_12_im, u_20_im);
u_20_im = _mm512_fnmadd_ps(u_01_im, u_12_re, u_20_im);
u_21_re = _mm512_mul_ps( u_02_re , u_10_re );
u_21_re = _mm512_fnmadd_ps(u_02_im, u_10_im, u_21_re);
u_21_re = _mm512_fnmadd_ps(u_00_re, u_12_re, u_21_re);
u_21_re = _mm512_fmadd_ps(u_00_im, u_12_im, u_21_re);
 _mm_prefetch((const char *)( ((((*pfBaseChi)[0][0][0] + chiprefdist)+64) + offs[8]) ), _MM_HINT_T1);

u_21_im = _mm512_mul_ps( u_00_re , u_12_im );
u_21_im = _mm512_fmadd_ps(u_00_im, u_12_re, u_21_im);
u_21_im = _mm512_fnmadd_ps(u_02_re, u_10_im, u_21_im);
u_21_im = _mm512_fnmadd_ps(u_02_im, u_10_re, u_21_im);
u_22_re = _mm512_mul_ps( u_00_re , u_11_re );
u_22_re = _mm512_fnmadd_ps(u_00_im, u_11_im, u_22_re);
u_22_re = _mm512_fnmadd_ps(u_01_re, u_10_re, u_22_re);
u_22_re = _mm512_fmadd_ps(u_01_im, u_10_im, u_22_re);
u_22_im = _mm512_mul_ps( u_01_re , u_10_im );
u_22_im = _mm512_fmadd_ps(u_01_im, u_10_re, u_22_im);
u_22_im = _mm512_fnmadd_ps(u_00_re, u_11_im, u_22_im);
u_22_im = _mm512_fnmadd_ps(u_00_im, u_11_re, u_22_im);
ub_S0_C0_RE = _mm512_mul_ps( u_00_re , b_S0_C0_RE );
ub_S0_C0_RE = _mm512_fmadd_ps(u_00_im, b_S0_C0_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_mul_ps( u_00_re , b_S0_C0_IM );
ub_S0_C0_IM = _mm512_fnmadd_ps(u_00_im, b_S0_C0_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_01_re, b_S0_C1_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fmadd_ps(u_01_im, b_S0_C1_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_01_re, b_S0_C1_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fnmadd_ps(u_01_im, b_S0_C1_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_02_re, b_S0_C2_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fmadd_ps(u_02_im, b_S0_C2_IM, ub_S0_C0_RE);
 _mm_prefetch((const char *)( ((((*pfBaseChi)[0][0][0] + chiprefdist)+64) + offs[12]) ), _MM_HINT_T1);

ub_S0_C0_IM = _mm512_fmadd_ps(u_02_re, b_S0_C2_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fnmadd_ps(u_02_im, b_S0_C2_RE, ub_S0_C0_IM);
ub_S0_C1_RE = _mm512_mul_ps( u_10_re , b_S0_C0_RE );
ub_S0_C1_RE = _mm512_fmadd_ps(u_10_im, b_S0_C0_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_mul_ps( u_10_re , b_S0_C0_IM );
ub_S0_C1_IM = _mm512_fnmadd_ps(u_10_im, b_S0_C0_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_re, b_S0_C1_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_im, b_S0_C1_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_re, b_S0_C1_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fnmadd_ps(u_11_im, b_S0_C1_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_12_re, b_S0_C2_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fmadd_ps(u_12_im, b_S0_C2_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_12_re, b_S0_C2_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fnmadd_ps(u_12_im, b_S0_C2_RE, ub_S0_C1_IM);
ub_S0_C2_RE = _mm512_mul_ps( u_20_re , b_S0_C0_RE );
ub_S0_C2_RE = _mm512_fmadd_ps(u_20_im, b_S0_C0_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_mul_ps( u_20_re , b_S0_C0_IM );
ub_S0_C2_IM = _mm512_fnmadd_ps(u_20_im, b_S0_C0_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_21_re, b_S0_C1_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fmadd_ps(u_21_im, b_S0_C1_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_21_re, b_S0_C1_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fnmadd_ps(u_21_im, b_S0_C1_RE, ub_S0_C2_IM);
 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+0) ), _MM_HINT_T1);

ub_S0_C2_RE = _mm512_fmadd_ps(u_22_re, b_S0_C2_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fmadd_ps(u_22_im, b_S0_C2_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_re, b_S0_C2_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fnmadd_ps(u_22_im, b_S0_C2_RE, ub_S0_C2_IM);
out_S0_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_RE, out_S0_C0_RE);
out_S0_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_IM, out_S0_C0_IM);
out_S0_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_RE, out_S0_C1_RE);
out_S0_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_IM, out_S0_C1_IM);
out_S0_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_RE, out_S0_C2_RE);
out_S0_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_IM, out_S0_C2_IM);
out_S2_C0_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C0_IM, out_S2_C0_RE);
out_S2_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_RE, out_S2_C0_IM);
out_S2_C1_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C1_IM, out_S2_C1_RE);
out_S2_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_RE, out_S2_C1_IM);
out_S2_C2_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C2_IM, out_S2_C2_RE);
out_S2_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_RE, out_S2_C2_IM);
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][1][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][1][0] + offs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][1][0] + offs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][1][0] + offs[12]))));

psi_S0_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+32) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][1][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][1][1] + offs[4]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][1][1] + offs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][1][1] + offs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][3][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][3][0] + offs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][3][0] + offs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][3][0] + offs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][3][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][3][1] + offs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][3][1] + offs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[0][3][1] + offs[12]))));

b_S1_C0_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S1_C0_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][1][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][1][0] + offs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][1][0] + offs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][1][0] + offs[12]))));

psi_S0_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+64) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][1][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][1][1] + offs[4]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][1][1] + offs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][1][1] + offs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][3][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][3][0] + offs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][3][0] + offs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][3][0] + offs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][3][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][3][1] + offs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][3][1] + offs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[1][3][1] + offs[12]))));

b_S1_C1_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S1_C1_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][1][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][1][0] + offs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][1][0] + offs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][1][0] + offs[12]))));

psi_S0_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+96) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][1][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][1][1] + offs[4]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][1][1] + offs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][1][1] + offs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][3][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][3][0] + offs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][3][0] + offs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][3][0] + offs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][3][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][3][1] + offs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][3][1] + offs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zbBase)[2][3][1] + offs[12]))));

b_S1_C2_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S1_C2_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
ub_S1_C0_RE = _mm512_mul_ps( u_00_re , b_S1_C0_RE );
ub_S1_C0_RE = _mm512_fmadd_ps(u_00_im, b_S1_C0_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_mul_ps( u_00_re , b_S1_C0_IM );
ub_S1_C0_IM = _mm512_fnmadd_ps(u_00_im, b_S1_C0_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_01_re, b_S1_C1_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fmadd_ps(u_01_im, b_S1_C1_IM, ub_S1_C0_RE);
 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+128) ), _MM_HINT_T1);

ub_S1_C0_IM = _mm512_fmadd_ps(u_01_re, b_S1_C1_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fnmadd_ps(u_01_im, b_S1_C1_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_02_re, b_S1_C2_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fmadd_ps(u_02_im, b_S1_C2_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_02_re, b_S1_C2_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fnmadd_ps(u_02_im, b_S1_C2_RE, ub_S1_C0_IM);
ub_S1_C1_RE = _mm512_mul_ps( u_10_re , b_S1_C0_RE );
ub_S1_C1_RE = _mm512_fmadd_ps(u_10_im, b_S1_C0_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_mul_ps( u_10_re , b_S1_C0_IM );
ub_S1_C1_IM = _mm512_fnmadd_ps(u_10_im, b_S1_C0_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_re, b_S1_C1_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_im, b_S1_C1_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_re, b_S1_C1_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fnmadd_ps(u_11_im, b_S1_C1_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_12_re, b_S1_C2_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fmadd_ps(u_12_im, b_S1_C2_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_12_re, b_S1_C2_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fnmadd_ps(u_12_im, b_S1_C2_RE, ub_S1_C1_IM);
ub_S1_C2_RE = _mm512_mul_ps( u_20_re , b_S1_C0_RE );
ub_S1_C2_RE = _mm512_fmadd_ps(u_20_im, b_S1_C0_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_mul_ps( u_20_re , b_S1_C0_IM );
ub_S1_C2_IM = _mm512_fnmadd_ps(u_20_im, b_S1_C0_RE, ub_S1_C2_IM);
 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+160) ), _MM_HINT_T1);

ub_S1_C2_RE = _mm512_fmadd_ps(u_21_re, b_S1_C1_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fmadd_ps(u_21_im, b_S1_C1_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_21_re, b_S1_C1_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fnmadd_ps(u_21_im, b_S1_C1_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_22_re, b_S1_C2_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fmadd_ps(u_22_im, b_S1_C2_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_re, b_S1_C2_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fnmadd_ps(u_22_im, b_S1_C2_RE, ub_S1_C2_IM);
out_S1_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_RE, out_S1_C0_RE);
out_S1_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_IM, out_S1_C0_IM);
out_S1_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_RE, out_S1_C1_RE);
out_S1_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_IM, out_S1_C1_IM);
out_S1_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_RE, out_S1_C2_RE);
out_S1_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_IM, out_S1_C2_IM);
out_S3_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_IM, out_S3_C0_RE);
out_S3_C0_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C0_RE, out_S3_C0_IM);
out_S3_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_IM, out_S3_C1_RE);
out_S3_C1_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C1_RE, out_S3_C1_IM);
out_S3_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_IM, out_S3_C2_RE);
out_S3_C2_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C2_RE, out_S3_C2_IM);
}
 if ( accumulate[5] ) { 
 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+0) ), _MM_HINT_T1);

__m512 beta_vec = _mm512_setzero_ps(); 
beta_vec = _mm512_cvtph_ps(_mm256_set1_epi16(*(&coeff_s)));

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+0) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+0) + offs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+0) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+0) + offs[12]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+32) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+32) + offs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+32) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+32) + offs[12]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+64) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+64) + offs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+64) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+64) + offs[12]) ), _MM_HINT_T0);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][0][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][0][0] + offs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][0][0] + offs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][0][0] + offs[12]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][0][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][0][1] + offs[4]))));

 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+32) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][0][1] + offs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][0][1] + offs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][2][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][2][0] + offs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][2][0] + offs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][2][0] + offs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][2][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][2][1] + offs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][2][1] + offs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][2][1] + offs[12]))));

b_S0_C0_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S0_C0_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][0][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][0][0] + offs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][0][0] + offs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][0][0] + offs[12]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][0][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][0][1] + offs[4]))));

 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+64) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][0][1] + offs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][0][1] + offs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][2][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][2][0] + offs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][2][0] + offs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][2][0] + offs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][2][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][2][1] + offs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][2][1] + offs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][2][1] + offs[12]))));

b_S0_C1_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S0_C1_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][0][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][0][0] + offs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][0][0] + offs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][0][0] + offs[12]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][0][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][0][1] + offs[4]))));

 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+96) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][0][1] + offs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][0][1] + offs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][2][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][2][0] + offs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][2][0] + offs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][2][0] + offs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][2][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][2][1] + offs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][2][1] + offs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][2][1] + offs[12]))));

b_S0_C2_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S0_C2_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+160) ), _MM_HINT_T0);

u_00_re = _mm512_mask_cvtph_ps(u_00_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][0][0][0]));

u_00_im = _mm512_mask_cvtph_ps(u_00_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][0][0][1]));

 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+128) ), _MM_HINT_T1);

u_01_re = _mm512_mask_cvtph_ps(u_01_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][0][1][0]));

u_01_im = _mm512_mask_cvtph_ps(u_01_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][0][1][1]));

u_02_re = _mm512_mask_cvtph_ps(u_02_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][0][2][0]));

u_02_im = _mm512_mask_cvtph_ps(u_02_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][0][2][1]));

u_10_re = _mm512_mask_cvtph_ps(u_10_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][1][0][0]));

u_10_im = _mm512_mask_cvtph_ps(u_10_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][1][0][1]));

u_11_re = _mm512_mask_cvtph_ps(u_11_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][1][1][0]));

u_11_im = _mm512_mask_cvtph_ps(u_11_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][1][1][1]));

u_12_re = _mm512_mask_cvtph_ps(u_12_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][1][2][0]));

u_12_im = _mm512_mask_cvtph_ps(u_12_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[5][1][2][1]));

u_20_re = _mm512_mul_ps( u_01_re , u_12_re );
u_20_re = _mm512_fnmadd_ps(u_01_im, u_12_im, u_20_re);
u_20_re = _mm512_fnmadd_ps(u_02_re, u_11_re, u_20_re);
u_20_re = _mm512_fmadd_ps(u_02_im, u_11_im, u_20_re);
u_20_im = _mm512_mul_ps( u_02_re , u_11_im );
u_20_im = _mm512_fmadd_ps(u_02_im, u_11_re, u_20_im);
u_20_im = _mm512_fnmadd_ps(u_01_re, u_12_im, u_20_im);
u_20_im = _mm512_fnmadd_ps(u_01_im, u_12_re, u_20_im);
u_21_re = _mm512_mul_ps( u_02_re , u_10_re );
u_21_re = _mm512_fnmadd_ps(u_02_im, u_10_im, u_21_re);
u_21_re = _mm512_fnmadd_ps(u_00_re, u_12_re, u_21_re);
u_21_re = _mm512_fmadd_ps(u_00_im, u_12_im, u_21_re);
 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+160) ), _MM_HINT_T1);

u_21_im = _mm512_mul_ps( u_00_re , u_12_im );
u_21_im = _mm512_fmadd_ps(u_00_im, u_12_re, u_21_im);
u_21_im = _mm512_fnmadd_ps(u_02_re, u_10_im, u_21_im);
u_21_im = _mm512_fnmadd_ps(u_02_im, u_10_re, u_21_im);
u_22_re = _mm512_mul_ps( u_00_re , u_11_re );
u_22_re = _mm512_fnmadd_ps(u_00_im, u_11_im, u_22_re);
u_22_re = _mm512_fnmadd_ps(u_01_re, u_10_re, u_22_re);
u_22_re = _mm512_fmadd_ps(u_01_im, u_10_im, u_22_re);
u_22_im = _mm512_mul_ps( u_01_re , u_10_im );
u_22_im = _mm512_fmadd_ps(u_01_im, u_10_re, u_22_im);
u_22_im = _mm512_fnmadd_ps(u_00_re, u_11_im, u_22_im);
u_22_im = _mm512_fnmadd_ps(u_00_im, u_11_re, u_22_im);
ub_S0_C0_RE = _mm512_mul_ps( u_00_re , b_S0_C0_RE );
ub_S0_C0_RE = _mm512_fnmadd_ps(u_00_im, b_S0_C0_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_mul_ps( u_00_re , b_S0_C0_IM );
ub_S0_C0_IM = _mm512_fmadd_ps(u_00_im, b_S0_C0_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_10_re, b_S0_C1_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fnmadd_ps(u_10_im, b_S0_C1_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_10_re, b_S0_C1_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fmadd_ps(u_10_im, b_S0_C1_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_20_re, b_S0_C2_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fnmadd_ps(u_20_im, b_S0_C2_IM, ub_S0_C0_RE);
 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+0) ), _MM_HINT_T1);

ub_S0_C0_IM = _mm512_fmadd_ps(u_20_re, b_S0_C2_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fmadd_ps(u_20_im, b_S0_C2_RE, ub_S0_C0_IM);
ub_S0_C1_RE = _mm512_mul_ps( u_01_re , b_S0_C0_RE );
ub_S0_C1_RE = _mm512_fnmadd_ps(u_01_im, b_S0_C0_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_mul_ps( u_01_re , b_S0_C0_IM );
ub_S0_C1_IM = _mm512_fmadd_ps(u_01_im, b_S0_C0_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_re, b_S0_C1_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fnmadd_ps(u_11_im, b_S0_C1_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_re, b_S0_C1_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_im, b_S0_C1_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_21_re, b_S0_C2_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fnmadd_ps(u_21_im, b_S0_C2_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_21_re, b_S0_C2_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fmadd_ps(u_21_im, b_S0_C2_RE, ub_S0_C1_IM);
ub_S0_C2_RE = _mm512_mul_ps( u_02_re , b_S0_C0_RE );
ub_S0_C2_RE = _mm512_fnmadd_ps(u_02_im, b_S0_C0_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_mul_ps( u_02_re , b_S0_C0_IM );
ub_S0_C2_IM = _mm512_fmadd_ps(u_02_im, b_S0_C0_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_12_re, b_S0_C1_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fnmadd_ps(u_12_im, b_S0_C1_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_12_re, b_S0_C1_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fmadd_ps(u_12_im, b_S0_C1_RE, ub_S0_C2_IM);
 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+32) ), _MM_HINT_T1);

ub_S0_C2_RE = _mm512_fmadd_ps(u_22_re, b_S0_C2_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fnmadd_ps(u_22_im, b_S0_C2_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_re, b_S0_C2_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_im, b_S0_C2_RE, ub_S0_C2_IM);
out_S0_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_RE, out_S0_C0_RE);
out_S0_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_IM, out_S0_C0_IM);
out_S0_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_RE, out_S0_C1_RE);
out_S0_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_IM, out_S0_C1_IM);
out_S0_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_RE, out_S0_C2_RE);
out_S0_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_IM, out_S0_C2_IM);
out_S2_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_IM, out_S2_C0_RE);
out_S2_C0_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C0_RE, out_S2_C0_IM);
out_S2_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_IM, out_S2_C1_RE);
out_S2_C1_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C1_RE, out_S2_C1_IM);
out_S2_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_IM, out_S2_C2_RE);
out_S2_C2_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C2_RE, out_S2_C2_IM);
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][1][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][1][0] + offs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][1][0] + offs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][1][0] + offs[12]))));

psi_S0_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+64) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][1][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][1][1] + offs[4]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][1][1] + offs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][1][1] + offs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][3][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][3][0] + offs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][3][0] + offs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][3][0] + offs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][3][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][3][1] + offs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][3][1] + offs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[0][3][1] + offs[12]))));

b_S1_C0_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S1_C0_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][1][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][1][0] + offs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][1][0] + offs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][1][0] + offs[12]))));

psi_S0_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+96) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][1][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][1][1] + offs[4]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][1][1] + offs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][1][1] + offs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][3][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][3][0] + offs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][3][0] + offs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][3][0] + offs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][3][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][3][1] + offs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][3][1] + offs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[1][3][1] + offs[12]))));

b_S1_C1_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S1_C1_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][1][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][1][0] + offs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][1][0] + offs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][1][0] + offs[12]))));

psi_S0_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+128) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][1][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][1][1] + offs[4]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][1][1] + offs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][1][1] + offs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][3][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][3][0] + offs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][3][0] + offs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][3][0] + offs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][3][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][3][1] + offs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][3][1] + offs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*zfBase)[2][3][1] + offs[12]))));

b_S1_C2_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S1_C2_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
ub_S1_C0_RE = _mm512_mul_ps( u_00_re , b_S1_C0_RE );
ub_S1_C0_RE = _mm512_fnmadd_ps(u_00_im, b_S1_C0_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_mul_ps( u_00_re , b_S1_C0_IM );
ub_S1_C0_IM = _mm512_fmadd_ps(u_00_im, b_S1_C0_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_10_re, b_S1_C1_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fnmadd_ps(u_10_im, b_S1_C1_IM, ub_S1_C0_RE);
 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+160) ), _MM_HINT_T1);

ub_S1_C0_IM = _mm512_fmadd_ps(u_10_re, b_S1_C1_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fmadd_ps(u_10_im, b_S1_C1_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_20_re, b_S1_C2_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fnmadd_ps(u_20_im, b_S1_C2_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_20_re, b_S1_C2_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fmadd_ps(u_20_im, b_S1_C2_RE, ub_S1_C0_IM);
ub_S1_C1_RE = _mm512_mul_ps( u_01_re , b_S1_C0_RE );
ub_S1_C1_RE = _mm512_fnmadd_ps(u_01_im, b_S1_C0_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_mul_ps( u_01_re , b_S1_C0_IM );
ub_S1_C1_IM = _mm512_fmadd_ps(u_01_im, b_S1_C0_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_re, b_S1_C1_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fnmadd_ps(u_11_im, b_S1_C1_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_re, b_S1_C1_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_im, b_S1_C1_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_21_re, b_S1_C2_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fnmadd_ps(u_21_im, b_S1_C2_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_21_re, b_S1_C2_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fmadd_ps(u_21_im, b_S1_C2_RE, ub_S1_C1_IM);
ub_S1_C2_RE = _mm512_mul_ps( u_02_re , b_S1_C0_RE );
ub_S1_C2_RE = _mm512_fnmadd_ps(u_02_im, b_S1_C0_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_mul_ps( u_02_re , b_S1_C0_IM );
ub_S1_C2_IM = _mm512_fmadd_ps(u_02_im, b_S1_C0_RE, ub_S1_C2_IM);
 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+0) ), _MM_HINT_T1);

ub_S1_C2_RE = _mm512_fmadd_ps(u_12_re, b_S1_C1_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fnmadd_ps(u_12_im, b_S1_C1_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_12_re, b_S1_C1_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fmadd_ps(u_12_im, b_S1_C1_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_22_re, b_S1_C2_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fnmadd_ps(u_22_im, b_S1_C2_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_re, b_S1_C2_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_im, b_S1_C2_RE, ub_S1_C2_IM);
out_S1_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_RE, out_S1_C0_RE);
out_S1_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_IM, out_S1_C0_IM);
out_S1_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_RE, out_S1_C1_RE);
out_S1_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_IM, out_S1_C1_IM);
out_S1_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_RE, out_S1_C2_RE);
out_S1_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_IM, out_S1_C2_IM);
out_S3_C0_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C0_IM, out_S3_C0_RE);
out_S3_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_RE, out_S3_C0_IM);
out_S3_C1_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C1_IM, out_S3_C1_RE);
out_S3_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_RE, out_S3_C1_IM);
out_S3_C2_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C2_IM, out_S3_C2_RE);
out_S3_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_RE, out_S3_C2_IM);
}
 if ( accumulate[6] ) { 
 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+32) ), _MM_HINT_T1);

__m512 beta_vec = _mm512_setzero_ps(); 
beta_vec = _mm512_cvtph_ps(_mm256_set1_epi16(*(&coeff_t_b)));

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+0) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+0) + offs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+0) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+0) + offs[12]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+32) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+32) + offs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+32) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+32) + offs[12]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+64) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+64) + offs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+64) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+64) + offs[12]) ), _MM_HINT_T0);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][0][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][0][0] + offs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][0][0] + offs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][0][0] + offs[12]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][0][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][0][1] + offs[4]))));

 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+64) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][0][1] + offs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][0][1] + offs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][2][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][2][0] + offs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][2][0] + offs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][2][0] + offs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][2][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][2][1] + offs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][2][1] + offs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][2][1] + offs[12]))));

b_S0_C0_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S0_C0_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][0][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][0][0] + offs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][0][0] + offs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][0][0] + offs[12]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][0][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][0][1] + offs[4]))));

 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+96) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][0][1] + offs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][0][1] + offs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][2][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][2][0] + offs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][2][0] + offs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][2][0] + offs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][2][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][2][1] + offs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][2][1] + offs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][2][1] + offs[12]))));

b_S0_C1_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S0_C1_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][0][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][0][0] + offs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][0][0] + offs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][0][0] + offs[12]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][0][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][0][1] + offs[4]))));

 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+128) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][0][1] + offs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][0][1] + offs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][2][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][2][0] + offs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][2][0] + offs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][2][0] + offs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][2][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][2][1] + offs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][2][1] + offs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][2][1] + offs[12]))));

b_S0_C2_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S0_C2_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+160) ), _MM_HINT_T0);

u_00_re = _mm512_mask_cvtph_ps(u_00_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[6][0][0][0]));

u_00_im = _mm512_mask_cvtph_ps(u_00_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[6][0][0][1]));

 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+160) ), _MM_HINT_T1);

u_01_re = _mm512_mask_cvtph_ps(u_01_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[6][0][1][0]));

u_01_im = _mm512_mask_cvtph_ps(u_01_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[6][0][1][1]));

u_02_re = _mm512_mask_cvtph_ps(u_02_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[6][0][2][0]));

u_02_im = _mm512_mask_cvtph_ps(u_02_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[6][0][2][1]));

u_10_re = _mm512_mask_cvtph_ps(u_10_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[6][1][0][0]));

u_10_im = _mm512_mask_cvtph_ps(u_10_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[6][1][0][1]));

u_11_re = _mm512_mask_cvtph_ps(u_11_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[6][1][1][0]));

u_11_im = _mm512_mask_cvtph_ps(u_11_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[6][1][1][1]));

u_12_re = _mm512_mask_cvtph_ps(u_12_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[6][1][2][0]));

u_12_im = _mm512_mask_cvtph_ps(u_12_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[6][1][2][1]));

u_20_re = _mm512_mul_ps( u_01_re , u_12_re );
u_20_re = _mm512_fnmadd_ps(u_01_im, u_12_im, u_20_re);
u_20_re = _mm512_fnmadd_ps(u_02_re, u_11_re, u_20_re);
u_20_re = _mm512_fmadd_ps(u_02_im, u_11_im, u_20_re);
u_20_im = _mm512_mul_ps( u_02_re , u_11_im );
u_20_im = _mm512_fmadd_ps(u_02_im, u_11_re, u_20_im);
u_20_im = _mm512_fnmadd_ps(u_01_re, u_12_im, u_20_im);
u_20_im = _mm512_fnmadd_ps(u_01_im, u_12_re, u_20_im);
u_21_re = _mm512_mul_ps( u_02_re , u_10_re );
u_21_re = _mm512_fnmadd_ps(u_02_im, u_10_im, u_21_re);
u_21_re = _mm512_fnmadd_ps(u_00_re, u_12_re, u_21_re);
u_21_re = _mm512_fmadd_ps(u_00_im, u_12_im, u_21_re);
 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+0) ), _MM_HINT_T1);

u_21_im = _mm512_mul_ps( u_00_re , u_12_im );
u_21_im = _mm512_fmadd_ps(u_00_im, u_12_re, u_21_im);
u_21_im = _mm512_fnmadd_ps(u_02_re, u_10_im, u_21_im);
u_21_im = _mm512_fnmadd_ps(u_02_im, u_10_re, u_21_im);
u_22_re = _mm512_mul_ps( u_00_re , u_11_re );
u_22_re = _mm512_fnmadd_ps(u_00_im, u_11_im, u_22_re);
u_22_re = _mm512_fnmadd_ps(u_01_re, u_10_re, u_22_re);
u_22_re = _mm512_fmadd_ps(u_01_im, u_10_im, u_22_re);
u_22_im = _mm512_mul_ps( u_01_re , u_10_im );
u_22_im = _mm512_fmadd_ps(u_01_im, u_10_re, u_22_im);
u_22_im = _mm512_fnmadd_ps(u_00_re, u_11_im, u_22_im);
u_22_im = _mm512_fnmadd_ps(u_00_im, u_11_re, u_22_im);
ub_S0_C0_RE = _mm512_mul_ps( u_00_re , b_S0_C0_RE );
ub_S0_C0_RE = _mm512_fmadd_ps(u_00_im, b_S0_C0_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_mul_ps( u_00_re , b_S0_C0_IM );
ub_S0_C0_IM = _mm512_fnmadd_ps(u_00_im, b_S0_C0_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_01_re, b_S0_C1_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fmadd_ps(u_01_im, b_S0_C1_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_01_re, b_S0_C1_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fnmadd_ps(u_01_im, b_S0_C1_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_02_re, b_S0_C2_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fmadd_ps(u_02_im, b_S0_C2_IM, ub_S0_C0_RE);
 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+32) ), _MM_HINT_T1);

ub_S0_C0_IM = _mm512_fmadd_ps(u_02_re, b_S0_C2_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fnmadd_ps(u_02_im, b_S0_C2_RE, ub_S0_C0_IM);
ub_S0_C1_RE = _mm512_mul_ps( u_10_re , b_S0_C0_RE );
ub_S0_C1_RE = _mm512_fmadd_ps(u_10_im, b_S0_C0_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_mul_ps( u_10_re , b_S0_C0_IM );
ub_S0_C1_IM = _mm512_fnmadd_ps(u_10_im, b_S0_C0_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_re, b_S0_C1_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_im, b_S0_C1_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_re, b_S0_C1_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fnmadd_ps(u_11_im, b_S0_C1_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_12_re, b_S0_C2_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fmadd_ps(u_12_im, b_S0_C2_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_12_re, b_S0_C2_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fnmadd_ps(u_12_im, b_S0_C2_RE, ub_S0_C1_IM);
ub_S0_C2_RE = _mm512_mul_ps( u_20_re , b_S0_C0_RE );
ub_S0_C2_RE = _mm512_fmadd_ps(u_20_im, b_S0_C0_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_mul_ps( u_20_re , b_S0_C0_IM );
ub_S0_C2_IM = _mm512_fnmadd_ps(u_20_im, b_S0_C0_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_21_re, b_S0_C1_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fmadd_ps(u_21_im, b_S0_C1_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_21_re, b_S0_C1_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fnmadd_ps(u_21_im, b_S0_C1_RE, ub_S0_C2_IM);
 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+64) ), _MM_HINT_T1);

ub_S0_C2_RE = _mm512_fmadd_ps(u_22_re, b_S0_C2_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fmadd_ps(u_22_im, b_S0_C2_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_re, b_S0_C2_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fnmadd_ps(u_22_im, b_S0_C2_RE, ub_S0_C2_IM);
out_S0_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_RE, out_S0_C0_RE);
out_S0_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_IM, out_S0_C0_IM);
out_S0_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_RE, out_S0_C1_RE);
out_S0_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_IM, out_S0_C1_IM);
out_S0_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_RE, out_S0_C2_RE);
out_S0_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_IM, out_S0_C2_IM);
out_S2_C0_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C0_RE, out_S2_C0_RE);
out_S2_C0_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C0_IM, out_S2_C0_IM);
out_S2_C1_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C1_RE, out_S2_C1_RE);
out_S2_C1_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C1_IM, out_S2_C1_IM);
out_S2_C2_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C2_RE, out_S2_C2_RE);
out_S2_C2_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C2_IM, out_S2_C2_IM);
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][1][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][1][0] + offs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][1][0] + offs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][1][0] + offs[12]))));

psi_S0_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+96) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][1][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][1][1] + offs[4]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][1][1] + offs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][1][1] + offs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][3][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][3][0] + offs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][3][0] + offs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][3][0] + offs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][3][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][3][1] + offs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][3][1] + offs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[0][3][1] + offs[12]))));

b_S1_C0_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S1_C0_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][1][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][1][0] + offs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][1][0] + offs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][1][0] + offs[12]))));

psi_S0_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+128) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][1][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][1][1] + offs[4]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][1][1] + offs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][1][1] + offs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][3][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][3][0] + offs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][3][0] + offs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][3][0] + offs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][3][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][3][1] + offs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][3][1] + offs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[1][3][1] + offs[12]))));

b_S1_C1_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S1_C1_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][1][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][1][0] + offs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][1][0] + offs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][1][0] + offs[12]))));

psi_S0_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+160) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][1][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][1][1] + offs[4]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][1][1] + offs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][1][1] + offs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][3][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][3][0] + offs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][3][0] + offs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][3][0] + offs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][3][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][3][1] + offs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][3][1] + offs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tbBase)[2][3][1] + offs[12]))));

b_S1_C2_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S1_C2_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
ub_S1_C0_RE = _mm512_mul_ps( u_00_re , b_S1_C0_RE );
ub_S1_C0_RE = _mm512_fmadd_ps(u_00_im, b_S1_C0_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_mul_ps( u_00_re , b_S1_C0_IM );
ub_S1_C0_IM = _mm512_fnmadd_ps(u_00_im, b_S1_C0_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_01_re, b_S1_C1_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fmadd_ps(u_01_im, b_S1_C1_IM, ub_S1_C0_RE);
 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+0) ), _MM_HINT_T1);

ub_S1_C0_IM = _mm512_fmadd_ps(u_01_re, b_S1_C1_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fnmadd_ps(u_01_im, b_S1_C1_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_02_re, b_S1_C2_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fmadd_ps(u_02_im, b_S1_C2_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_02_re, b_S1_C2_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fnmadd_ps(u_02_im, b_S1_C2_RE, ub_S1_C0_IM);
ub_S1_C1_RE = _mm512_mul_ps( u_10_re , b_S1_C0_RE );
ub_S1_C1_RE = _mm512_fmadd_ps(u_10_im, b_S1_C0_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_mul_ps( u_10_re , b_S1_C0_IM );
ub_S1_C1_IM = _mm512_fnmadd_ps(u_10_im, b_S1_C0_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_re, b_S1_C1_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_im, b_S1_C1_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_re, b_S1_C1_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fnmadd_ps(u_11_im, b_S1_C1_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_12_re, b_S1_C2_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fmadd_ps(u_12_im, b_S1_C2_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_12_re, b_S1_C2_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fnmadd_ps(u_12_im, b_S1_C2_RE, ub_S1_C1_IM);
ub_S1_C2_RE = _mm512_mul_ps( u_20_re , b_S1_C0_RE );
ub_S1_C2_RE = _mm512_fmadd_ps(u_20_im, b_S1_C0_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_mul_ps( u_20_re , b_S1_C0_IM );
ub_S1_C2_IM = _mm512_fnmadd_ps(u_20_im, b_S1_C0_RE, ub_S1_C2_IM);
 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+32) ), _MM_HINT_T1);

ub_S1_C2_RE = _mm512_fmadd_ps(u_21_re, b_S1_C1_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fmadd_ps(u_21_im, b_S1_C1_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_21_re, b_S1_C1_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fnmadd_ps(u_21_im, b_S1_C1_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_22_re, b_S1_C2_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fmadd_ps(u_22_im, b_S1_C2_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_re, b_S1_C2_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fnmadd_ps(u_22_im, b_S1_C2_RE, ub_S1_C2_IM);
out_S1_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_RE, out_S1_C0_RE);
out_S1_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_IM, out_S1_C0_IM);
out_S1_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_RE, out_S1_C1_RE);
out_S1_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_IM, out_S1_C1_IM);
out_S1_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_RE, out_S1_C2_RE);
out_S1_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_IM, out_S1_C2_IM);
out_S3_C0_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C0_RE, out_S3_C0_RE);
out_S3_C0_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C0_IM, out_S3_C0_IM);
out_S3_C1_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C1_RE, out_S3_C1_RE);
out_S3_C1_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C1_IM, out_S3_C1_IM);
out_S3_C2_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C2_RE, out_S3_C2_RE);
out_S3_C2_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C2_IM, out_S3_C2_IM);
}
 if ( accumulate[7] ) { 
 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+64) ), _MM_HINT_T1);

__m512 beta_vec = _mm512_setzero_ps(); 
beta_vec = _mm512_cvtph_ps(_mm256_set1_epi16(*(&coeff_t_f)));

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+0) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+0) + offs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+0) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+0) + offs[12]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+32) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+32) + offs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+32) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+32) + offs[12]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+64) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+64) + offs[4]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+64) + offs[8]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+64) + offs[12]) ), _MM_HINT_T0);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][0][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][0][0] + offs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][0][0] + offs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][0][0] + offs[12]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][0][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][0][1] + offs[4]))));

 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+96) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][0][1] + offs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][0][1] + offs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][2][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][2][0] + offs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][2][0] + offs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][2][0] + offs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][2][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][2][1] + offs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][2][1] + offs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][2][1] + offs[12]))));

b_S0_C0_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
b_S0_C0_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][0][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][0][0] + offs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][0][0] + offs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][0][0] + offs[12]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][0][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][0][1] + offs[4]))));

 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+128) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][0][1] + offs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][0][1] + offs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][2][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][2][0] + offs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][2][0] + offs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][2][0] + offs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][2][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][2][1] + offs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][2][1] + offs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][2][1] + offs[12]))));

b_S0_C1_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
b_S0_C1_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][0][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][0][0] + offs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][0][0] + offs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][0][0] + offs[12]))));

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][0][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][0][1] + offs[4]))));

 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+160) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][0][1] + offs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][0][1] + offs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][2][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][2][0] + offs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][2][0] + offs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][2][0] + offs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][2][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][2][1] + offs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][2][1] + offs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][2][1] + offs[12]))));

b_S0_C2_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
b_S0_C2_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+160) ), _MM_HINT_T0);

u_00_re = _mm512_mask_cvtph_ps(u_00_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[7][0][0][0]));

u_00_im = _mm512_mask_cvtph_ps(u_00_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[7][0][0][1]));

 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+0) ), _MM_HINT_T1);

u_01_re = _mm512_mask_cvtph_ps(u_01_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[7][0][1][0]));

u_01_im = _mm512_mask_cvtph_ps(u_01_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[7][0][1][1]));

u_02_re = _mm512_mask_cvtph_ps(u_02_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[7][0][2][0]));

u_02_im = _mm512_mask_cvtph_ps(u_02_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[7][0][2][1]));

u_10_re = _mm512_mask_cvtph_ps(u_10_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[7][1][0][0]));

u_10_im = _mm512_mask_cvtph_ps(u_10_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[7][1][0][1]));

u_11_re = _mm512_mask_cvtph_ps(u_11_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[7][1][1][0]));

u_11_im = _mm512_mask_cvtph_ps(u_11_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[7][1][1][1]));

u_12_re = _mm512_mask_cvtph_ps(u_12_re, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[7][1][2][0]));

u_12_im = _mm512_mask_cvtph_ps(u_12_im, 0xFFFF, _mm256_load_si256((__m256i*)(*gBase)[7][1][2][1]));

u_20_re = _mm512_mul_ps( u_01_re , u_12_re );
u_20_re = _mm512_fnmadd_ps(u_01_im, u_12_im, u_20_re);
u_20_re = _mm512_fnmadd_ps(u_02_re, u_11_re, u_20_re);
u_20_re = _mm512_fmadd_ps(u_02_im, u_11_im, u_20_re);
u_20_im = _mm512_mul_ps( u_02_re , u_11_im );
u_20_im = _mm512_fmadd_ps(u_02_im, u_11_re, u_20_im);
u_20_im = _mm512_fnmadd_ps(u_01_re, u_12_im, u_20_im);
u_20_im = _mm512_fnmadd_ps(u_01_im, u_12_re, u_20_im);
u_21_re = _mm512_mul_ps( u_02_re , u_10_re );
u_21_re = _mm512_fnmadd_ps(u_02_im, u_10_im, u_21_re);
u_21_re = _mm512_fnmadd_ps(u_00_re, u_12_re, u_21_re);
u_21_re = _mm512_fmadd_ps(u_00_im, u_12_im, u_21_re);
 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+32) ), _MM_HINT_T1);

u_21_im = _mm512_mul_ps( u_00_re , u_12_im );
u_21_im = _mm512_fmadd_ps(u_00_im, u_12_re, u_21_im);
u_21_im = _mm512_fnmadd_ps(u_02_re, u_10_im, u_21_im);
u_21_im = _mm512_fnmadd_ps(u_02_im, u_10_re, u_21_im);
u_22_re = _mm512_mul_ps( u_00_re , u_11_re );
u_22_re = _mm512_fnmadd_ps(u_00_im, u_11_im, u_22_re);
u_22_re = _mm512_fnmadd_ps(u_01_re, u_10_re, u_22_re);
u_22_re = _mm512_fmadd_ps(u_01_im, u_10_im, u_22_re);
u_22_im = _mm512_mul_ps( u_01_re , u_10_im );
u_22_im = _mm512_fmadd_ps(u_01_im, u_10_re, u_22_im);
u_22_im = _mm512_fnmadd_ps(u_00_re, u_11_im, u_22_im);
u_22_im = _mm512_fnmadd_ps(u_00_im, u_11_re, u_22_im);
ub_S0_C0_RE = _mm512_mul_ps( u_00_re , b_S0_C0_RE );
ub_S0_C0_RE = _mm512_fnmadd_ps(u_00_im, b_S0_C0_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_mul_ps( u_00_re , b_S0_C0_IM );
ub_S0_C0_IM = _mm512_fmadd_ps(u_00_im, b_S0_C0_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_10_re, b_S0_C1_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fnmadd_ps(u_10_im, b_S0_C1_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_10_re, b_S0_C1_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fmadd_ps(u_10_im, b_S0_C1_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_20_re, b_S0_C2_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fnmadd_ps(u_20_im, b_S0_C2_IM, ub_S0_C0_RE);
 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+64) ), _MM_HINT_T1);

ub_S0_C0_IM = _mm512_fmadd_ps(u_20_re, b_S0_C2_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fmadd_ps(u_20_im, b_S0_C2_RE, ub_S0_C0_IM);
ub_S0_C1_RE = _mm512_mul_ps( u_01_re , b_S0_C0_RE );
ub_S0_C1_RE = _mm512_fnmadd_ps(u_01_im, b_S0_C0_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_mul_ps( u_01_re , b_S0_C0_IM );
ub_S0_C1_IM = _mm512_fmadd_ps(u_01_im, b_S0_C0_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_re, b_S0_C1_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fnmadd_ps(u_11_im, b_S0_C1_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_re, b_S0_C1_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_im, b_S0_C1_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_21_re, b_S0_C2_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fnmadd_ps(u_21_im, b_S0_C2_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_21_re, b_S0_C2_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fmadd_ps(u_21_im, b_S0_C2_RE, ub_S0_C1_IM);
ub_S0_C2_RE = _mm512_mul_ps( u_02_re , b_S0_C0_RE );
ub_S0_C2_RE = _mm512_fnmadd_ps(u_02_im, b_S0_C0_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_mul_ps( u_02_re , b_S0_C0_IM );
ub_S0_C2_IM = _mm512_fmadd_ps(u_02_im, b_S0_C0_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_12_re, b_S0_C1_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fnmadd_ps(u_12_im, b_S0_C1_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_12_re, b_S0_C1_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fmadd_ps(u_12_im, b_S0_C1_RE, ub_S0_C2_IM);
 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+96) ), _MM_HINT_T1);

ub_S0_C2_RE = _mm512_fmadd_ps(u_22_re, b_S0_C2_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fnmadd_ps(u_22_im, b_S0_C2_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_re, b_S0_C2_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_im, b_S0_C2_RE, ub_S0_C2_IM);
out_S0_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_RE, out_S0_C0_RE);
out_S0_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_IM, out_S0_C0_IM);
out_S0_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_RE, out_S0_C1_RE);
out_S0_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_IM, out_S0_C1_IM);
out_S0_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_RE, out_S0_C2_RE);
out_S0_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_IM, out_S0_C2_IM);
out_S2_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_RE, out_S2_C0_RE);
out_S2_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_IM, out_S2_C0_IM);
out_S2_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_RE, out_S2_C1_RE);
out_S2_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_IM, out_S2_C1_IM);
out_S2_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_RE, out_S2_C2_RE);
out_S2_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_IM, out_S2_C2_IM);
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][1][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][1][0] + offs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][1][0] + offs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][1][0] + offs[12]))));

psi_S0_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+128) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][1][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][1][1] + offs[4]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][1][1] + offs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][1][1] + offs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][3][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][3][0] + offs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][3][0] + offs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][3][0] + offs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][3][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][3][1] + offs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][3][1] + offs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[0][3][1] + offs[12]))));

b_S1_C0_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
b_S1_C0_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][1][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][1][0] + offs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][1][0] + offs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][1][0] + offs[12]))));

psi_S0_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+160) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][1][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][1][1] + offs[4]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][1][1] + offs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][1][1] + offs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][3][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][3][0] + offs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][3][0] + offs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][3][0] + offs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][3][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][3][1] + offs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][3][1] + offs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[1][3][1] + offs[12]))));

b_S1_C1_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
b_S1_C1_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][1][0] + offs[0]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][1][0] + offs[4]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][1][0] + offs[8]))));

psi_S0_RE = _mm512_mask_expand_ps(psi_S0_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][1][0] + offs[12]))));

psi_S0_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+0) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][1][1] + offs[0]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][1][1] + offs[4]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][1][1] + offs[8]))));

psi_S0_IM = _mm512_mask_expand_ps(psi_S0_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][1][1] + offs[12]))));

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][3][0] + offs[0]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][3][0] + offs[4]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][3][0] + offs[8]))));

psi_S1_RE = _mm512_mask_expand_ps(psi_S1_RE, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][3][0] + offs[12]))));

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][3][1] + offs[0]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf0, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][3][1] + offs[4]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf00, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][3][1] + offs[8]))));

psi_S1_IM = _mm512_mask_expand_ps(psi_S1_IM, 0xf000, _mm512_cvtph_ps(_mm256_loadu_si256((__m256i const *)((*tfBase)[2][3][1] + offs[12]))));

b_S1_C2_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
b_S1_C2_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
ub_S1_C0_RE = _mm512_mul_ps( u_00_re , b_S1_C0_RE );
ub_S1_C0_RE = _mm512_fnmadd_ps(u_00_im, b_S1_C0_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_mul_ps( u_00_re , b_S1_C0_IM );
ub_S1_C0_IM = _mm512_fmadd_ps(u_00_im, b_S1_C0_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_10_re, b_S1_C1_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fnmadd_ps(u_10_im, b_S1_C1_IM, ub_S1_C0_RE);
 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+32) ), _MM_HINT_T1);

ub_S1_C0_IM = _mm512_fmadd_ps(u_10_re, b_S1_C1_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fmadd_ps(u_10_im, b_S1_C1_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_20_re, b_S1_C2_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fnmadd_ps(u_20_im, b_S1_C2_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_20_re, b_S1_C2_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fmadd_ps(u_20_im, b_S1_C2_RE, ub_S1_C0_IM);
ub_S1_C1_RE = _mm512_mul_ps( u_01_re , b_S1_C0_RE );
ub_S1_C1_RE = _mm512_fnmadd_ps(u_01_im, b_S1_C0_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_mul_ps( u_01_re , b_S1_C0_IM );
ub_S1_C1_IM = _mm512_fmadd_ps(u_01_im, b_S1_C0_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_re, b_S1_C1_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fnmadd_ps(u_11_im, b_S1_C1_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_re, b_S1_C1_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_im, b_S1_C1_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_21_re, b_S1_C2_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fnmadd_ps(u_21_im, b_S1_C2_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_21_re, b_S1_C2_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fmadd_ps(u_21_im, b_S1_C2_RE, ub_S1_C1_IM);
ub_S1_C2_RE = _mm512_mul_ps( u_02_re , b_S1_C0_RE );
ub_S1_C2_RE = _mm512_fnmadd_ps(u_02_im, b_S1_C0_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_mul_ps( u_02_re , b_S1_C0_IM );
ub_S1_C2_IM = _mm512_fmadd_ps(u_02_im, b_S1_C0_RE, ub_S1_C2_IM);
 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+64) ), _MM_HINT_T1);

ub_S1_C2_RE = _mm512_fmadd_ps(u_12_re, b_S1_C1_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fnmadd_ps(u_12_im, b_S1_C1_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_12_re, b_S1_C1_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fmadd_ps(u_12_im, b_S1_C1_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_22_re, b_S1_C2_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fnmadd_ps(u_22_im, b_S1_C2_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_re, b_S1_C2_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_im, b_S1_C2_RE, ub_S1_C2_IM);
out_S1_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_RE, out_S1_C0_RE);
out_S1_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_IM, out_S1_C0_IM);
out_S1_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_RE, out_S1_C1_RE);
out_S1_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_IM, out_S1_C1_IM);
out_S1_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_RE, out_S1_C2_RE);
out_S1_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_IM, out_S1_C2_IM);
out_S3_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_RE, out_S3_C0_RE);
out_S3_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_IM, out_S3_C0_IM);
out_S3_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_RE, out_S3_C1_RE);
out_S3_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_IM, out_S3_C1_IM);
out_S3_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_RE, out_S3_C2_RE);
out_S3_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_IM, out_S3_C2_IM);
}
tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xf, out_S0_C0_RE, (_MM_PERM_ENUM)0);
 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+96) ), _MM_HINT_T1);

tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xf0, out_S0_C0_IM, (_MM_PERM_ENUM)0);
tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xf00, out_S1_C0_RE, (_MM_PERM_ENUM)0);
tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xf000, out_S1_C0_IM, (_MM_PERM_ENUM)0);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xf, out_S0_C0_RE, (_MM_PERM_ENUM)85);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xf0, out_S0_C0_IM, (_MM_PERM_ENUM)85);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xf00, out_S1_C0_RE, (_MM_PERM_ENUM)85);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xf000, out_S1_C0_IM, (_MM_PERM_ENUM)85);
tmp_3_re = _mm512_mask_permute4f128_ps(tmp_3_re, 0xf, out_S0_C0_RE, (_MM_PERM_ENUM)170);
tmp_3_re = _mm512_mask_permute4f128_ps(tmp_3_re, 0xf0, out_S0_C0_IM, (_MM_PERM_ENUM)170);
tmp_3_re = _mm512_mask_permute4f128_ps(tmp_3_re, 0xf00, out_S1_C0_RE, (_MM_PERM_ENUM)170);
tmp_3_re = _mm512_mask_permute4f128_ps(tmp_3_re, 0xf000, out_S1_C0_IM, (_MM_PERM_ENUM)170);
tmp_4_re = _mm512_mask_permute4f128_ps(tmp_4_re, 0xf, out_S0_C0_RE, (_MM_PERM_ENUM)255);
tmp_4_re = _mm512_mask_permute4f128_ps(tmp_4_re, 0xf0, out_S0_C0_IM, (_MM_PERM_ENUM)255);
tmp_4_re = _mm512_mask_permute4f128_ps(tmp_4_re, 0xf00, out_S1_C0_RE, (_MM_PERM_ENUM)255);
tmp_4_re = _mm512_mask_permute4f128_ps(tmp_4_re, 0xf000, out_S1_C0_IM, (_MM_PERM_ENUM)255);
_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[0])+0), _mm512_cvtps_ph(tmp_1_re, _MM_FROUND_TO_NEAREST_INT));

_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[4])+0), _mm512_cvtps_ph(tmp_2_re, _MM_FROUND_TO_NEAREST_INT));

_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[8])+0), _mm512_cvtps_ph(tmp_3_re, _MM_FROUND_TO_NEAREST_INT));

_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[12])+0), _mm512_cvtps_ph(tmp_4_re, _MM_FROUND_TO_NEAREST_INT));

tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xf, out_S2_C0_RE, (_MM_PERM_ENUM)0);
tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xf0, out_S2_C0_IM, (_MM_PERM_ENUM)0);
tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xf00, out_S3_C0_RE, (_MM_PERM_ENUM)0);
 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+128) ), _MM_HINT_T1);

tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xf000, out_S3_C0_IM, (_MM_PERM_ENUM)0);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xf, out_S2_C0_RE, (_MM_PERM_ENUM)85);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xf0, out_S2_C0_IM, (_MM_PERM_ENUM)85);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xf00, out_S3_C0_RE, (_MM_PERM_ENUM)85);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xf000, out_S3_C0_IM, (_MM_PERM_ENUM)85);
tmp_3_re = _mm512_mask_permute4f128_ps(tmp_3_re, 0xf, out_S2_C0_RE, (_MM_PERM_ENUM)170);
tmp_3_re = _mm512_mask_permute4f128_ps(tmp_3_re, 0xf0, out_S2_C0_IM, (_MM_PERM_ENUM)170);
tmp_3_re = _mm512_mask_permute4f128_ps(tmp_3_re, 0xf00, out_S3_C0_RE, (_MM_PERM_ENUM)170);
tmp_3_re = _mm512_mask_permute4f128_ps(tmp_3_re, 0xf000, out_S3_C0_IM, (_MM_PERM_ENUM)170);
tmp_4_re = _mm512_mask_permute4f128_ps(tmp_4_re, 0xf, out_S2_C0_RE, (_MM_PERM_ENUM)255);
tmp_4_re = _mm512_mask_permute4f128_ps(tmp_4_re, 0xf0, out_S2_C0_IM, (_MM_PERM_ENUM)255);
tmp_4_re = _mm512_mask_permute4f128_ps(tmp_4_re, 0xf00, out_S3_C0_RE, (_MM_PERM_ENUM)255);
tmp_4_re = _mm512_mask_permute4f128_ps(tmp_4_re, 0xf000, out_S3_C0_IM, (_MM_PERM_ENUM)255);
_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[0])+16), _mm512_cvtps_ph(tmp_1_re, _MM_FROUND_TO_NEAREST_INT));

_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[4])+16), _mm512_cvtps_ph(tmp_2_re, _MM_FROUND_TO_NEAREST_INT));

_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[8])+16), _mm512_cvtps_ph(tmp_3_re, _MM_FROUND_TO_NEAREST_INT));

_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[12])+16), _mm512_cvtps_ph(tmp_4_re, _MM_FROUND_TO_NEAREST_INT));

tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xf, out_S0_C1_RE, (_MM_PERM_ENUM)0);
tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xf0, out_S0_C1_IM, (_MM_PERM_ENUM)0);
tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xf00, out_S1_C1_RE, (_MM_PERM_ENUM)0);
tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xf000, out_S1_C1_IM, (_MM_PERM_ENUM)0);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xf, out_S0_C1_RE, (_MM_PERM_ENUM)85);
 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+160) ), _MM_HINT_T1);

tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xf0, out_S0_C1_IM, (_MM_PERM_ENUM)85);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xf00, out_S1_C1_RE, (_MM_PERM_ENUM)85);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xf000, out_S1_C1_IM, (_MM_PERM_ENUM)85);
tmp_3_re = _mm512_mask_permute4f128_ps(tmp_3_re, 0xf, out_S0_C1_RE, (_MM_PERM_ENUM)170);
tmp_3_re = _mm512_mask_permute4f128_ps(tmp_3_re, 0xf0, out_S0_C1_IM, (_MM_PERM_ENUM)170);
tmp_3_re = _mm512_mask_permute4f128_ps(tmp_3_re, 0xf00, out_S1_C1_RE, (_MM_PERM_ENUM)170);
tmp_3_re = _mm512_mask_permute4f128_ps(tmp_3_re, 0xf000, out_S1_C1_IM, (_MM_PERM_ENUM)170);
tmp_4_re = _mm512_mask_permute4f128_ps(tmp_4_re, 0xf, out_S0_C1_RE, (_MM_PERM_ENUM)255);
tmp_4_re = _mm512_mask_permute4f128_ps(tmp_4_re, 0xf0, out_S0_C1_IM, (_MM_PERM_ENUM)255);
tmp_4_re = _mm512_mask_permute4f128_ps(tmp_4_re, 0xf00, out_S1_C1_RE, (_MM_PERM_ENUM)255);
tmp_4_re = _mm512_mask_permute4f128_ps(tmp_4_re, 0xf000, out_S1_C1_IM, (_MM_PERM_ENUM)255);
_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[0])+32), _mm512_cvtps_ph(tmp_1_re, _MM_FROUND_TO_NEAREST_INT));

_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[4])+32), _mm512_cvtps_ph(tmp_2_re, _MM_FROUND_TO_NEAREST_INT));

_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[8])+32), _mm512_cvtps_ph(tmp_3_re, _MM_FROUND_TO_NEAREST_INT));

_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[12])+32), _mm512_cvtps_ph(tmp_4_re, _MM_FROUND_TO_NEAREST_INT));

tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xf, out_S2_C1_RE, (_MM_PERM_ENUM)0);
tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xf0, out_S2_C1_IM, (_MM_PERM_ENUM)0);
tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xf00, out_S3_C1_RE, (_MM_PERM_ENUM)0);
tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xf000, out_S3_C1_IM, (_MM_PERM_ENUM)0);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xf, out_S2_C1_RE, (_MM_PERM_ENUM)85);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xf0, out_S2_C1_IM, (_MM_PERM_ENUM)85);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xf00, out_S3_C1_RE, (_MM_PERM_ENUM)85);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xf000, out_S3_C1_IM, (_MM_PERM_ENUM)85);
tmp_3_re = _mm512_mask_permute4f128_ps(tmp_3_re, 0xf, out_S2_C1_RE, (_MM_PERM_ENUM)170);
tmp_3_re = _mm512_mask_permute4f128_ps(tmp_3_re, 0xf0, out_S2_C1_IM, (_MM_PERM_ENUM)170);
tmp_3_re = _mm512_mask_permute4f128_ps(tmp_3_re, 0xf00, out_S3_C1_RE, (_MM_PERM_ENUM)170);
tmp_3_re = _mm512_mask_permute4f128_ps(tmp_3_re, 0xf000, out_S3_C1_IM, (_MM_PERM_ENUM)170);
tmp_4_re = _mm512_mask_permute4f128_ps(tmp_4_re, 0xf, out_S2_C1_RE, (_MM_PERM_ENUM)255);
tmp_4_re = _mm512_mask_permute4f128_ps(tmp_4_re, 0xf0, out_S2_C1_IM, (_MM_PERM_ENUM)255);
tmp_4_re = _mm512_mask_permute4f128_ps(tmp_4_re, 0xf00, out_S3_C1_RE, (_MM_PERM_ENUM)255);
tmp_4_re = _mm512_mask_permute4f128_ps(tmp_4_re, 0xf000, out_S3_C1_IM, (_MM_PERM_ENUM)255);
_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[0])+48), _mm512_cvtps_ph(tmp_1_re, _MM_FROUND_TO_NEAREST_INT));

_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[4])+48), _mm512_cvtps_ph(tmp_2_re, _MM_FROUND_TO_NEAREST_INT));

_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[8])+48), _mm512_cvtps_ph(tmp_3_re, _MM_FROUND_TO_NEAREST_INT));

_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[12])+48), _mm512_cvtps_ph(tmp_4_re, _MM_FROUND_TO_NEAREST_INT));

tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xf, out_S0_C2_RE, (_MM_PERM_ENUM)0);
tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xf0, out_S0_C2_IM, (_MM_PERM_ENUM)0);
tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xf00, out_S1_C2_RE, (_MM_PERM_ENUM)0);
tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xf000, out_S1_C2_IM, (_MM_PERM_ENUM)0);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xf, out_S0_C2_RE, (_MM_PERM_ENUM)85);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xf0, out_S0_C2_IM, (_MM_PERM_ENUM)85);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xf00, out_S1_C2_RE, (_MM_PERM_ENUM)85);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xf000, out_S1_C2_IM, (_MM_PERM_ENUM)85);
tmp_3_re = _mm512_mask_permute4f128_ps(tmp_3_re, 0xf, out_S0_C2_RE, (_MM_PERM_ENUM)170);
tmp_3_re = _mm512_mask_permute4f128_ps(tmp_3_re, 0xf0, out_S0_C2_IM, (_MM_PERM_ENUM)170);
tmp_3_re = _mm512_mask_permute4f128_ps(tmp_3_re, 0xf00, out_S1_C2_RE, (_MM_PERM_ENUM)170);
tmp_3_re = _mm512_mask_permute4f128_ps(tmp_3_re, 0xf000, out_S1_C2_IM, (_MM_PERM_ENUM)170);
tmp_4_re = _mm512_mask_permute4f128_ps(tmp_4_re, 0xf, out_S0_C2_RE, (_MM_PERM_ENUM)255);
tmp_4_re = _mm512_mask_permute4f128_ps(tmp_4_re, 0xf0, out_S0_C2_IM, (_MM_PERM_ENUM)255);
tmp_4_re = _mm512_mask_permute4f128_ps(tmp_4_re, 0xf00, out_S1_C2_RE, (_MM_PERM_ENUM)255);
tmp_4_re = _mm512_mask_permute4f128_ps(tmp_4_re, 0xf000, out_S1_C2_IM, (_MM_PERM_ENUM)255);
_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[0])+64), _mm512_cvtps_ph(tmp_1_re, _MM_FROUND_TO_NEAREST_INT));

_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[4])+64), _mm512_cvtps_ph(tmp_2_re, _MM_FROUND_TO_NEAREST_INT));

_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[8])+64), _mm512_cvtps_ph(tmp_3_re, _MM_FROUND_TO_NEAREST_INT));

_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[12])+64), _mm512_cvtps_ph(tmp_4_re, _MM_FROUND_TO_NEAREST_INT));

tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xf, out_S2_C2_RE, (_MM_PERM_ENUM)0);
tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xf0, out_S2_C2_IM, (_MM_PERM_ENUM)0);
tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xf00, out_S3_C2_RE, (_MM_PERM_ENUM)0);
tmp_1_re = _mm512_mask_permute4f128_ps(tmp_1_re, 0xf000, out_S3_C2_IM, (_MM_PERM_ENUM)0);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xf, out_S2_C2_RE, (_MM_PERM_ENUM)85);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xf0, out_S2_C2_IM, (_MM_PERM_ENUM)85);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xf00, out_S3_C2_RE, (_MM_PERM_ENUM)85);
tmp_2_re = _mm512_mask_permute4f128_ps(tmp_2_re, 0xf000, out_S3_C2_IM, (_MM_PERM_ENUM)85);
tmp_3_re = _mm512_mask_permute4f128_ps(tmp_3_re, 0xf, out_S2_C2_RE, (_MM_PERM_ENUM)170);
tmp_3_re = _mm512_mask_permute4f128_ps(tmp_3_re, 0xf0, out_S2_C2_IM, (_MM_PERM_ENUM)170);
tmp_3_re = _mm512_mask_permute4f128_ps(tmp_3_re, 0xf00, out_S3_C2_RE, (_MM_PERM_ENUM)170);
tmp_3_re = _mm512_mask_permute4f128_ps(tmp_3_re, 0xf000, out_S3_C2_IM, (_MM_PERM_ENUM)170);
tmp_4_re = _mm512_mask_permute4f128_ps(tmp_4_re, 0xf, out_S2_C2_RE, (_MM_PERM_ENUM)255);
tmp_4_re = _mm512_mask_permute4f128_ps(tmp_4_re, 0xf0, out_S2_C2_IM, (_MM_PERM_ENUM)255);
tmp_4_re = _mm512_mask_permute4f128_ps(tmp_4_re, 0xf00, out_S3_C2_RE, (_MM_PERM_ENUM)255);
tmp_4_re = _mm512_mask_permute4f128_ps(tmp_4_re, 0xf000, out_S3_C2_IM, (_MM_PERM_ENUM)255);
_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[0])+80), _mm512_cvtps_ph(tmp_1_re, _MM_FROUND_TO_NEAREST_INT));

_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[4])+80), _mm512_cvtps_ph(tmp_2_re, _MM_FROUND_TO_NEAREST_INT));

_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[8])+80), _mm512_cvtps_ph(tmp_3_re, _MM_FROUND_TO_NEAREST_INT));

_mm256_store_si256((__m256i *)(((*oBase)[0][0][0] + offs[12])+80), _mm512_cvtps_ph(tmp_4_re, _MM_FROUND_TO_NEAREST_INT));


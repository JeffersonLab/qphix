__m512d b_S0_C0_RE = _mm512_setzero_pd(); 
__m512d b_S0_C0_IM = _mm512_setzero_pd(); 
__m512d b_S0_C1_RE = _mm512_setzero_pd(); 
__m512d b_S0_C1_IM = _mm512_setzero_pd(); 
__m512d b_S0_C2_RE = _mm512_setzero_pd(); 
__m512d b_S0_C2_IM = _mm512_setzero_pd(); 
__m512d b_S1_C0_RE = _mm512_setzero_pd(); 
__m512d b_S1_C0_IM = _mm512_setzero_pd(); 
__m512d b_S1_C1_RE = _mm512_setzero_pd(); 
__m512d b_S1_C1_IM = _mm512_setzero_pd(); 
__m512d b_S1_C2_RE = _mm512_setzero_pd(); 
__m512d b_S1_C2_IM = _mm512_setzero_pd(); 
__m512d ub_S0_C0_RE = _mm512_setzero_pd(); 
__m512d ub_S0_C0_IM = _mm512_setzero_pd(); 
__m512d ub_S0_C1_RE = _mm512_setzero_pd(); 
__m512d ub_S0_C1_IM = _mm512_setzero_pd(); 
__m512d ub_S0_C2_RE = _mm512_setzero_pd(); 
__m512d ub_S0_C2_IM = _mm512_setzero_pd(); 
__m512d ub_S1_C0_RE = _mm512_setzero_pd(); 
__m512d ub_S1_C0_IM = _mm512_setzero_pd(); 
__m512d ub_S1_C1_RE = _mm512_setzero_pd(); 
__m512d ub_S1_C1_IM = _mm512_setzero_pd(); 
__m512d ub_S1_C2_RE = _mm512_setzero_pd(); 
__m512d ub_S1_C2_IM = _mm512_setzero_pd(); 
__m512d out_S0_C0_RE = _mm512_setzero_pd(); 
__m512d out_S0_C0_IM = _mm512_setzero_pd(); 
__m512d out_S0_C1_RE = _mm512_setzero_pd(); 
__m512d out_S0_C1_IM = _mm512_setzero_pd(); 
__m512d out_S0_C2_RE = _mm512_setzero_pd(); 
__m512d out_S0_C2_IM = _mm512_setzero_pd(); 
__m512d out_S1_C0_RE = _mm512_setzero_pd(); 
__m512d out_S1_C0_IM = _mm512_setzero_pd(); 
__m512d out_S1_C1_RE = _mm512_setzero_pd(); 
__m512d out_S1_C1_IM = _mm512_setzero_pd(); 
__m512d out_S1_C2_RE = _mm512_setzero_pd(); 
__m512d out_S1_C2_IM = _mm512_setzero_pd(); 
__m512d out_S2_C0_RE = _mm512_setzero_pd(); 
__m512d out_S2_C0_IM = _mm512_setzero_pd(); 
__m512d out_S2_C1_RE = _mm512_setzero_pd(); 
__m512d out_S2_C1_IM = _mm512_setzero_pd(); 
__m512d out_S2_C2_RE = _mm512_setzero_pd(); 
__m512d out_S2_C2_IM = _mm512_setzero_pd(); 
__m512d out_S3_C0_RE = _mm512_setzero_pd(); 
__m512d out_S3_C0_IM = _mm512_setzero_pd(); 
__m512d out_S3_C1_RE = _mm512_setzero_pd(); 
__m512d out_S3_C1_IM = _mm512_setzero_pd(); 
__m512d out_S3_C2_RE = _mm512_setzero_pd(); 
__m512d out_S3_C2_IM = _mm512_setzero_pd(); 
__m512d u_00_re = _mm512_setzero_pd(); 
__m512d u_00_im = _mm512_setzero_pd(); 
__m512d u_01_re = _mm512_setzero_pd(); 
__m512d u_01_im = _mm512_setzero_pd(); 
__m512d u_02_re = _mm512_setzero_pd(); 
__m512d u_02_im = _mm512_setzero_pd(); 
__m512d u_10_re = _mm512_setzero_pd(); 
__m512d u_10_im = _mm512_setzero_pd(); 
__m512d u_11_re = _mm512_setzero_pd(); 
__m512d u_11_im = _mm512_setzero_pd(); 
__m512d u_12_re = _mm512_setzero_pd(); 
__m512d u_12_im = _mm512_setzero_pd(); 
__m512d u_20_re = _mm512_setzero_pd(); 
__m512d u_20_im = _mm512_setzero_pd(); 
__m512d u_21_re = _mm512_setzero_pd(); 
__m512d u_21_im = _mm512_setzero_pd(); 
__m512d u_22_re = _mm512_setzero_pd(); 
__m512d u_22_im = _mm512_setzero_pd(); 
__m512d psi_S0_RE = _mm512_setzero_pd(); 
__m512d psi_S0_IM = _mm512_setzero_pd(); 
__m512d psi_S1_RE = _mm512_setzero_pd(); 
__m512d psi_S1_IM = _mm512_setzero_pd(); 
__m512d tmp_1_re = _mm512_setzero_pd(); 
__m512d tmp_1_im = _mm512_setzero_pd(); 
__m512d tmp_2_re = _mm512_setzero_pd(); 
__m512d tmp_2_im = _mm512_setzero_pd(); 
__m512d tmp_3_re = _mm512_setzero_pd(); 
__m512d tmp_3_im = _mm512_setzero_pd(); 
__m512d tmp_4_re = _mm512_setzero_pd(); 
__m512d tmp_4_im = _mm512_setzero_pd(); 
__m512d zero = _mm512_setzero_pd(); 
 _mm_prefetch((const char *)( (((inbuf) + hsprefdist)+0) ), _MM_HINT_T1);

zero = _mm512_setzero_pd(); 
__m512d dout_S0_C0_RE = _mm512_setzero_pd(); 
__m512d dout_S0_C0_IM = _mm512_setzero_pd(); 
__m512d dout_S0_C1_RE = _mm512_setzero_pd(); 
__m512d dout_S0_C1_IM = _mm512_setzero_pd(); 
__m512d dout_S0_C2_RE = _mm512_setzero_pd(); 
 _mm_prefetch((const char *)( (((inbuf) + hsprefdist)+8) ), _MM_HINT_T1);

__m512d dout_S0_C2_IM = _mm512_setzero_pd(); 
__m512d dout_S1_C0_RE = _mm512_setzero_pd(); 
__m512d dout_S1_C0_IM = _mm512_setzero_pd(); 
__m512d dout_S1_C1_RE = _mm512_setzero_pd(); 
__m512d dout_S1_C1_IM = _mm512_setzero_pd(); 
__m512d dout_S1_C2_RE = _mm512_setzero_pd(); 
 _mm_prefetch((const char *)( (((inbuf) + hsprefdist)+16) ), _MM_HINT_T1);

__m512d dout_S1_C2_IM = _mm512_setzero_pd(); 
__m512d dout_S2_C0_RE = _mm512_setzero_pd(); 
__m512d dout_S2_C0_IM = _mm512_setzero_pd(); 
__m512d dout_S2_C1_RE = _mm512_setzero_pd(); 
__m512d dout_S2_C1_IM = _mm512_setzero_pd(); 
__m512d dout_S2_C2_RE = _mm512_setzero_pd(); 
 _mm_prefetch((const char *)( (((inbuf) + hsprefdist)+24) ), _MM_HINT_T1);

__m512d dout_S2_C2_IM = _mm512_setzero_pd(); 
__m512d dout_S3_C0_RE = _mm512_setzero_pd(); 
__m512d dout_S3_C0_IM = _mm512_setzero_pd(); 
__m512d dout_S3_C1_RE = _mm512_setzero_pd(); 
__m512d dout_S3_C1_IM = _mm512_setzero_pd(); 
__m512d dout_S3_C2_RE = _mm512_setzero_pd(); 
 _mm_prefetch((const char *)( (((inbuf) + hsprefdist)+32) ), _MM_HINT_T1);

__m512d dout_S3_C2_IM = _mm512_setzero_pd(); 
__m512d cl_full_00_RE = _mm512_setzero_pd(); 
__m512d cl_full_00_IM = _mm512_setzero_pd(); 
__m512d cl_full_01_RE = _mm512_setzero_pd(); 
__m512d cl_full_01_IM = _mm512_setzero_pd(); 
__m512d cl_full_02_RE = _mm512_setzero_pd(); 
 _mm_prefetch((const char *)( (((inbuf) + hsprefdist)+40) ), _MM_HINT_T1);

__m512d cl_full_02_IM = _mm512_setzero_pd(); 
__m512d cl_full_03_RE = _mm512_setzero_pd(); 
__m512d cl_full_03_IM = _mm512_setzero_pd(); 
__m512d cl_full_04_RE = _mm512_setzero_pd(); 
__m512d cl_full_04_IM = _mm512_setzero_pd(); 
__m512d cl_full_05_RE = _mm512_setzero_pd(); 
 _mm_prefetch((const char *)( (((inbuf) + hsprefdist)+48) ), _MM_HINT_T1);

__m512d cl_full_05_IM = _mm512_setzero_pd(); 
__m512d cl_full_10_RE = _mm512_setzero_pd(); 
__m512d cl_full_10_IM = _mm512_setzero_pd(); 
__m512d cl_full_11_RE = _mm512_setzero_pd(); 
__m512d cl_full_11_IM = _mm512_setzero_pd(); 
__m512d cl_full_12_RE = _mm512_setzero_pd(); 
 _mm_prefetch((const char *)( (((inbuf) + hsprefdist)+56) ), _MM_HINT_T1);

__m512d cl_full_12_IM = _mm512_setzero_pd(); 
__m512d cl_full_13_RE = _mm512_setzero_pd(); 
__m512d cl_full_13_IM = _mm512_setzero_pd(); 
__m512d cl_full_14_RE = _mm512_setzero_pd(); 
__m512d cl_full_14_IM = _mm512_setzero_pd(); 
__m512d cl_full_15_RE = _mm512_setzero_pd(); 
 _mm_prefetch((const char *)( (((inbuf) + hsprefdist)+64) ), _MM_HINT_T1);

__m512d cl_full_15_IM = _mm512_setzero_pd(); 
__m512d cl_full_20_RE = _mm512_setzero_pd(); 
__m512d cl_full_20_IM = _mm512_setzero_pd(); 
__m512d cl_full_21_RE = _mm512_setzero_pd(); 
__m512d cl_full_21_IM = _mm512_setzero_pd(); 
__m512d cl_full_22_RE = _mm512_setzero_pd(); 
 _mm_prefetch((const char *)( (((inbuf) + hsprefdist)+72) ), _MM_HINT_T1);

__m512d cl_full_22_IM = _mm512_setzero_pd(); 
__m512d cl_full_23_RE = _mm512_setzero_pd(); 
__m512d cl_full_23_IM = _mm512_setzero_pd(); 
__m512d cl_full_24_RE = _mm512_setzero_pd(); 
__m512d cl_full_24_IM = _mm512_setzero_pd(); 
__m512d cl_full_25_RE = _mm512_setzero_pd(); 
 _mm_prefetch((const char *)( (((inbuf) + hsprefdist)+80) ), _MM_HINT_T1);

__m512d cl_full_25_IM = _mm512_setzero_pd(); 
__m512d cl_full_30_RE = _mm512_setzero_pd(); 
__m512d cl_full_30_IM = _mm512_setzero_pd(); 
__m512d cl_full_31_RE = _mm512_setzero_pd(); 
__m512d cl_full_31_IM = _mm512_setzero_pd(); 
__m512d cl_full_32_RE = _mm512_setzero_pd(); 
 _mm_prefetch((const char *)( (((inbuf) + hsprefdist)+88) ), _MM_HINT_T1);

__m512d cl_full_32_IM = _mm512_setzero_pd(); 
__m512d cl_full_33_RE = _mm512_setzero_pd(); 
__m512d cl_full_33_IM = _mm512_setzero_pd(); 
__m512d cl_full_34_RE = _mm512_setzero_pd(); 
__m512d cl_full_34_IM = _mm512_setzero_pd(); 
__m512d cl_full_35_RE = _mm512_setzero_pd(); 
 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+0) ), _MM_HINT_T1);

__m512d cl_full_35_IM = _mm512_setzero_pd(); 
__m512d cl_full_40_RE = _mm512_setzero_pd(); 
__m512d cl_full_40_IM = _mm512_setzero_pd(); 
__m512d cl_full_41_RE = _mm512_setzero_pd(); 
__m512d cl_full_41_IM = _mm512_setzero_pd(); 
__m512d cl_full_42_RE = _mm512_setzero_pd(); 
 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+8) ), _MM_HINT_T1);

__m512d cl_full_42_IM = _mm512_setzero_pd(); 
__m512d cl_full_43_RE = _mm512_setzero_pd(); 
__m512d cl_full_43_IM = _mm512_setzero_pd(); 
__m512d cl_full_44_RE = _mm512_setzero_pd(); 
__m512d cl_full_44_IM = _mm512_setzero_pd(); 
__m512d cl_full_45_RE = _mm512_setzero_pd(); 
 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+16) ), _MM_HINT_T1);

__m512d cl_full_45_IM = _mm512_setzero_pd(); 
__m512d cl_full_50_RE = _mm512_setzero_pd(); 
__m512d cl_full_50_IM = _mm512_setzero_pd(); 
__m512d cl_full_51_RE = _mm512_setzero_pd(); 
__m512d cl_full_51_IM = _mm512_setzero_pd(); 
__m512d cl_full_52_RE = _mm512_setzero_pd(); 
 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+24) ), _MM_HINT_T1);

__m512d cl_full_52_IM = _mm512_setzero_pd(); 
__m512d cl_full_53_RE = _mm512_setzero_pd(); 
__m512d cl_full_53_IM = _mm512_setzero_pd(); 
__m512d cl_full_54_RE = _mm512_setzero_pd(); 
__m512d cl_full_54_IM = _mm512_setzero_pd(); 
__m512d cl_full_55_RE = _mm512_setzero_pd(); 
 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+32) ), _MM_HINT_T1);

__m512d cl_full_55_IM = _mm512_setzero_pd(); 
__m512d beta_vec = _mm512_setzero_pd(); 
beta_vec = _mm512_extload_pd((&beta), _MM_UPCONV_PD_NONE, _MM_BROADCAST_1X8, _MM_HINT_NONE);

dout_S0_C0_RE = _mm512_setzero_pd(); 
dout_S0_C0_IM = _mm512_setzero_pd(); 
dout_S0_C1_RE = _mm512_setzero_pd(); 
 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+40) ), _MM_HINT_T1);

dout_S0_C1_IM = _mm512_setzero_pd(); 
dout_S0_C2_RE = _mm512_setzero_pd(); 
dout_S0_C2_IM = _mm512_setzero_pd(); 
dout_S1_C0_RE = _mm512_setzero_pd(); 
dout_S1_C0_IM = _mm512_setzero_pd(); 
dout_S1_C1_RE = _mm512_setzero_pd(); 
 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+48) ), _MM_HINT_T1);

dout_S1_C1_IM = _mm512_setzero_pd(); 
dout_S1_C2_RE = _mm512_setzero_pd(); 
dout_S1_C2_IM = _mm512_setzero_pd(); 
dout_S2_C0_RE = _mm512_setzero_pd(); 
dout_S2_C0_IM = _mm512_setzero_pd(); 
dout_S2_C1_RE = _mm512_setzero_pd(); 
 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+56) ), _MM_HINT_T1);

dout_S2_C1_IM = _mm512_setzero_pd(); 
dout_S2_C2_RE = _mm512_setzero_pd(); 
dout_S2_C2_IM = _mm512_setzero_pd(); 
dout_S3_C0_RE = _mm512_setzero_pd(); 
dout_S3_C0_IM = _mm512_setzero_pd(); 
dout_S3_C1_RE = _mm512_setzero_pd(); 
 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+64) ), _MM_HINT_T1);

dout_S3_C1_IM = _mm512_setzero_pd(); 
dout_S3_C2_RE = _mm512_setzero_pd(); 
dout_S3_C2_IM = _mm512_setzero_pd(); 
 _mm_prefetch((const char *)( ((inbuf)+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((inbuf)+8) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+0) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+72) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+8) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+16) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+24) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+32) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+40) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+48) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+80) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+56) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+64) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+72) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+80) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+88) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+96) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+88) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+104) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+112) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+120) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+128) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+136) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+144) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+96) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+152) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+160) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+168) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+176) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*oBase)[0][0][0]+184) + offs[0]) ), _MM_HINT_T0);

out_S0_C0_RE = _mm512_undefined_pd(); 
 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+104) ), _MM_HINT_T1);

out_S0_C0_RE = _mm512_mask_loadunpacklo_pd(out_S0_C0_RE, 0xff, ((*oBase)[0][0][0] + offs[0]));

out_S0_C0_IM = _mm512_undefined_pd(); 
out_S0_C0_IM = _mm512_mask_loadunpacklo_pd(out_S0_C0_IM, 0xff, ((*oBase)[0][0][1] + offs[0]));

out_S1_C0_RE = _mm512_undefined_pd(); 
out_S1_C0_RE = _mm512_mask_loadunpacklo_pd(out_S1_C0_RE, 0xff, ((*oBase)[0][1][0] + offs[0]));

out_S1_C0_IM = _mm512_undefined_pd(); 
 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+112) ), _MM_HINT_T1);

out_S1_C0_IM = _mm512_mask_loadunpacklo_pd(out_S1_C0_IM, 0xff, ((*oBase)[0][1][1] + offs[0]));

out_S2_C0_RE = _mm512_undefined_pd(); 
out_S2_C0_RE = _mm512_mask_loadunpacklo_pd(out_S2_C0_RE, 0xff, ((*oBase)[0][2][0] + offs[0]));

out_S2_C0_IM = _mm512_undefined_pd(); 
out_S2_C0_IM = _mm512_mask_loadunpacklo_pd(out_S2_C0_IM, 0xff, ((*oBase)[0][2][1] + offs[0]));

out_S3_C0_RE = _mm512_undefined_pd(); 
 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+120) ), _MM_HINT_T1);

out_S3_C0_RE = _mm512_mask_loadunpacklo_pd(out_S3_C0_RE, 0xff, ((*oBase)[0][3][0] + offs[0]));

out_S3_C0_IM = _mm512_undefined_pd(); 
out_S3_C0_IM = _mm512_mask_loadunpacklo_pd(out_S3_C0_IM, 0xff, ((*oBase)[0][3][1] + offs[0]));

out_S0_C1_RE = _mm512_undefined_pd(); 
out_S0_C1_RE = _mm512_mask_loadunpacklo_pd(out_S0_C1_RE, 0xff, ((*oBase)[1][0][0] + offs[0]));

out_S0_C1_IM = _mm512_undefined_pd(); 
 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+128) ), _MM_HINT_T1);

out_S0_C1_IM = _mm512_mask_loadunpacklo_pd(out_S0_C1_IM, 0xff, ((*oBase)[1][0][1] + offs[0]));

out_S1_C1_RE = _mm512_undefined_pd(); 
out_S1_C1_RE = _mm512_mask_loadunpacklo_pd(out_S1_C1_RE, 0xff, ((*oBase)[1][1][0] + offs[0]));

out_S1_C1_IM = _mm512_undefined_pd(); 
out_S1_C1_IM = _mm512_mask_loadunpacklo_pd(out_S1_C1_IM, 0xff, ((*oBase)[1][1][1] + offs[0]));

out_S2_C1_RE = _mm512_undefined_pd(); 
 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+136) ), _MM_HINT_T1);

out_S2_C1_RE = _mm512_mask_loadunpacklo_pd(out_S2_C1_RE, 0xff, ((*oBase)[1][2][0] + offs[0]));

out_S2_C1_IM = _mm512_undefined_pd(); 
out_S2_C1_IM = _mm512_mask_loadunpacklo_pd(out_S2_C1_IM, 0xff, ((*oBase)[1][2][1] + offs[0]));

out_S3_C1_RE = _mm512_undefined_pd(); 
out_S3_C1_RE = _mm512_mask_loadunpacklo_pd(out_S3_C1_RE, 0xff, ((*oBase)[1][3][0] + offs[0]));

out_S3_C1_IM = _mm512_undefined_pd(); 
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+0) ), _MM_HINT_T1);

out_S3_C1_IM = _mm512_mask_loadunpacklo_pd(out_S3_C1_IM, 0xff, ((*oBase)[1][3][1] + offs[0]));

out_S0_C2_RE = _mm512_undefined_pd(); 
out_S0_C2_RE = _mm512_mask_loadunpacklo_pd(out_S0_C2_RE, 0xff, ((*oBase)[2][0][0] + offs[0]));

out_S0_C2_IM = _mm512_undefined_pd(); 
out_S0_C2_IM = _mm512_mask_loadunpacklo_pd(out_S0_C2_IM, 0xff, ((*oBase)[2][0][1] + offs[0]));

out_S1_C2_RE = _mm512_undefined_pd(); 
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+8) ), _MM_HINT_T1);

out_S1_C2_RE = _mm512_mask_loadunpacklo_pd(out_S1_C2_RE, 0xff, ((*oBase)[2][1][0] + offs[0]));

out_S1_C2_IM = _mm512_undefined_pd(); 
out_S1_C2_IM = _mm512_mask_loadunpacklo_pd(out_S1_C2_IM, 0xff, ((*oBase)[2][1][1] + offs[0]));

out_S2_C2_RE = _mm512_undefined_pd(); 
out_S2_C2_RE = _mm512_mask_loadunpacklo_pd(out_S2_C2_RE, 0xff, ((*oBase)[2][2][0] + offs[0]));

out_S2_C2_IM = _mm512_undefined_pd(); 
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+16) ), _MM_HINT_T1);

out_S2_C2_IM = _mm512_mask_loadunpacklo_pd(out_S2_C2_IM, 0xff, ((*oBase)[2][2][1] + offs[0]));

out_S3_C2_RE = _mm512_undefined_pd(); 
out_S3_C2_RE = _mm512_mask_loadunpacklo_pd(out_S3_C2_RE, 0xff, ((*oBase)[2][3][0] + offs[0]));

out_S3_C2_IM = _mm512_undefined_pd(); 
out_S3_C2_IM = _mm512_mask_loadunpacklo_pd(out_S3_C2_IM, 0xff, ((*oBase)[2][3][1] + offs[0]));

b_S0_C0_RE = _mm512_mask_load_pd(b_S0_C0_RE, 0xFF, ((inbuf)+0));

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+24) ), _MM_HINT_T1);

b_S0_C0_IM = _mm512_mask_load_pd(b_S0_C0_IM, 0xFF, ((inbuf)+8));

b_S0_C1_RE = _mm512_mask_load_pd(b_S0_C1_RE, 0xFF, ((inbuf)+16));

b_S0_C1_IM = _mm512_mask_load_pd(b_S0_C1_IM, 0xFF, ((inbuf)+24));

b_S0_C2_RE = _mm512_mask_load_pd(b_S0_C2_RE, 0xFF, ((inbuf)+32));

b_S0_C2_IM = _mm512_mask_load_pd(b_S0_C2_IM, 0xFF, ((inbuf)+40));

b_S1_C0_RE = _mm512_mask_load_pd(b_S1_C0_RE, 0xFF, ((inbuf)+48));

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+32) ), _MM_HINT_T1);

b_S1_C0_IM = _mm512_mask_load_pd(b_S1_C0_IM, 0xFF, ((inbuf)+56));

b_S1_C1_RE = _mm512_mask_load_pd(b_S1_C1_RE, 0xFF, ((inbuf)+64));

b_S1_C1_IM = _mm512_mask_load_pd(b_S1_C1_IM, 0xFF, ((inbuf)+72));

b_S1_C2_RE = _mm512_mask_load_pd(b_S1_C2_RE, 0xFF, ((inbuf)+80));

b_S1_C2_IM = _mm512_mask_load_pd(b_S1_C2_IM, 0xFF, ((inbuf)+88));

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+40) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+8) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+16) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+24) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+40) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+48) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+48) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+56) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+72) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+80) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+88) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+56) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+104) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+112) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+120) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+136) ), _MM_HINT_T0);

u_00_re = _mm512_mask_load_pd(u_00_re, 0xFF, (*gBase)[6][0][0][0]);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+64) ), _MM_HINT_T1);

u_00_im = _mm512_mask_load_pd(u_00_im, 0xFF, (*gBase)[6][0][0][1]);

u_01_re = _mm512_mask_load_pd(u_01_re, 0xFF, (*gBase)[6][0][1][0]);

u_01_im = _mm512_mask_load_pd(u_01_im, 0xFF, (*gBase)[6][0][1][1]);

u_02_re = _mm512_mask_load_pd(u_02_re, 0xFF, (*gBase)[6][0][2][0]);

u_02_im = _mm512_mask_load_pd(u_02_im, 0xFF, (*gBase)[6][0][2][1]);

u_10_re = _mm512_mask_load_pd(u_10_re, 0xFF, (*gBase)[6][1][0][0]);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+72) ), _MM_HINT_T1);

u_10_im = _mm512_mask_load_pd(u_10_im, 0xFF, (*gBase)[6][1][0][1]);

u_11_re = _mm512_mask_load_pd(u_11_re, 0xFF, (*gBase)[6][1][1][0]);

u_11_im = _mm512_mask_load_pd(u_11_im, 0xFF, (*gBase)[6][1][1][1]);

u_12_re = _mm512_mask_load_pd(u_12_re, 0xFF, (*gBase)[6][1][2][0]);

u_12_im = _mm512_mask_load_pd(u_12_im, 0xFF, (*gBase)[6][1][2][1]);

u_20_re = _mm512_mask_load_pd(u_20_re, 0xFF, (*gBase)[6][2][0][0]);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+80) ), _MM_HINT_T1);

u_20_im = _mm512_mask_load_pd(u_20_im, 0xFF, (*gBase)[6][2][0][1]);

u_21_re = _mm512_mask_load_pd(u_21_re, 0xFF, (*gBase)[6][2][1][0]);

u_21_im = _mm512_mask_load_pd(u_21_im, 0xFF, (*gBase)[6][2][1][1]);

u_22_re = _mm512_mask_load_pd(u_22_re, 0xFF, (*gBase)[6][2][2][0]);

u_22_im = _mm512_mask_load_pd(u_22_im, 0xFF, (*gBase)[6][2][2][1]);

ub_S0_C0_RE = _mm512_mul_pd( u_00_re , b_S0_C0_RE );
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+88) ), _MM_HINT_T1);

ub_S0_C0_RE = _mm512_fmadd_pd(u_00_im, b_S0_C0_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_mul_pd( u_00_re , b_S0_C0_IM );
ub_S0_C0_IM = _mm512_fnmadd_pd(u_00_im, b_S0_C0_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_pd(u_01_re, b_S0_C1_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fmadd_pd(u_01_im, b_S0_C1_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_pd(u_01_re, b_S0_C1_IM, ub_S0_C0_IM);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+96) ), _MM_HINT_T1);

ub_S0_C0_IM = _mm512_fnmadd_pd(u_01_im, b_S0_C1_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_pd(u_02_re, b_S0_C2_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fmadd_pd(u_02_im, b_S0_C2_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_pd(u_02_re, b_S0_C2_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fnmadd_pd(u_02_im, b_S0_C2_RE, ub_S0_C0_IM);
ub_S0_C1_RE = _mm512_mul_pd( u_10_re , b_S0_C0_RE );
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+104) ), _MM_HINT_T1);

ub_S0_C1_RE = _mm512_fmadd_pd(u_10_im, b_S0_C0_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_mul_pd( u_10_re , b_S0_C0_IM );
ub_S0_C1_IM = _mm512_fnmadd_pd(u_10_im, b_S0_C0_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_pd(u_11_re, b_S0_C1_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fmadd_pd(u_11_im, b_S0_C1_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_pd(u_11_re, b_S0_C1_IM, ub_S0_C1_IM);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+112) ), _MM_HINT_T1);

ub_S0_C1_IM = _mm512_fnmadd_pd(u_11_im, b_S0_C1_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_pd(u_12_re, b_S0_C2_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fmadd_pd(u_12_im, b_S0_C2_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_pd(u_12_re, b_S0_C2_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fnmadd_pd(u_12_im, b_S0_C2_RE, ub_S0_C1_IM);
ub_S0_C2_RE = _mm512_mul_pd( u_20_re , b_S0_C0_RE );
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+120) ), _MM_HINT_T1);

ub_S0_C2_RE = _mm512_fmadd_pd(u_20_im, b_S0_C0_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_mul_pd( u_20_re , b_S0_C0_IM );
ub_S0_C2_IM = _mm512_fnmadd_pd(u_20_im, b_S0_C0_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_pd(u_21_re, b_S0_C1_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fmadd_pd(u_21_im, b_S0_C1_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_pd(u_21_re, b_S0_C1_IM, ub_S0_C2_IM);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+128) ), _MM_HINT_T1);

ub_S0_C2_IM = _mm512_fnmadd_pd(u_21_im, b_S0_C1_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_pd(u_22_re, b_S0_C2_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fmadd_pd(u_22_im, b_S0_C2_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_pd(u_22_re, b_S0_C2_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fnmadd_pd(u_22_im, b_S0_C2_RE, ub_S0_C2_IM);
ub_S1_C0_RE = _mm512_mul_pd( u_00_re , b_S1_C0_RE );
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+136) ), _MM_HINT_T1);

ub_S1_C0_RE = _mm512_fmadd_pd(u_00_im, b_S1_C0_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_mul_pd( u_00_re , b_S1_C0_IM );
ub_S1_C0_IM = _mm512_fnmadd_pd(u_00_im, b_S1_C0_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_pd(u_01_re, b_S1_C1_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fmadd_pd(u_01_im, b_S1_C1_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_pd(u_01_re, b_S1_C1_IM, ub_S1_C0_IM);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+144) ), _MM_HINT_T1);

ub_S1_C0_IM = _mm512_fnmadd_pd(u_01_im, b_S1_C1_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_pd(u_02_re, b_S1_C2_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fmadd_pd(u_02_im, b_S1_C2_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_pd(u_02_re, b_S1_C2_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fnmadd_pd(u_02_im, b_S1_C2_RE, ub_S1_C0_IM);
ub_S1_C1_RE = _mm512_mul_pd( u_10_re , b_S1_C0_RE );
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+152) ), _MM_HINT_T1);

ub_S1_C1_RE = _mm512_fmadd_pd(u_10_im, b_S1_C0_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_mul_pd( u_10_re , b_S1_C0_IM );
ub_S1_C1_IM = _mm512_fnmadd_pd(u_10_im, b_S1_C0_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_pd(u_11_re, b_S1_C1_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fmadd_pd(u_11_im, b_S1_C1_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_pd(u_11_re, b_S1_C1_IM, ub_S1_C1_IM);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+160) ), _MM_HINT_T1);

ub_S1_C1_IM = _mm512_fnmadd_pd(u_11_im, b_S1_C1_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_pd(u_12_re, b_S1_C2_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fmadd_pd(u_12_im, b_S1_C2_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_pd(u_12_re, b_S1_C2_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fnmadd_pd(u_12_im, b_S1_C2_RE, ub_S1_C1_IM);
ub_S1_C2_RE = _mm512_mul_pd( u_20_re , b_S1_C0_RE );
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+168) ), _MM_HINT_T1);

ub_S1_C2_RE = _mm512_fmadd_pd(u_20_im, b_S1_C0_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_mul_pd( u_20_re , b_S1_C0_IM );
ub_S1_C2_IM = _mm512_fnmadd_pd(u_20_im, b_S1_C0_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_pd(u_21_re, b_S1_C1_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fmadd_pd(u_21_im, b_S1_C1_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_pd(u_21_re, b_S1_C1_IM, ub_S1_C2_IM);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+176) ), _MM_HINT_T1);

ub_S1_C2_IM = _mm512_fnmadd_pd(u_21_im, b_S1_C1_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_pd(u_22_re, b_S1_C2_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fmadd_pd(u_22_im, b_S1_C2_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_pd(u_22_re, b_S1_C2_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fnmadd_pd(u_22_im, b_S1_C2_RE, ub_S1_C2_IM);
dout_S0_C0_RE = _mm512_fmadd_pd(beta_vec, ub_S0_C0_RE, dout_S0_C0_RE);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+184) ), _MM_HINT_T1);

dout_S0_C0_IM = _mm512_fmadd_pd(beta_vec, ub_S0_C0_IM, dout_S0_C0_IM);
dout_S0_C1_RE = _mm512_fmadd_pd(beta_vec, ub_S0_C1_RE, dout_S0_C1_RE);
dout_S0_C1_IM = _mm512_fmadd_pd(beta_vec, ub_S0_C1_IM, dout_S0_C1_IM);
dout_S0_C2_RE = _mm512_fmadd_pd(beta_vec, ub_S0_C2_RE, dout_S0_C2_RE);
dout_S0_C2_IM = _mm512_fmadd_pd(beta_vec, ub_S0_C2_IM, dout_S0_C2_IM);
dout_S2_C0_RE = _mm512_fmadd_pd(beta_vec, ub_S0_C0_RE, dout_S2_C0_RE);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+192) ), _MM_HINT_T1);

dout_S2_C0_IM = _mm512_fmadd_pd(beta_vec, ub_S0_C0_IM, dout_S2_C0_IM);
dout_S2_C1_RE = _mm512_fmadd_pd(beta_vec, ub_S0_C1_RE, dout_S2_C1_RE);
dout_S2_C1_IM = _mm512_fmadd_pd(beta_vec, ub_S0_C1_IM, dout_S2_C1_IM);
dout_S2_C2_RE = _mm512_fmadd_pd(beta_vec, ub_S0_C2_RE, dout_S2_C2_RE);
dout_S2_C2_IM = _mm512_fmadd_pd(beta_vec, ub_S0_C2_IM, dout_S2_C2_IM);
dout_S1_C0_RE = _mm512_fmadd_pd(beta_vec, ub_S1_C0_RE, dout_S1_C0_RE);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+200) ), _MM_HINT_T1);

dout_S1_C0_IM = _mm512_fmadd_pd(beta_vec, ub_S1_C0_IM, dout_S1_C0_IM);
dout_S1_C1_RE = _mm512_fmadd_pd(beta_vec, ub_S1_C1_RE, dout_S1_C1_RE);
dout_S1_C1_IM = _mm512_fmadd_pd(beta_vec, ub_S1_C1_IM, dout_S1_C1_IM);
dout_S1_C2_RE = _mm512_fmadd_pd(beta_vec, ub_S1_C2_RE, dout_S1_C2_RE);
dout_S1_C2_IM = _mm512_fmadd_pd(beta_vec, ub_S1_C2_IM, dout_S1_C2_IM);
dout_S3_C0_RE = _mm512_fmadd_pd(beta_vec, ub_S1_C0_RE, dout_S3_C0_RE);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+208) ), _MM_HINT_T1);

dout_S3_C0_IM = _mm512_fmadd_pd(beta_vec, ub_S1_C0_IM, dout_S3_C0_IM);
dout_S3_C1_RE = _mm512_fmadd_pd(beta_vec, ub_S1_C1_RE, dout_S3_C1_RE);
dout_S3_C1_IM = _mm512_fmadd_pd(beta_vec, ub_S1_C1_IM, dout_S3_C1_IM);
dout_S3_C2_RE = _mm512_fmadd_pd(beta_vec, ub_S1_C2_RE, dout_S3_C2_RE);
dout_S3_C2_IM = _mm512_fmadd_pd(beta_vec, ub_S1_C2_IM, dout_S3_C2_IM);
 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+216) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+8) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+16) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+24) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+40) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+48) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+224) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+56) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+72) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+80) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+88) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+232) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+104) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+112) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+120) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+136) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+144) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+240) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+152) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+160) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+168) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+176) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+184) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+192) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+248) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+200) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+208) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+216) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+224) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+232) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+240) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+256) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+248) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+256) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+264) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+272) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+280) ), _MM_HINT_T0);

cl_full_00_RE = _mm512_mask_load_pd(cl_full_00_RE, 0xFF, (*clBase).block1[0][0][0]);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+264) ), _MM_HINT_T1);

cl_full_00_IM = _mm512_mask_load_pd(cl_full_00_IM, 0xFF, (*clBase).block1[0][0][1]);

cl_full_01_RE = _mm512_mask_load_pd(cl_full_01_RE, 0xFF, (*clBase).block1[0][1][0]);

cl_full_01_IM = _mm512_mask_load_pd(cl_full_01_IM, 0xFF, (*clBase).block1[0][1][1]);

cl_full_02_RE = _mm512_mask_load_pd(cl_full_02_RE, 0xFF, (*clBase).block1[0][2][0]);

cl_full_02_IM = _mm512_mask_load_pd(cl_full_02_IM, 0xFF, (*clBase).block1[0][2][1]);

cl_full_03_RE = _mm512_mask_load_pd(cl_full_03_RE, 0xFF, (*clBase).block1[0][3][0]);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+272) ), _MM_HINT_T1);

cl_full_03_IM = _mm512_mask_load_pd(cl_full_03_IM, 0xFF, (*clBase).block1[0][3][1]);

cl_full_04_RE = _mm512_mask_load_pd(cl_full_04_RE, 0xFF, (*clBase).block1[0][4][0]);

cl_full_04_IM = _mm512_mask_load_pd(cl_full_04_IM, 0xFF, (*clBase).block1[0][4][1]);

cl_full_05_RE = _mm512_mask_load_pd(cl_full_05_RE, 0xFF, (*clBase).block1[0][5][0]);

cl_full_05_IM = _mm512_mask_load_pd(cl_full_05_IM, 0xFF, (*clBase).block1[0][5][1]);

cl_full_10_RE = _mm512_mask_load_pd(cl_full_10_RE, 0xFF, (*clBase).block1[1][0][0]);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+280) ), _MM_HINT_T1);

cl_full_10_IM = _mm512_mask_load_pd(cl_full_10_IM, 0xFF, (*clBase).block1[1][0][1]);

cl_full_11_RE = _mm512_mask_load_pd(cl_full_11_RE, 0xFF, (*clBase).block1[1][1][0]);

cl_full_11_IM = _mm512_mask_load_pd(cl_full_11_IM, 0xFF, (*clBase).block1[1][1][1]);

cl_full_12_RE = _mm512_mask_load_pd(cl_full_12_RE, 0xFF, (*clBase).block1[1][2][0]);

cl_full_12_IM = _mm512_mask_load_pd(cl_full_12_IM, 0xFF, (*clBase).block1[1][2][1]);

cl_full_13_RE = _mm512_mask_load_pd(cl_full_13_RE, 0xFF, (*clBase).block1[1][3][0]);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+288) ), _MM_HINT_T1);

cl_full_13_IM = _mm512_mask_load_pd(cl_full_13_IM, 0xFF, (*clBase).block1[1][3][1]);

cl_full_14_RE = _mm512_mask_load_pd(cl_full_14_RE, 0xFF, (*clBase).block1[1][4][0]);

cl_full_14_IM = _mm512_mask_load_pd(cl_full_14_IM, 0xFF, (*clBase).block1[1][4][1]);

cl_full_15_RE = _mm512_mask_load_pd(cl_full_15_RE, 0xFF, (*clBase).block1[1][5][0]);

cl_full_15_IM = _mm512_mask_load_pd(cl_full_15_IM, 0xFF, (*clBase).block1[1][5][1]);

cl_full_20_RE = _mm512_mask_load_pd(cl_full_20_RE, 0xFF, (*clBase).block1[2][0][0]);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+296) ), _MM_HINT_T1);

cl_full_20_IM = _mm512_mask_load_pd(cl_full_20_IM, 0xFF, (*clBase).block1[2][0][1]);

cl_full_21_RE = _mm512_mask_load_pd(cl_full_21_RE, 0xFF, (*clBase).block1[2][1][0]);

cl_full_21_IM = _mm512_mask_load_pd(cl_full_21_IM, 0xFF, (*clBase).block1[2][1][1]);

cl_full_22_RE = _mm512_mask_load_pd(cl_full_22_RE, 0xFF, (*clBase).block1[2][2][0]);

cl_full_22_IM = _mm512_mask_load_pd(cl_full_22_IM, 0xFF, (*clBase).block1[2][2][1]);

cl_full_23_RE = _mm512_mask_load_pd(cl_full_23_RE, 0xFF, (*clBase).block1[2][3][0]);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+304) ), _MM_HINT_T1);

cl_full_23_IM = _mm512_mask_load_pd(cl_full_23_IM, 0xFF, (*clBase).block1[2][3][1]);

cl_full_24_RE = _mm512_mask_load_pd(cl_full_24_RE, 0xFF, (*clBase).block1[2][4][0]);

cl_full_24_IM = _mm512_mask_load_pd(cl_full_24_IM, 0xFF, (*clBase).block1[2][4][1]);

cl_full_25_RE = _mm512_mask_load_pd(cl_full_25_RE, 0xFF, (*clBase).block1[2][5][0]);

cl_full_25_IM = _mm512_mask_load_pd(cl_full_25_IM, 0xFF, (*clBase).block1[2][5][1]);

cl_full_30_RE = _mm512_mask_load_pd(cl_full_30_RE, 0xFF, (*clBase).block1[3][0][0]);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+312) ), _MM_HINT_T1);

cl_full_30_IM = _mm512_mask_load_pd(cl_full_30_IM, 0xFF, (*clBase).block1[3][0][1]);

cl_full_31_RE = _mm512_mask_load_pd(cl_full_31_RE, 0xFF, (*clBase).block1[3][1][0]);

cl_full_31_IM = _mm512_mask_load_pd(cl_full_31_IM, 0xFF, (*clBase).block1[3][1][1]);

cl_full_32_RE = _mm512_mask_load_pd(cl_full_32_RE, 0xFF, (*clBase).block1[3][2][0]);

cl_full_32_IM = _mm512_mask_load_pd(cl_full_32_IM, 0xFF, (*clBase).block1[3][2][1]);

cl_full_33_RE = _mm512_mask_load_pd(cl_full_33_RE, 0xFF, (*clBase).block1[3][3][0]);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+320) ), _MM_HINT_T1);

cl_full_33_IM = _mm512_mask_load_pd(cl_full_33_IM, 0xFF, (*clBase).block1[3][3][1]);

cl_full_34_RE = _mm512_mask_load_pd(cl_full_34_RE, 0xFF, (*clBase).block1[3][4][0]);

cl_full_34_IM = _mm512_mask_load_pd(cl_full_34_IM, 0xFF, (*clBase).block1[3][4][1]);

cl_full_35_RE = _mm512_mask_load_pd(cl_full_35_RE, 0xFF, (*clBase).block1[3][5][0]);

cl_full_35_IM = _mm512_mask_load_pd(cl_full_35_IM, 0xFF, (*clBase).block1[3][5][1]);

cl_full_40_RE = _mm512_mask_load_pd(cl_full_40_RE, 0xFF, (*clBase).block1[4][0][0]);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+328) ), _MM_HINT_T1);

cl_full_40_IM = _mm512_mask_load_pd(cl_full_40_IM, 0xFF, (*clBase).block1[4][0][1]);

cl_full_41_RE = _mm512_mask_load_pd(cl_full_41_RE, 0xFF, (*clBase).block1[4][1][0]);

cl_full_41_IM = _mm512_mask_load_pd(cl_full_41_IM, 0xFF, (*clBase).block1[4][1][1]);

cl_full_42_RE = _mm512_mask_load_pd(cl_full_42_RE, 0xFF, (*clBase).block1[4][2][0]);

cl_full_42_IM = _mm512_mask_load_pd(cl_full_42_IM, 0xFF, (*clBase).block1[4][2][1]);

cl_full_43_RE = _mm512_mask_load_pd(cl_full_43_RE, 0xFF, (*clBase).block1[4][3][0]);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+336) ), _MM_HINT_T1);

cl_full_43_IM = _mm512_mask_load_pd(cl_full_43_IM, 0xFF, (*clBase).block1[4][3][1]);

cl_full_44_RE = _mm512_mask_load_pd(cl_full_44_RE, 0xFF, (*clBase).block1[4][4][0]);

cl_full_44_IM = _mm512_mask_load_pd(cl_full_44_IM, 0xFF, (*clBase).block1[4][4][1]);

cl_full_45_RE = _mm512_mask_load_pd(cl_full_45_RE, 0xFF, (*clBase).block1[4][5][0]);

cl_full_45_IM = _mm512_mask_load_pd(cl_full_45_IM, 0xFF, (*clBase).block1[4][5][1]);

cl_full_50_RE = _mm512_mask_load_pd(cl_full_50_RE, 0xFF, (*clBase).block1[5][0][0]);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+344) ), _MM_HINT_T1);

cl_full_50_IM = _mm512_mask_load_pd(cl_full_50_IM, 0xFF, (*clBase).block1[5][0][1]);

cl_full_51_RE = _mm512_mask_load_pd(cl_full_51_RE, 0xFF, (*clBase).block1[5][1][0]);

cl_full_51_IM = _mm512_mask_load_pd(cl_full_51_IM, 0xFF, (*clBase).block1[5][1][1]);

cl_full_52_RE = _mm512_mask_load_pd(cl_full_52_RE, 0xFF, (*clBase).block1[5][2][0]);

cl_full_52_IM = _mm512_mask_load_pd(cl_full_52_IM, 0xFF, (*clBase).block1[5][2][1]);

cl_full_53_RE = _mm512_mask_load_pd(cl_full_53_RE, 0xFF, (*clBase).block1[5][3][0]);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+352) ), _MM_HINT_T1);

cl_full_53_IM = _mm512_mask_load_pd(cl_full_53_IM, 0xFF, (*clBase).block1[5][3][1]);

cl_full_54_RE = _mm512_mask_load_pd(cl_full_54_RE, 0xFF, (*clBase).block1[5][4][0]);

cl_full_54_IM = _mm512_mask_load_pd(cl_full_54_IM, 0xFF, (*clBase).block1[5][4][1]);

cl_full_55_RE = _mm512_mask_load_pd(cl_full_55_RE, 0xFF, (*clBase).block1[5][5][0]);

cl_full_55_IM = _mm512_mask_load_pd(cl_full_55_IM, 0xFF, (*clBase).block1[5][5][1]);

out_S0_C0_RE = _mm512_fmadd_pd(cl_full_00_RE, dout_S0_C0_RE, out_S0_C0_RE);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+360) ), _MM_HINT_T1);

out_S0_C0_RE = _mm512_fnmadd_pd(cl_full_00_IM, dout_S0_C0_IM, out_S0_C0_RE);
out_S0_C0_IM = _mm512_fmadd_pd(cl_full_00_RE, dout_S0_C0_IM, out_S0_C0_IM);
out_S0_C0_IM = _mm512_fmadd_pd(cl_full_00_IM, dout_S0_C0_RE, out_S0_C0_IM);
out_S0_C0_RE = _mm512_fmadd_pd(cl_full_01_RE, dout_S0_C1_RE, out_S0_C0_RE);
out_S0_C0_RE = _mm512_fnmadd_pd(cl_full_01_IM, dout_S0_C1_IM, out_S0_C0_RE);
out_S0_C0_IM = _mm512_fmadd_pd(cl_full_01_RE, dout_S0_C1_IM, out_S0_C0_IM);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+368) ), _MM_HINT_T1);

out_S0_C0_IM = _mm512_fmadd_pd(cl_full_01_IM, dout_S0_C1_RE, out_S0_C0_IM);
out_S0_C0_RE = _mm512_fmadd_pd(cl_full_02_RE, dout_S0_C2_RE, out_S0_C0_RE);
out_S0_C0_RE = _mm512_fnmadd_pd(cl_full_02_IM, dout_S0_C2_IM, out_S0_C0_RE);
out_S0_C0_IM = _mm512_fmadd_pd(cl_full_02_RE, dout_S0_C2_IM, out_S0_C0_IM);
out_S0_C0_IM = _mm512_fmadd_pd(cl_full_02_IM, dout_S0_C2_RE, out_S0_C0_IM);
out_S0_C0_RE = _mm512_fmadd_pd(cl_full_03_RE, dout_S1_C0_RE, out_S0_C0_RE);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+376) ), _MM_HINT_T1);

out_S0_C0_RE = _mm512_fnmadd_pd(cl_full_03_IM, dout_S1_C0_IM, out_S0_C0_RE);
out_S0_C0_IM = _mm512_fmadd_pd(cl_full_03_RE, dout_S1_C0_IM, out_S0_C0_IM);
out_S0_C0_IM = _mm512_fmadd_pd(cl_full_03_IM, dout_S1_C0_RE, out_S0_C0_IM);
out_S0_C0_RE = _mm512_fmadd_pd(cl_full_04_RE, dout_S1_C1_RE, out_S0_C0_RE);
out_S0_C0_RE = _mm512_fnmadd_pd(cl_full_04_IM, dout_S1_C1_IM, out_S0_C0_RE);
out_S0_C0_IM = _mm512_fmadd_pd(cl_full_04_RE, dout_S1_C1_IM, out_S0_C0_IM);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+384) ), _MM_HINT_T1);

out_S0_C0_IM = _mm512_fmadd_pd(cl_full_04_IM, dout_S1_C1_RE, out_S0_C0_IM);
out_S0_C0_RE = _mm512_fmadd_pd(cl_full_05_RE, dout_S1_C2_RE, out_S0_C0_RE);
out_S0_C0_RE = _mm512_fnmadd_pd(cl_full_05_IM, dout_S1_C2_IM, out_S0_C0_RE);
out_S0_C0_IM = _mm512_fmadd_pd(cl_full_05_RE, dout_S1_C2_IM, out_S0_C0_IM);
out_S0_C0_IM = _mm512_fmadd_pd(cl_full_05_IM, dout_S1_C2_RE, out_S0_C0_IM);
out_S0_C1_RE = _mm512_fmadd_pd(cl_full_10_RE, dout_S0_C0_RE, out_S0_C1_RE);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+392) ), _MM_HINT_T1);

out_S0_C1_RE = _mm512_fnmadd_pd(cl_full_10_IM, dout_S0_C0_IM, out_S0_C1_RE);
out_S0_C1_IM = _mm512_fmadd_pd(cl_full_10_RE, dout_S0_C0_IM, out_S0_C1_IM);
out_S0_C1_IM = _mm512_fmadd_pd(cl_full_10_IM, dout_S0_C0_RE, out_S0_C1_IM);
out_S0_C1_RE = _mm512_fmadd_pd(cl_full_11_RE, dout_S0_C1_RE, out_S0_C1_RE);
out_S0_C1_RE = _mm512_fnmadd_pd(cl_full_11_IM, dout_S0_C1_IM, out_S0_C1_RE);
out_S0_C1_IM = _mm512_fmadd_pd(cl_full_11_RE, dout_S0_C1_IM, out_S0_C1_IM);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+400) ), _MM_HINT_T1);

out_S0_C1_IM = _mm512_fmadd_pd(cl_full_11_IM, dout_S0_C1_RE, out_S0_C1_IM);
out_S0_C1_RE = _mm512_fmadd_pd(cl_full_12_RE, dout_S0_C2_RE, out_S0_C1_RE);
out_S0_C1_RE = _mm512_fnmadd_pd(cl_full_12_IM, dout_S0_C2_IM, out_S0_C1_RE);
out_S0_C1_IM = _mm512_fmadd_pd(cl_full_12_RE, dout_S0_C2_IM, out_S0_C1_IM);
out_S0_C1_IM = _mm512_fmadd_pd(cl_full_12_IM, dout_S0_C2_RE, out_S0_C1_IM);
out_S0_C1_RE = _mm512_fmadd_pd(cl_full_13_RE, dout_S1_C0_RE, out_S0_C1_RE);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+408) ), _MM_HINT_T1);

out_S0_C1_RE = _mm512_fnmadd_pd(cl_full_13_IM, dout_S1_C0_IM, out_S0_C1_RE);
out_S0_C1_IM = _mm512_fmadd_pd(cl_full_13_RE, dout_S1_C0_IM, out_S0_C1_IM);
out_S0_C1_IM = _mm512_fmadd_pd(cl_full_13_IM, dout_S1_C0_RE, out_S0_C1_IM);
out_S0_C1_RE = _mm512_fmadd_pd(cl_full_14_RE, dout_S1_C1_RE, out_S0_C1_RE);
out_S0_C1_RE = _mm512_fnmadd_pd(cl_full_14_IM, dout_S1_C1_IM, out_S0_C1_RE);
out_S0_C1_IM = _mm512_fmadd_pd(cl_full_14_RE, dout_S1_C1_IM, out_S0_C1_IM);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+416) ), _MM_HINT_T1);

out_S0_C1_IM = _mm512_fmadd_pd(cl_full_14_IM, dout_S1_C1_RE, out_S0_C1_IM);
out_S0_C1_RE = _mm512_fmadd_pd(cl_full_15_RE, dout_S1_C2_RE, out_S0_C1_RE);
out_S0_C1_RE = _mm512_fnmadd_pd(cl_full_15_IM, dout_S1_C2_IM, out_S0_C1_RE);
out_S0_C1_IM = _mm512_fmadd_pd(cl_full_15_RE, dout_S1_C2_IM, out_S0_C1_IM);
out_S0_C1_IM = _mm512_fmadd_pd(cl_full_15_IM, dout_S1_C2_RE, out_S0_C1_IM);
out_S0_C2_RE = _mm512_fmadd_pd(cl_full_20_RE, dout_S0_C0_RE, out_S0_C2_RE);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+424) ), _MM_HINT_T1);

out_S0_C2_RE = _mm512_fnmadd_pd(cl_full_20_IM, dout_S0_C0_IM, out_S0_C2_RE);
out_S0_C2_IM = _mm512_fmadd_pd(cl_full_20_RE, dout_S0_C0_IM, out_S0_C2_IM);
out_S0_C2_IM = _mm512_fmadd_pd(cl_full_20_IM, dout_S0_C0_RE, out_S0_C2_IM);
out_S0_C2_RE = _mm512_fmadd_pd(cl_full_21_RE, dout_S0_C1_RE, out_S0_C2_RE);
out_S0_C2_RE = _mm512_fnmadd_pd(cl_full_21_IM, dout_S0_C1_IM, out_S0_C2_RE);
out_S0_C2_IM = _mm512_fmadd_pd(cl_full_21_RE, dout_S0_C1_IM, out_S0_C2_IM);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+432) ), _MM_HINT_T1);

out_S0_C2_IM = _mm512_fmadd_pd(cl_full_21_IM, dout_S0_C1_RE, out_S0_C2_IM);
out_S0_C2_RE = _mm512_fmadd_pd(cl_full_22_RE, dout_S0_C2_RE, out_S0_C2_RE);
out_S0_C2_RE = _mm512_fnmadd_pd(cl_full_22_IM, dout_S0_C2_IM, out_S0_C2_RE);
out_S0_C2_IM = _mm512_fmadd_pd(cl_full_22_RE, dout_S0_C2_IM, out_S0_C2_IM);
out_S0_C2_IM = _mm512_fmadd_pd(cl_full_22_IM, dout_S0_C2_RE, out_S0_C2_IM);
out_S0_C2_RE = _mm512_fmadd_pd(cl_full_23_RE, dout_S1_C0_RE, out_S0_C2_RE);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+440) ), _MM_HINT_T1);

out_S0_C2_RE = _mm512_fnmadd_pd(cl_full_23_IM, dout_S1_C0_IM, out_S0_C2_RE);
out_S0_C2_IM = _mm512_fmadd_pd(cl_full_23_RE, dout_S1_C0_IM, out_S0_C2_IM);
out_S0_C2_IM = _mm512_fmadd_pd(cl_full_23_IM, dout_S1_C0_RE, out_S0_C2_IM);
out_S0_C2_RE = _mm512_fmadd_pd(cl_full_24_RE, dout_S1_C1_RE, out_S0_C2_RE);
out_S0_C2_RE = _mm512_fnmadd_pd(cl_full_24_IM, dout_S1_C1_IM, out_S0_C2_RE);
out_S0_C2_IM = _mm512_fmadd_pd(cl_full_24_RE, dout_S1_C1_IM, out_S0_C2_IM);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+448) ), _MM_HINT_T1);

out_S0_C2_IM = _mm512_fmadd_pd(cl_full_24_IM, dout_S1_C1_RE, out_S0_C2_IM);
out_S0_C2_RE = _mm512_fmadd_pd(cl_full_25_RE, dout_S1_C2_RE, out_S0_C2_RE);
out_S0_C2_RE = _mm512_fnmadd_pd(cl_full_25_IM, dout_S1_C2_IM, out_S0_C2_RE);
out_S0_C2_IM = _mm512_fmadd_pd(cl_full_25_RE, dout_S1_C2_IM, out_S0_C2_IM);
out_S0_C2_IM = _mm512_fmadd_pd(cl_full_25_IM, dout_S1_C2_RE, out_S0_C2_IM);
out_S1_C0_RE = _mm512_fmadd_pd(cl_full_30_RE, dout_S0_C0_RE, out_S1_C0_RE);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+456) ), _MM_HINT_T1);

out_S1_C0_RE = _mm512_fnmadd_pd(cl_full_30_IM, dout_S0_C0_IM, out_S1_C0_RE);
out_S1_C0_IM = _mm512_fmadd_pd(cl_full_30_RE, dout_S0_C0_IM, out_S1_C0_IM);
out_S1_C0_IM = _mm512_fmadd_pd(cl_full_30_IM, dout_S0_C0_RE, out_S1_C0_IM);
out_S1_C0_RE = _mm512_fmadd_pd(cl_full_31_RE, dout_S0_C1_RE, out_S1_C0_RE);
out_S1_C0_RE = _mm512_fnmadd_pd(cl_full_31_IM, dout_S0_C1_IM, out_S1_C0_RE);
out_S1_C0_IM = _mm512_fmadd_pd(cl_full_31_RE, dout_S0_C1_IM, out_S1_C0_IM);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+464) ), _MM_HINT_T1);

out_S1_C0_IM = _mm512_fmadd_pd(cl_full_31_IM, dout_S0_C1_RE, out_S1_C0_IM);
out_S1_C0_RE = _mm512_fmadd_pd(cl_full_32_RE, dout_S0_C2_RE, out_S1_C0_RE);
out_S1_C0_RE = _mm512_fnmadd_pd(cl_full_32_IM, dout_S0_C2_IM, out_S1_C0_RE);
out_S1_C0_IM = _mm512_fmadd_pd(cl_full_32_RE, dout_S0_C2_IM, out_S1_C0_IM);
out_S1_C0_IM = _mm512_fmadd_pd(cl_full_32_IM, dout_S0_C2_RE, out_S1_C0_IM);
out_S1_C0_RE = _mm512_fmadd_pd(cl_full_33_RE, dout_S1_C0_RE, out_S1_C0_RE);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+472) ), _MM_HINT_T1);

out_S1_C0_RE = _mm512_fnmadd_pd(cl_full_33_IM, dout_S1_C0_IM, out_S1_C0_RE);
out_S1_C0_IM = _mm512_fmadd_pd(cl_full_33_RE, dout_S1_C0_IM, out_S1_C0_IM);
out_S1_C0_IM = _mm512_fmadd_pd(cl_full_33_IM, dout_S1_C0_RE, out_S1_C0_IM);
out_S1_C0_RE = _mm512_fmadd_pd(cl_full_34_RE, dout_S1_C1_RE, out_S1_C0_RE);
out_S1_C0_RE = _mm512_fnmadd_pd(cl_full_34_IM, dout_S1_C1_IM, out_S1_C0_RE);
out_S1_C0_IM = _mm512_fmadd_pd(cl_full_34_RE, dout_S1_C1_IM, out_S1_C0_IM);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+480) ), _MM_HINT_T1);

out_S1_C0_IM = _mm512_fmadd_pd(cl_full_34_IM, dout_S1_C1_RE, out_S1_C0_IM);
out_S1_C0_RE = _mm512_fmadd_pd(cl_full_35_RE, dout_S1_C2_RE, out_S1_C0_RE);
out_S1_C0_RE = _mm512_fnmadd_pd(cl_full_35_IM, dout_S1_C2_IM, out_S1_C0_RE);
out_S1_C0_IM = _mm512_fmadd_pd(cl_full_35_RE, dout_S1_C2_IM, out_S1_C0_IM);
out_S1_C0_IM = _mm512_fmadd_pd(cl_full_35_IM, dout_S1_C2_RE, out_S1_C0_IM);
out_S1_C1_RE = _mm512_fmadd_pd(cl_full_40_RE, dout_S0_C0_RE, out_S1_C1_RE);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+488) ), _MM_HINT_T1);

out_S1_C1_RE = _mm512_fnmadd_pd(cl_full_40_IM, dout_S0_C0_IM, out_S1_C1_RE);
out_S1_C1_IM = _mm512_fmadd_pd(cl_full_40_RE, dout_S0_C0_IM, out_S1_C1_IM);
out_S1_C1_IM = _mm512_fmadd_pd(cl_full_40_IM, dout_S0_C0_RE, out_S1_C1_IM);
out_S1_C1_RE = _mm512_fmadd_pd(cl_full_41_RE, dout_S0_C1_RE, out_S1_C1_RE);
out_S1_C1_RE = _mm512_fnmadd_pd(cl_full_41_IM, dout_S0_C1_IM, out_S1_C1_RE);
out_S1_C1_IM = _mm512_fmadd_pd(cl_full_41_RE, dout_S0_C1_IM, out_S1_C1_IM);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+496) ), _MM_HINT_T1);

out_S1_C1_IM = _mm512_fmadd_pd(cl_full_41_IM, dout_S0_C1_RE, out_S1_C1_IM);
out_S1_C1_RE = _mm512_fmadd_pd(cl_full_42_RE, dout_S0_C2_RE, out_S1_C1_RE);
out_S1_C1_RE = _mm512_fnmadd_pd(cl_full_42_IM, dout_S0_C2_IM, out_S1_C1_RE);
out_S1_C1_IM = _mm512_fmadd_pd(cl_full_42_RE, dout_S0_C2_IM, out_S1_C1_IM);
out_S1_C1_IM = _mm512_fmadd_pd(cl_full_42_IM, dout_S0_C2_RE, out_S1_C1_IM);
out_S1_C1_RE = _mm512_fmadd_pd(cl_full_43_RE, dout_S1_C0_RE, out_S1_C1_RE);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+504) ), _MM_HINT_T1);

out_S1_C1_RE = _mm512_fnmadd_pd(cl_full_43_IM, dout_S1_C0_IM, out_S1_C1_RE);
out_S1_C1_IM = _mm512_fmadd_pd(cl_full_43_RE, dout_S1_C0_IM, out_S1_C1_IM);
out_S1_C1_IM = _mm512_fmadd_pd(cl_full_43_IM, dout_S1_C0_RE, out_S1_C1_IM);
out_S1_C1_RE = _mm512_fmadd_pd(cl_full_44_RE, dout_S1_C1_RE, out_S1_C1_RE);
out_S1_C1_RE = _mm512_fnmadd_pd(cl_full_44_IM, dout_S1_C1_IM, out_S1_C1_RE);
out_S1_C1_IM = _mm512_fmadd_pd(cl_full_44_RE, dout_S1_C1_IM, out_S1_C1_IM);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+512) ), _MM_HINT_T1);

out_S1_C1_IM = _mm512_fmadd_pd(cl_full_44_IM, dout_S1_C1_RE, out_S1_C1_IM);
out_S1_C1_RE = _mm512_fmadd_pd(cl_full_45_RE, dout_S1_C2_RE, out_S1_C1_RE);
out_S1_C1_RE = _mm512_fnmadd_pd(cl_full_45_IM, dout_S1_C2_IM, out_S1_C1_RE);
out_S1_C1_IM = _mm512_fmadd_pd(cl_full_45_RE, dout_S1_C2_IM, out_S1_C1_IM);
out_S1_C1_IM = _mm512_fmadd_pd(cl_full_45_IM, dout_S1_C2_RE, out_S1_C1_IM);
out_S1_C2_RE = _mm512_fmadd_pd(cl_full_50_RE, dout_S0_C0_RE, out_S1_C2_RE);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+520) ), _MM_HINT_T1);

out_S1_C2_RE = _mm512_fnmadd_pd(cl_full_50_IM, dout_S0_C0_IM, out_S1_C2_RE);
out_S1_C2_IM = _mm512_fmadd_pd(cl_full_50_RE, dout_S0_C0_IM, out_S1_C2_IM);
out_S1_C2_IM = _mm512_fmadd_pd(cl_full_50_IM, dout_S0_C0_RE, out_S1_C2_IM);
out_S1_C2_RE = _mm512_fmadd_pd(cl_full_51_RE, dout_S0_C1_RE, out_S1_C2_RE);
out_S1_C2_RE = _mm512_fnmadd_pd(cl_full_51_IM, dout_S0_C1_IM, out_S1_C2_RE);
out_S1_C2_IM = _mm512_fmadd_pd(cl_full_51_RE, dout_S0_C1_IM, out_S1_C2_IM);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+528) ), _MM_HINT_T1);

out_S1_C2_IM = _mm512_fmadd_pd(cl_full_51_IM, dout_S0_C1_RE, out_S1_C2_IM);
out_S1_C2_RE = _mm512_fmadd_pd(cl_full_52_RE, dout_S0_C2_RE, out_S1_C2_RE);
out_S1_C2_RE = _mm512_fnmadd_pd(cl_full_52_IM, dout_S0_C2_IM, out_S1_C2_RE);
out_S1_C2_IM = _mm512_fmadd_pd(cl_full_52_RE, dout_S0_C2_IM, out_S1_C2_IM);
out_S1_C2_IM = _mm512_fmadd_pd(cl_full_52_IM, dout_S0_C2_RE, out_S1_C2_IM);
out_S1_C2_RE = _mm512_fmadd_pd(cl_full_53_RE, dout_S1_C0_RE, out_S1_C2_RE);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+536) ), _MM_HINT_T1);

out_S1_C2_RE = _mm512_fnmadd_pd(cl_full_53_IM, dout_S1_C0_IM, out_S1_C2_RE);
out_S1_C2_IM = _mm512_fmadd_pd(cl_full_53_RE, dout_S1_C0_IM, out_S1_C2_IM);
out_S1_C2_IM = _mm512_fmadd_pd(cl_full_53_IM, dout_S1_C0_RE, out_S1_C2_IM);
out_S1_C2_RE = _mm512_fmadd_pd(cl_full_54_RE, dout_S1_C1_RE, out_S1_C2_RE);
out_S1_C2_RE = _mm512_fnmadd_pd(cl_full_54_IM, dout_S1_C1_IM, out_S1_C2_RE);
out_S1_C2_IM = _mm512_fmadd_pd(cl_full_54_RE, dout_S1_C1_IM, out_S1_C2_IM);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+544) ), _MM_HINT_T1);

out_S1_C2_IM = _mm512_fmadd_pd(cl_full_54_IM, dout_S1_C1_RE, out_S1_C2_IM);
out_S1_C2_RE = _mm512_fmadd_pd(cl_full_55_RE, dout_S1_C2_RE, out_S1_C2_RE);
out_S1_C2_RE = _mm512_fnmadd_pd(cl_full_55_IM, dout_S1_C2_IM, out_S1_C2_RE);
out_S1_C2_IM = _mm512_fmadd_pd(cl_full_55_RE, dout_S1_C2_IM, out_S1_C2_IM);
out_S1_C2_IM = _mm512_fmadd_pd(cl_full_55_IM, dout_S1_C2_RE, out_S1_C2_IM);
 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+552) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+8) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+16) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+24) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+40) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+48) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+560) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+56) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+72) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+80) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+88) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+568) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+104) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+112) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+120) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+136) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+144) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+0) + offs[0]) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+152) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+160) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+168) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+176) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+184) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+192) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+8) + offs[0]) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+200) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+208) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+216) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+224) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+232) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+240) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+16) + offs[0]) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+248) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+256) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+264) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+272) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+280) ), _MM_HINT_T0);

cl_full_00_RE = _mm512_mask_load_pd(cl_full_00_RE, 0xFF, (*clBase).block2[0][0][0]);

 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+24) + offs[0]) ), _MM_HINT_T1);

cl_full_00_IM = _mm512_mask_load_pd(cl_full_00_IM, 0xFF, (*clBase).block2[0][0][1]);

cl_full_01_RE = _mm512_mask_load_pd(cl_full_01_RE, 0xFF, (*clBase).block2[0][1][0]);

cl_full_01_IM = _mm512_mask_load_pd(cl_full_01_IM, 0xFF, (*clBase).block2[0][1][1]);

cl_full_02_RE = _mm512_mask_load_pd(cl_full_02_RE, 0xFF, (*clBase).block2[0][2][0]);

cl_full_02_IM = _mm512_mask_load_pd(cl_full_02_IM, 0xFF, (*clBase).block2[0][2][1]);

cl_full_03_RE = _mm512_mask_load_pd(cl_full_03_RE, 0xFF, (*clBase).block2[0][3][0]);

 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+32) + offs[0]) ), _MM_HINT_T1);

cl_full_03_IM = _mm512_mask_load_pd(cl_full_03_IM, 0xFF, (*clBase).block2[0][3][1]);

cl_full_04_RE = _mm512_mask_load_pd(cl_full_04_RE, 0xFF, (*clBase).block2[0][4][0]);

cl_full_04_IM = _mm512_mask_load_pd(cl_full_04_IM, 0xFF, (*clBase).block2[0][4][1]);

cl_full_05_RE = _mm512_mask_load_pd(cl_full_05_RE, 0xFF, (*clBase).block2[0][5][0]);

cl_full_05_IM = _mm512_mask_load_pd(cl_full_05_IM, 0xFF, (*clBase).block2[0][5][1]);

cl_full_10_RE = _mm512_mask_load_pd(cl_full_10_RE, 0xFF, (*clBase).block2[1][0][0]);

 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+40) + offs[0]) ), _MM_HINT_T1);

cl_full_10_IM = _mm512_mask_load_pd(cl_full_10_IM, 0xFF, (*clBase).block2[1][0][1]);

cl_full_11_RE = _mm512_mask_load_pd(cl_full_11_RE, 0xFF, (*clBase).block2[1][1][0]);

cl_full_11_IM = _mm512_mask_load_pd(cl_full_11_IM, 0xFF, (*clBase).block2[1][1][1]);

cl_full_12_RE = _mm512_mask_load_pd(cl_full_12_RE, 0xFF, (*clBase).block2[1][2][0]);

cl_full_12_IM = _mm512_mask_load_pd(cl_full_12_IM, 0xFF, (*clBase).block2[1][2][1]);

cl_full_13_RE = _mm512_mask_load_pd(cl_full_13_RE, 0xFF, (*clBase).block2[1][3][0]);

 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+48) + offs[0]) ), _MM_HINT_T1);

cl_full_13_IM = _mm512_mask_load_pd(cl_full_13_IM, 0xFF, (*clBase).block2[1][3][1]);

cl_full_14_RE = _mm512_mask_load_pd(cl_full_14_RE, 0xFF, (*clBase).block2[1][4][0]);

cl_full_14_IM = _mm512_mask_load_pd(cl_full_14_IM, 0xFF, (*clBase).block2[1][4][1]);

cl_full_15_RE = _mm512_mask_load_pd(cl_full_15_RE, 0xFF, (*clBase).block2[1][5][0]);

cl_full_15_IM = _mm512_mask_load_pd(cl_full_15_IM, 0xFF, (*clBase).block2[1][5][1]);

cl_full_20_RE = _mm512_mask_load_pd(cl_full_20_RE, 0xFF, (*clBase).block2[2][0][0]);

 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+56) + offs[0]) ), _MM_HINT_T1);

cl_full_20_IM = _mm512_mask_load_pd(cl_full_20_IM, 0xFF, (*clBase).block2[2][0][1]);

cl_full_21_RE = _mm512_mask_load_pd(cl_full_21_RE, 0xFF, (*clBase).block2[2][1][0]);

cl_full_21_IM = _mm512_mask_load_pd(cl_full_21_IM, 0xFF, (*clBase).block2[2][1][1]);

cl_full_22_RE = _mm512_mask_load_pd(cl_full_22_RE, 0xFF, (*clBase).block2[2][2][0]);

cl_full_22_IM = _mm512_mask_load_pd(cl_full_22_IM, 0xFF, (*clBase).block2[2][2][1]);

cl_full_23_RE = _mm512_mask_load_pd(cl_full_23_RE, 0xFF, (*clBase).block2[2][3][0]);

 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+64) + offs[0]) ), _MM_HINT_T1);

cl_full_23_IM = _mm512_mask_load_pd(cl_full_23_IM, 0xFF, (*clBase).block2[2][3][1]);

cl_full_24_RE = _mm512_mask_load_pd(cl_full_24_RE, 0xFF, (*clBase).block2[2][4][0]);

cl_full_24_IM = _mm512_mask_load_pd(cl_full_24_IM, 0xFF, (*clBase).block2[2][4][1]);

cl_full_25_RE = _mm512_mask_load_pd(cl_full_25_RE, 0xFF, (*clBase).block2[2][5][0]);

cl_full_25_IM = _mm512_mask_load_pd(cl_full_25_IM, 0xFF, (*clBase).block2[2][5][1]);

cl_full_30_RE = _mm512_mask_load_pd(cl_full_30_RE, 0xFF, (*clBase).block2[3][0][0]);

 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+72) + offs[0]) ), _MM_HINT_T1);

cl_full_30_IM = _mm512_mask_load_pd(cl_full_30_IM, 0xFF, (*clBase).block2[3][0][1]);

cl_full_31_RE = _mm512_mask_load_pd(cl_full_31_RE, 0xFF, (*clBase).block2[3][1][0]);

cl_full_31_IM = _mm512_mask_load_pd(cl_full_31_IM, 0xFF, (*clBase).block2[3][1][1]);

cl_full_32_RE = _mm512_mask_load_pd(cl_full_32_RE, 0xFF, (*clBase).block2[3][2][0]);

cl_full_32_IM = _mm512_mask_load_pd(cl_full_32_IM, 0xFF, (*clBase).block2[3][2][1]);

cl_full_33_RE = _mm512_mask_load_pd(cl_full_33_RE, 0xFF, (*clBase).block2[3][3][0]);

 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+80) + offs[0]) ), _MM_HINT_T1);

cl_full_33_IM = _mm512_mask_load_pd(cl_full_33_IM, 0xFF, (*clBase).block2[3][3][1]);

cl_full_34_RE = _mm512_mask_load_pd(cl_full_34_RE, 0xFF, (*clBase).block2[3][4][0]);

cl_full_34_IM = _mm512_mask_load_pd(cl_full_34_IM, 0xFF, (*clBase).block2[3][4][1]);

cl_full_35_RE = _mm512_mask_load_pd(cl_full_35_RE, 0xFF, (*clBase).block2[3][5][0]);

cl_full_35_IM = _mm512_mask_load_pd(cl_full_35_IM, 0xFF, (*clBase).block2[3][5][1]);

cl_full_40_RE = _mm512_mask_load_pd(cl_full_40_RE, 0xFF, (*clBase).block2[4][0][0]);

 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+88) + offs[0]) ), _MM_HINT_T1);

cl_full_40_IM = _mm512_mask_load_pd(cl_full_40_IM, 0xFF, (*clBase).block2[4][0][1]);

cl_full_41_RE = _mm512_mask_load_pd(cl_full_41_RE, 0xFF, (*clBase).block2[4][1][0]);

cl_full_41_IM = _mm512_mask_load_pd(cl_full_41_IM, 0xFF, (*clBase).block2[4][1][1]);

cl_full_42_RE = _mm512_mask_load_pd(cl_full_42_RE, 0xFF, (*clBase).block2[4][2][0]);

cl_full_42_IM = _mm512_mask_load_pd(cl_full_42_IM, 0xFF, (*clBase).block2[4][2][1]);

cl_full_43_RE = _mm512_mask_load_pd(cl_full_43_RE, 0xFF, (*clBase).block2[4][3][0]);

 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+96) + offs[0]) ), _MM_HINT_T1);

cl_full_43_IM = _mm512_mask_load_pd(cl_full_43_IM, 0xFF, (*clBase).block2[4][3][1]);

cl_full_44_RE = _mm512_mask_load_pd(cl_full_44_RE, 0xFF, (*clBase).block2[4][4][0]);

cl_full_44_IM = _mm512_mask_load_pd(cl_full_44_IM, 0xFF, (*clBase).block2[4][4][1]);

cl_full_45_RE = _mm512_mask_load_pd(cl_full_45_RE, 0xFF, (*clBase).block2[4][5][0]);

cl_full_45_IM = _mm512_mask_load_pd(cl_full_45_IM, 0xFF, (*clBase).block2[4][5][1]);

cl_full_50_RE = _mm512_mask_load_pd(cl_full_50_RE, 0xFF, (*clBase).block2[5][0][0]);

 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+104) + offs[0]) ), _MM_HINT_T1);

cl_full_50_IM = _mm512_mask_load_pd(cl_full_50_IM, 0xFF, (*clBase).block2[5][0][1]);

cl_full_51_RE = _mm512_mask_load_pd(cl_full_51_RE, 0xFF, (*clBase).block2[5][1][0]);

cl_full_51_IM = _mm512_mask_load_pd(cl_full_51_IM, 0xFF, (*clBase).block2[5][1][1]);

cl_full_52_RE = _mm512_mask_load_pd(cl_full_52_RE, 0xFF, (*clBase).block2[5][2][0]);

cl_full_52_IM = _mm512_mask_load_pd(cl_full_52_IM, 0xFF, (*clBase).block2[5][2][1]);

cl_full_53_RE = _mm512_mask_load_pd(cl_full_53_RE, 0xFF, (*clBase).block2[5][3][0]);

 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+112) + offs[0]) ), _MM_HINT_T1);

cl_full_53_IM = _mm512_mask_load_pd(cl_full_53_IM, 0xFF, (*clBase).block2[5][3][1]);

cl_full_54_RE = _mm512_mask_load_pd(cl_full_54_RE, 0xFF, (*clBase).block2[5][4][0]);

cl_full_54_IM = _mm512_mask_load_pd(cl_full_54_IM, 0xFF, (*clBase).block2[5][4][1]);

cl_full_55_RE = _mm512_mask_load_pd(cl_full_55_RE, 0xFF, (*clBase).block2[5][5][0]);

cl_full_55_IM = _mm512_mask_load_pd(cl_full_55_IM, 0xFF, (*clBase).block2[5][5][1]);

out_S2_C0_RE = _mm512_fmadd_pd(cl_full_00_RE, dout_S2_C0_RE, out_S2_C0_RE);
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+120) + offs[0]) ), _MM_HINT_T1);

out_S2_C0_RE = _mm512_fnmadd_pd(cl_full_00_IM, dout_S2_C0_IM, out_S2_C0_RE);
out_S2_C0_IM = _mm512_fmadd_pd(cl_full_00_RE, dout_S2_C0_IM, out_S2_C0_IM);
out_S2_C0_IM = _mm512_fmadd_pd(cl_full_00_IM, dout_S2_C0_RE, out_S2_C0_IM);
out_S2_C0_RE = _mm512_fmadd_pd(cl_full_01_RE, dout_S2_C1_RE, out_S2_C0_RE);
out_S2_C0_RE = _mm512_fnmadd_pd(cl_full_01_IM, dout_S2_C1_IM, out_S2_C0_RE);
out_S2_C0_IM = _mm512_fmadd_pd(cl_full_01_RE, dout_S2_C1_IM, out_S2_C0_IM);
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+128) + offs[0]) ), _MM_HINT_T1);

out_S2_C0_IM = _mm512_fmadd_pd(cl_full_01_IM, dout_S2_C1_RE, out_S2_C0_IM);
out_S2_C0_RE = _mm512_fmadd_pd(cl_full_02_RE, dout_S2_C2_RE, out_S2_C0_RE);
out_S2_C0_RE = _mm512_fnmadd_pd(cl_full_02_IM, dout_S2_C2_IM, out_S2_C0_RE);
out_S2_C0_IM = _mm512_fmadd_pd(cl_full_02_RE, dout_S2_C2_IM, out_S2_C0_IM);
out_S2_C0_IM = _mm512_fmadd_pd(cl_full_02_IM, dout_S2_C2_RE, out_S2_C0_IM);
out_S2_C0_RE = _mm512_fmadd_pd(cl_full_03_RE, dout_S3_C0_RE, out_S2_C0_RE);
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+136) + offs[0]) ), _MM_HINT_T1);

out_S2_C0_RE = _mm512_fnmadd_pd(cl_full_03_IM, dout_S3_C0_IM, out_S2_C0_RE);
out_S2_C0_IM = _mm512_fmadd_pd(cl_full_03_RE, dout_S3_C0_IM, out_S2_C0_IM);
out_S2_C0_IM = _mm512_fmadd_pd(cl_full_03_IM, dout_S3_C0_RE, out_S2_C0_IM);
out_S2_C0_RE = _mm512_fmadd_pd(cl_full_04_RE, dout_S3_C1_RE, out_S2_C0_RE);
out_S2_C0_RE = _mm512_fnmadd_pd(cl_full_04_IM, dout_S3_C1_IM, out_S2_C0_RE);
out_S2_C0_IM = _mm512_fmadd_pd(cl_full_04_RE, dout_S3_C1_IM, out_S2_C0_IM);
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+144) + offs[0]) ), _MM_HINT_T1);

out_S2_C0_IM = _mm512_fmadd_pd(cl_full_04_IM, dout_S3_C1_RE, out_S2_C0_IM);
out_S2_C0_RE = _mm512_fmadd_pd(cl_full_05_RE, dout_S3_C2_RE, out_S2_C0_RE);
out_S2_C0_RE = _mm512_fnmadd_pd(cl_full_05_IM, dout_S3_C2_IM, out_S2_C0_RE);
out_S2_C0_IM = _mm512_fmadd_pd(cl_full_05_RE, dout_S3_C2_IM, out_S2_C0_IM);
out_S2_C0_IM = _mm512_fmadd_pd(cl_full_05_IM, dout_S3_C2_RE, out_S2_C0_IM);
out_S2_C1_RE = _mm512_fmadd_pd(cl_full_10_RE, dout_S2_C0_RE, out_S2_C1_RE);
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+152) + offs[0]) ), _MM_HINT_T1);

out_S2_C1_RE = _mm512_fnmadd_pd(cl_full_10_IM, dout_S2_C0_IM, out_S2_C1_RE);
out_S2_C1_IM = _mm512_fmadd_pd(cl_full_10_RE, dout_S2_C0_IM, out_S2_C1_IM);
out_S2_C1_IM = _mm512_fmadd_pd(cl_full_10_IM, dout_S2_C0_RE, out_S2_C1_IM);
out_S2_C1_RE = _mm512_fmadd_pd(cl_full_11_RE, dout_S2_C1_RE, out_S2_C1_RE);
out_S2_C1_RE = _mm512_fnmadd_pd(cl_full_11_IM, dout_S2_C1_IM, out_S2_C1_RE);
out_S2_C1_IM = _mm512_fmadd_pd(cl_full_11_RE, dout_S2_C1_IM, out_S2_C1_IM);
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+160) + offs[0]) ), _MM_HINT_T1);

out_S2_C1_IM = _mm512_fmadd_pd(cl_full_11_IM, dout_S2_C1_RE, out_S2_C1_IM);
out_S2_C1_RE = _mm512_fmadd_pd(cl_full_12_RE, dout_S2_C2_RE, out_S2_C1_RE);
out_S2_C1_RE = _mm512_fnmadd_pd(cl_full_12_IM, dout_S2_C2_IM, out_S2_C1_RE);
out_S2_C1_IM = _mm512_fmadd_pd(cl_full_12_RE, dout_S2_C2_IM, out_S2_C1_IM);
out_S2_C1_IM = _mm512_fmadd_pd(cl_full_12_IM, dout_S2_C2_RE, out_S2_C1_IM);
out_S2_C1_RE = _mm512_fmadd_pd(cl_full_13_RE, dout_S3_C0_RE, out_S2_C1_RE);
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+168) + offs[0]) ), _MM_HINT_T1);

out_S2_C1_RE = _mm512_fnmadd_pd(cl_full_13_IM, dout_S3_C0_IM, out_S2_C1_RE);
out_S2_C1_IM = _mm512_fmadd_pd(cl_full_13_RE, dout_S3_C0_IM, out_S2_C1_IM);
out_S2_C1_IM = _mm512_fmadd_pd(cl_full_13_IM, dout_S3_C0_RE, out_S2_C1_IM);
out_S2_C1_RE = _mm512_fmadd_pd(cl_full_14_RE, dout_S3_C1_RE, out_S2_C1_RE);
out_S2_C1_RE = _mm512_fnmadd_pd(cl_full_14_IM, dout_S3_C1_IM, out_S2_C1_RE);
out_S2_C1_IM = _mm512_fmadd_pd(cl_full_14_RE, dout_S3_C1_IM, out_S2_C1_IM);
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+176) + offs[0]) ), _MM_HINT_T1);

out_S2_C1_IM = _mm512_fmadd_pd(cl_full_14_IM, dout_S3_C1_RE, out_S2_C1_IM);
out_S2_C1_RE = _mm512_fmadd_pd(cl_full_15_RE, dout_S3_C2_RE, out_S2_C1_RE);
out_S2_C1_RE = _mm512_fnmadd_pd(cl_full_15_IM, dout_S3_C2_IM, out_S2_C1_RE);
out_S2_C1_IM = _mm512_fmadd_pd(cl_full_15_RE, dout_S3_C2_IM, out_S2_C1_IM);
out_S2_C1_IM = _mm512_fmadd_pd(cl_full_15_IM, dout_S3_C2_RE, out_S2_C1_IM);
out_S2_C2_RE = _mm512_fmadd_pd(cl_full_20_RE, dout_S2_C0_RE, out_S2_C2_RE);
 _mm_prefetch((const char *)( ((((*oBase)[0][0][0] + soprefdist)+184) + offs[0]) ), _MM_HINT_T1);

out_S2_C2_RE = _mm512_fnmadd_pd(cl_full_20_IM, dout_S2_C0_IM, out_S2_C2_RE);
out_S2_C2_IM = _mm512_fmadd_pd(cl_full_20_RE, dout_S2_C0_IM, out_S2_C2_IM);
out_S2_C2_IM = _mm512_fmadd_pd(cl_full_20_IM, dout_S2_C0_RE, out_S2_C2_IM);
out_S2_C2_RE = _mm512_fmadd_pd(cl_full_21_RE, dout_S2_C1_RE, out_S2_C2_RE);
out_S2_C2_RE = _mm512_fnmadd_pd(cl_full_21_IM, dout_S2_C1_IM, out_S2_C2_RE);
out_S2_C2_IM = _mm512_fmadd_pd(cl_full_21_RE, dout_S2_C1_IM, out_S2_C2_IM);
out_S2_C2_IM = _mm512_fmadd_pd(cl_full_21_IM, dout_S2_C1_RE, out_S2_C2_IM);
out_S2_C2_RE = _mm512_fmadd_pd(cl_full_22_RE, dout_S2_C2_RE, out_S2_C2_RE);
out_S2_C2_RE = _mm512_fnmadd_pd(cl_full_22_IM, dout_S2_C2_IM, out_S2_C2_RE);
out_S2_C2_IM = _mm512_fmadd_pd(cl_full_22_RE, dout_S2_C2_IM, out_S2_C2_IM);
out_S2_C2_IM = _mm512_fmadd_pd(cl_full_22_IM, dout_S2_C2_RE, out_S2_C2_IM);
out_S2_C2_RE = _mm512_fmadd_pd(cl_full_23_RE, dout_S3_C0_RE, out_S2_C2_RE);
out_S2_C2_RE = _mm512_fnmadd_pd(cl_full_23_IM, dout_S3_C0_IM, out_S2_C2_RE);
out_S2_C2_IM = _mm512_fmadd_pd(cl_full_23_RE, dout_S3_C0_IM, out_S2_C2_IM);
out_S2_C2_IM = _mm512_fmadd_pd(cl_full_23_IM, dout_S3_C0_RE, out_S2_C2_IM);
out_S2_C2_RE = _mm512_fmadd_pd(cl_full_24_RE, dout_S3_C1_RE, out_S2_C2_RE);
out_S2_C2_RE = _mm512_fnmadd_pd(cl_full_24_IM, dout_S3_C1_IM, out_S2_C2_RE);
out_S2_C2_IM = _mm512_fmadd_pd(cl_full_24_RE, dout_S3_C1_IM, out_S2_C2_IM);
out_S2_C2_IM = _mm512_fmadd_pd(cl_full_24_IM, dout_S3_C1_RE, out_S2_C2_IM);
out_S2_C2_RE = _mm512_fmadd_pd(cl_full_25_RE, dout_S3_C2_RE, out_S2_C2_RE);
out_S2_C2_RE = _mm512_fnmadd_pd(cl_full_25_IM, dout_S3_C2_IM, out_S2_C2_RE);
out_S2_C2_IM = _mm512_fmadd_pd(cl_full_25_RE, dout_S3_C2_IM, out_S2_C2_IM);
out_S2_C2_IM = _mm512_fmadd_pd(cl_full_25_IM, dout_S3_C2_RE, out_S2_C2_IM);
out_S3_C0_RE = _mm512_fmadd_pd(cl_full_30_RE, dout_S2_C0_RE, out_S3_C0_RE);
out_S3_C0_RE = _mm512_fnmadd_pd(cl_full_30_IM, dout_S2_C0_IM, out_S3_C0_RE);
out_S3_C0_IM = _mm512_fmadd_pd(cl_full_30_RE, dout_S2_C0_IM, out_S3_C0_IM);
out_S3_C0_IM = _mm512_fmadd_pd(cl_full_30_IM, dout_S2_C0_RE, out_S3_C0_IM);
out_S3_C0_RE = _mm512_fmadd_pd(cl_full_31_RE, dout_S2_C1_RE, out_S3_C0_RE);
out_S3_C0_RE = _mm512_fnmadd_pd(cl_full_31_IM, dout_S2_C1_IM, out_S3_C0_RE);
out_S3_C0_IM = _mm512_fmadd_pd(cl_full_31_RE, dout_S2_C1_IM, out_S3_C0_IM);
out_S3_C0_IM = _mm512_fmadd_pd(cl_full_31_IM, dout_S2_C1_RE, out_S3_C0_IM);
out_S3_C0_RE = _mm512_fmadd_pd(cl_full_32_RE, dout_S2_C2_RE, out_S3_C0_RE);
out_S3_C0_RE = _mm512_fnmadd_pd(cl_full_32_IM, dout_S2_C2_IM, out_S3_C0_RE);
out_S3_C0_IM = _mm512_fmadd_pd(cl_full_32_RE, dout_S2_C2_IM, out_S3_C0_IM);
out_S3_C0_IM = _mm512_fmadd_pd(cl_full_32_IM, dout_S2_C2_RE, out_S3_C0_IM);
out_S3_C0_RE = _mm512_fmadd_pd(cl_full_33_RE, dout_S3_C0_RE, out_S3_C0_RE);
out_S3_C0_RE = _mm512_fnmadd_pd(cl_full_33_IM, dout_S3_C0_IM, out_S3_C0_RE);
out_S3_C0_IM = _mm512_fmadd_pd(cl_full_33_RE, dout_S3_C0_IM, out_S3_C0_IM);
out_S3_C0_IM = _mm512_fmadd_pd(cl_full_33_IM, dout_S3_C0_RE, out_S3_C0_IM);
out_S3_C0_RE = _mm512_fmadd_pd(cl_full_34_RE, dout_S3_C1_RE, out_S3_C0_RE);
out_S3_C0_RE = _mm512_fnmadd_pd(cl_full_34_IM, dout_S3_C1_IM, out_S3_C0_RE);
out_S3_C0_IM = _mm512_fmadd_pd(cl_full_34_RE, dout_S3_C1_IM, out_S3_C0_IM);
out_S3_C0_IM = _mm512_fmadd_pd(cl_full_34_IM, dout_S3_C1_RE, out_S3_C0_IM);
out_S3_C0_RE = _mm512_fmadd_pd(cl_full_35_RE, dout_S3_C2_RE, out_S3_C0_RE);
out_S3_C0_RE = _mm512_fnmadd_pd(cl_full_35_IM, dout_S3_C2_IM, out_S3_C0_RE);
out_S3_C0_IM = _mm512_fmadd_pd(cl_full_35_RE, dout_S3_C2_IM, out_S3_C0_IM);
out_S3_C0_IM = _mm512_fmadd_pd(cl_full_35_IM, dout_S3_C2_RE, out_S3_C0_IM);
out_S3_C1_RE = _mm512_fmadd_pd(cl_full_40_RE, dout_S2_C0_RE, out_S3_C1_RE);
out_S3_C1_RE = _mm512_fnmadd_pd(cl_full_40_IM, dout_S2_C0_IM, out_S3_C1_RE);
out_S3_C1_IM = _mm512_fmadd_pd(cl_full_40_RE, dout_S2_C0_IM, out_S3_C1_IM);
out_S3_C1_IM = _mm512_fmadd_pd(cl_full_40_IM, dout_S2_C0_RE, out_S3_C1_IM);
out_S3_C1_RE = _mm512_fmadd_pd(cl_full_41_RE, dout_S2_C1_RE, out_S3_C1_RE);
out_S3_C1_RE = _mm512_fnmadd_pd(cl_full_41_IM, dout_S2_C1_IM, out_S3_C1_RE);
out_S3_C1_IM = _mm512_fmadd_pd(cl_full_41_RE, dout_S2_C1_IM, out_S3_C1_IM);
out_S3_C1_IM = _mm512_fmadd_pd(cl_full_41_IM, dout_S2_C1_RE, out_S3_C1_IM);
out_S3_C1_RE = _mm512_fmadd_pd(cl_full_42_RE, dout_S2_C2_RE, out_S3_C1_RE);
out_S3_C1_RE = _mm512_fnmadd_pd(cl_full_42_IM, dout_S2_C2_IM, out_S3_C1_RE);
out_S3_C1_IM = _mm512_fmadd_pd(cl_full_42_RE, dout_S2_C2_IM, out_S3_C1_IM);
out_S3_C1_IM = _mm512_fmadd_pd(cl_full_42_IM, dout_S2_C2_RE, out_S3_C1_IM);
out_S3_C1_RE = _mm512_fmadd_pd(cl_full_43_RE, dout_S3_C0_RE, out_S3_C1_RE);
out_S3_C1_RE = _mm512_fnmadd_pd(cl_full_43_IM, dout_S3_C0_IM, out_S3_C1_RE);
out_S3_C1_IM = _mm512_fmadd_pd(cl_full_43_RE, dout_S3_C0_IM, out_S3_C1_IM);
out_S3_C1_IM = _mm512_fmadd_pd(cl_full_43_IM, dout_S3_C0_RE, out_S3_C1_IM);
out_S3_C1_RE = _mm512_fmadd_pd(cl_full_44_RE, dout_S3_C1_RE, out_S3_C1_RE);
out_S3_C1_RE = _mm512_fnmadd_pd(cl_full_44_IM, dout_S3_C1_IM, out_S3_C1_RE);
out_S3_C1_IM = _mm512_fmadd_pd(cl_full_44_RE, dout_S3_C1_IM, out_S3_C1_IM);
out_S3_C1_IM = _mm512_fmadd_pd(cl_full_44_IM, dout_S3_C1_RE, out_S3_C1_IM);
out_S3_C1_RE = _mm512_fmadd_pd(cl_full_45_RE, dout_S3_C2_RE, out_S3_C1_RE);
out_S3_C1_RE = _mm512_fnmadd_pd(cl_full_45_IM, dout_S3_C2_IM, out_S3_C1_RE);
out_S3_C1_IM = _mm512_fmadd_pd(cl_full_45_RE, dout_S3_C2_IM, out_S3_C1_IM);
out_S3_C1_IM = _mm512_fmadd_pd(cl_full_45_IM, dout_S3_C2_RE, out_S3_C1_IM);
out_S3_C2_RE = _mm512_fmadd_pd(cl_full_50_RE, dout_S2_C0_RE, out_S3_C2_RE);
out_S3_C2_RE = _mm512_fnmadd_pd(cl_full_50_IM, dout_S2_C0_IM, out_S3_C2_RE);
out_S3_C2_IM = _mm512_fmadd_pd(cl_full_50_RE, dout_S2_C0_IM, out_S3_C2_IM);
out_S3_C2_IM = _mm512_fmadd_pd(cl_full_50_IM, dout_S2_C0_RE, out_S3_C2_IM);
out_S3_C2_RE = _mm512_fmadd_pd(cl_full_51_RE, dout_S2_C1_RE, out_S3_C2_RE);
out_S3_C2_RE = _mm512_fnmadd_pd(cl_full_51_IM, dout_S2_C1_IM, out_S3_C2_RE);
out_S3_C2_IM = _mm512_fmadd_pd(cl_full_51_RE, dout_S2_C1_IM, out_S3_C2_IM);
out_S3_C2_IM = _mm512_fmadd_pd(cl_full_51_IM, dout_S2_C1_RE, out_S3_C2_IM);
out_S3_C2_RE = _mm512_fmadd_pd(cl_full_52_RE, dout_S2_C2_RE, out_S3_C2_RE);
out_S3_C2_RE = _mm512_fnmadd_pd(cl_full_52_IM, dout_S2_C2_IM, out_S3_C2_RE);
out_S3_C2_IM = _mm512_fmadd_pd(cl_full_52_RE, dout_S2_C2_IM, out_S3_C2_IM);
out_S3_C2_IM = _mm512_fmadd_pd(cl_full_52_IM, dout_S2_C2_RE, out_S3_C2_IM);
out_S3_C2_RE = _mm512_fmadd_pd(cl_full_53_RE, dout_S3_C0_RE, out_S3_C2_RE);
out_S3_C2_RE = _mm512_fnmadd_pd(cl_full_53_IM, dout_S3_C0_IM, out_S3_C2_RE);
out_S3_C2_IM = _mm512_fmadd_pd(cl_full_53_RE, dout_S3_C0_IM, out_S3_C2_IM);
out_S3_C2_IM = _mm512_fmadd_pd(cl_full_53_IM, dout_S3_C0_RE, out_S3_C2_IM);
out_S3_C2_RE = _mm512_fmadd_pd(cl_full_54_RE, dout_S3_C1_RE, out_S3_C2_RE);
out_S3_C2_RE = _mm512_fnmadd_pd(cl_full_54_IM, dout_S3_C1_IM, out_S3_C2_RE);
out_S3_C2_IM = _mm512_fmadd_pd(cl_full_54_RE, dout_S3_C1_IM, out_S3_C2_IM);
out_S3_C2_IM = _mm512_fmadd_pd(cl_full_54_IM, dout_S3_C1_RE, out_S3_C2_IM);
out_S3_C2_RE = _mm512_fmadd_pd(cl_full_55_RE, dout_S3_C2_RE, out_S3_C2_RE);
out_S3_C2_RE = _mm512_fnmadd_pd(cl_full_55_IM, dout_S3_C2_IM, out_S3_C2_RE);
out_S3_C2_IM = _mm512_fmadd_pd(cl_full_55_RE, dout_S3_C2_IM, out_S3_C2_IM);
out_S3_C2_IM = _mm512_fmadd_pd(cl_full_55_IM, dout_S3_C2_RE, out_S3_C2_IM);
_mm512_mask_packstorelo_pd((void*)((*oBase)[0][0][0] + offs[0]), 0xff, out_S0_C0_RE);

_mm512_mask_packstorelo_pd((void*)((*oBase)[0][0][1] + offs[0]), 0xff, out_S0_C0_IM);

_mm512_mask_packstorelo_pd((void*)((*oBase)[1][0][0] + offs[0]), 0xff, out_S0_C1_RE);

_mm512_mask_packstorelo_pd((void*)((*oBase)[1][0][1] + offs[0]), 0xff, out_S0_C1_IM);

_mm512_mask_packstorelo_pd((void*)((*oBase)[2][0][0] + offs[0]), 0xff, out_S0_C2_RE);

_mm512_mask_packstorelo_pd((void*)((*oBase)[2][0][1] + offs[0]), 0xff, out_S0_C2_IM);

_mm512_mask_packstorelo_pd((void*)((*oBase)[0][1][0] + offs[0]), 0xff, out_S1_C0_RE);

_mm512_mask_packstorelo_pd((void*)((*oBase)[0][1][1] + offs[0]), 0xff, out_S1_C0_IM);

_mm512_mask_packstorelo_pd((void*)((*oBase)[1][1][0] + offs[0]), 0xff, out_S1_C1_RE);

_mm512_mask_packstorelo_pd((void*)((*oBase)[1][1][1] + offs[0]), 0xff, out_S1_C1_IM);

_mm512_mask_packstorelo_pd((void*)((*oBase)[2][1][0] + offs[0]), 0xff, out_S1_C2_RE);

_mm512_mask_packstorelo_pd((void*)((*oBase)[2][1][1] + offs[0]), 0xff, out_S1_C2_IM);

_mm512_mask_packstorelo_pd((void*)((*oBase)[0][2][0] + offs[0]), 0xff, out_S2_C0_RE);

_mm512_mask_packstorelo_pd((void*)((*oBase)[0][2][1] + offs[0]), 0xff, out_S2_C0_IM);

_mm512_mask_packstorelo_pd((void*)((*oBase)[1][2][0] + offs[0]), 0xff, out_S2_C1_RE);

_mm512_mask_packstorelo_pd((void*)((*oBase)[1][2][1] + offs[0]), 0xff, out_S2_C1_IM);

_mm512_mask_packstorelo_pd((void*)((*oBase)[2][2][0] + offs[0]), 0xff, out_S2_C2_RE);

_mm512_mask_packstorelo_pd((void*)((*oBase)[2][2][1] + offs[0]), 0xff, out_S2_C2_IM);

_mm512_mask_packstorelo_pd((void*)((*oBase)[0][3][0] + offs[0]), 0xff, out_S3_C0_RE);

_mm512_mask_packstorelo_pd((void*)((*oBase)[0][3][1] + offs[0]), 0xff, out_S3_C0_IM);

_mm512_mask_packstorelo_pd((void*)((*oBase)[1][3][0] + offs[0]), 0xff, out_S3_C1_RE);

_mm512_mask_packstorelo_pd((void*)((*oBase)[1][3][1] + offs[0]), 0xff, out_S3_C1_IM);

_mm512_mask_packstorelo_pd((void*)((*oBase)[2][3][0] + offs[0]), 0xff, out_S3_C2_RE);

_mm512_mask_packstorelo_pd((void*)((*oBase)[2][3][1] + offs[0]), 0xff, out_S3_C2_IM);


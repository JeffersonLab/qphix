__m512 b_S0_C0_RE = _mm512_setzero_ps(); 
__m512 b_S0_C0_IM = _mm512_setzero_ps(); 
__m512 b_S0_C1_RE = _mm512_setzero_ps(); 
__m512 b_S0_C1_IM = _mm512_setzero_ps(); 
__m512 b_S0_C2_RE = _mm512_setzero_ps(); 
__m512 b_S0_C2_IM = _mm512_setzero_ps(); 
__m512 b_S1_C0_RE = _mm512_setzero_ps(); 
__m512 b_S1_C0_IM = _mm512_setzero_ps(); 
__m512 b_S1_C1_RE = _mm512_setzero_ps(); 
__m512 b_S1_C1_IM = _mm512_setzero_ps(); 
__m512 b_S1_C2_RE = _mm512_setzero_ps(); 
__m512 b_S1_C2_IM = _mm512_setzero_ps(); 
__m512 ub_S0_C0_RE = _mm512_setzero_ps(); 
__m512 ub_S0_C0_IM = _mm512_setzero_ps(); 
__m512 ub_S0_C1_RE = _mm512_setzero_ps(); 
__m512 ub_S0_C1_IM = _mm512_setzero_ps(); 
__m512 ub_S0_C2_RE = _mm512_setzero_ps(); 
__m512 ub_S0_C2_IM = _mm512_setzero_ps(); 
__m512 ub_S1_C0_RE = _mm512_setzero_ps(); 
__m512 ub_S1_C0_IM = _mm512_setzero_ps(); 
__m512 ub_S1_C1_RE = _mm512_setzero_ps(); 
__m512 ub_S1_C1_IM = _mm512_setzero_ps(); 
__m512 ub_S1_C2_RE = _mm512_setzero_ps(); 
__m512 ub_S1_C2_IM = _mm512_setzero_ps(); 
__m512 u_00_re = _mm512_setzero_ps(); 
__m512 u_00_im = _mm512_setzero_ps(); 
__m512 u_01_re = _mm512_setzero_ps(); 
__m512 u_01_im = _mm512_setzero_ps(); 
__m512 u_02_re = _mm512_setzero_ps(); 
__m512 u_02_im = _mm512_setzero_ps(); 
__m512 u_10_re = _mm512_setzero_ps(); 
__m512 u_10_im = _mm512_setzero_ps(); 
__m512 u_11_re = _mm512_setzero_ps(); 
__m512 u_11_im = _mm512_setzero_ps(); 
__m512 u_12_re = _mm512_setzero_ps(); 
__m512 u_12_im = _mm512_setzero_ps(); 
__m512 u_20_re = _mm512_setzero_ps(); 
__m512 u_20_im = _mm512_setzero_ps(); 
__m512 u_21_re = _mm512_setzero_ps(); 
__m512 u_21_im = _mm512_setzero_ps(); 
__m512 u_22_re = _mm512_setzero_ps(); 
__m512 u_22_im = _mm512_setzero_ps(); 
__m512 psi_S0_RE = _mm512_setzero_ps(); 
__m512 psi_S0_IM = _mm512_setzero_ps(); 
__m512 psi_S1_RE = _mm512_setzero_ps(); 
__m512 psi_S1_IM = _mm512_setzero_ps(); 
__m512 tmp_1_re = _mm512_setzero_ps(); 
__m512 tmp_1_im = _mm512_setzero_ps(); 
__m512 tmp_2_re = _mm512_setzero_ps(); 
__m512 tmp_2_im = _mm512_setzero_ps(); 
__m512 tmp_3_re = _mm512_setzero_ps(); 
__m512 tmp_3_im = _mm512_setzero_ps(); 
__m512 tmp_4_re = _mm512_setzero_ps(); 
__m512 tmp_4_im = _mm512_setzero_ps(); 
__m512 zero = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+0) + pfyOffs[0]) ), _MM_HINT_T1);

zero = _mm512_setzero_ps(); 
__m512 out_S0_C0_RE = _mm512_setzero_ps(); 
__m512 out_S0_C0_IM = _mm512_setzero_ps(); 
__m512 out_S0_C1_RE = _mm512_setzero_ps(); 
__m512 out_S0_C1_IM = _mm512_setzero_ps(); 
__m512 out_S0_C2_RE = _mm512_setzero_ps(); 
__m512 out_S0_C2_IM = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+16) + pfyOffs[0]) ), _MM_HINT_T1);

__m512 out_S1_C0_RE = _mm512_setzero_ps(); 
__m512 out_S1_C0_IM = _mm512_setzero_ps(); 
__m512 out_S1_C1_RE = _mm512_setzero_ps(); 
__m512 out_S1_C1_IM = _mm512_setzero_ps(); 
__m512 out_S1_C2_RE = _mm512_setzero_ps(); 
__m512 out_S1_C2_IM = _mm512_setzero_ps(); 
__m512 out_S2_C0_RE = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+32) + pfyOffs[0]) ), _MM_HINT_T1);

__m512 out_S2_C0_IM = _mm512_setzero_ps(); 
__m512 out_S2_C1_RE = _mm512_setzero_ps(); 
__m512 out_S2_C1_IM = _mm512_setzero_ps(); 
__m512 out_S2_C2_RE = _mm512_setzero_ps(); 
__m512 out_S2_C2_IM = _mm512_setzero_ps(); 
__m512 out_S3_C0_RE = _mm512_setzero_ps(); 
__m512 out_S3_C0_IM = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+48) + pfyOffs[0]) ), _MM_HINT_T1);

__m512 out_S3_C1_RE = _mm512_setzero_ps(); 
__m512 out_S3_C1_IM = _mm512_setzero_ps(); 
__m512 out_S3_C2_RE = _mm512_setzero_ps(); 
__m512 out_S3_C2_IM = _mm512_setzero_ps(); 
__m512 dout_S0_C0_RE = _mm512_setzero_ps(); 
__m512 dout_S0_C0_IM = _mm512_setzero_ps(); 
__m512 dout_S0_C1_RE = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+64) + pfyOffs[0]) ), _MM_HINT_T1);

__m512 dout_S0_C1_IM = _mm512_setzero_ps(); 
__m512 dout_S0_C2_RE = _mm512_setzero_ps(); 
__m512 dout_S0_C2_IM = _mm512_setzero_ps(); 
__m512 dout_S1_C0_RE = _mm512_setzero_ps(); 
__m512 dout_S1_C0_IM = _mm512_setzero_ps(); 
__m512 dout_S1_C1_RE = _mm512_setzero_ps(); 
__m512 dout_S1_C1_IM = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+80) + pfyOffs[0]) ), _MM_HINT_T1);

__m512 dout_S1_C2_RE = _mm512_setzero_ps(); 
__m512 dout_S1_C2_IM = _mm512_setzero_ps(); 
__m512 dout_S2_C0_RE = _mm512_setzero_ps(); 
__m512 dout_S2_C0_IM = _mm512_setzero_ps(); 
__m512 dout_S2_C1_RE = _mm512_setzero_ps(); 
__m512 dout_S2_C1_IM = _mm512_setzero_ps(); 
__m512 dout_S2_C2_RE = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+96) + pfyOffs[0]) ), _MM_HINT_T1);

__m512 dout_S2_C2_IM = _mm512_setzero_ps(); 
__m512 dout_S3_C0_RE = _mm512_setzero_ps(); 
__m512 dout_S3_C0_IM = _mm512_setzero_ps(); 
__m512 dout_S3_C1_RE = _mm512_setzero_ps(); 
__m512 dout_S3_C1_IM = _mm512_setzero_ps(); 
__m512 dout_S3_C2_RE = _mm512_setzero_ps(); 
__m512 dout_S3_C2_IM = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+112) + pfyOffs[0]) ), _MM_HINT_T1);

__m512 cl_full_00_RE = _mm512_setzero_ps(); 
__m512 cl_full_00_IM = _mm512_setzero_ps(); 
__m512 cl_full_01_RE = _mm512_setzero_ps(); 
__m512 cl_full_01_IM = _mm512_setzero_ps(); 
__m512 cl_full_02_RE = _mm512_setzero_ps(); 
__m512 cl_full_02_IM = _mm512_setzero_ps(); 
__m512 cl_full_03_RE = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+128) + pfyOffs[0]) ), _MM_HINT_T1);

__m512 cl_full_03_IM = _mm512_setzero_ps(); 
__m512 cl_full_04_RE = _mm512_setzero_ps(); 
__m512 cl_full_04_IM = _mm512_setzero_ps(); 
__m512 cl_full_05_RE = _mm512_setzero_ps(); 
__m512 cl_full_05_IM = _mm512_setzero_ps(); 
__m512 cl_full_10_RE = _mm512_setzero_ps(); 
__m512 cl_full_10_IM = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+144) + pfyOffs[0]) ), _MM_HINT_T1);

__m512 cl_full_11_RE = _mm512_setzero_ps(); 
__m512 cl_full_11_IM = _mm512_setzero_ps(); 
__m512 cl_full_12_RE = _mm512_setzero_ps(); 
__m512 cl_full_12_IM = _mm512_setzero_ps(); 
__m512 cl_full_13_RE = _mm512_setzero_ps(); 
__m512 cl_full_13_IM = _mm512_setzero_ps(); 
__m512 cl_full_14_RE = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+160) + pfyOffs[0]) ), _MM_HINT_T1);

__m512 cl_full_14_IM = _mm512_setzero_ps(); 
__m512 cl_full_15_RE = _mm512_setzero_ps(); 
__m512 cl_full_15_IM = _mm512_setzero_ps(); 
__m512 cl_full_20_RE = _mm512_setzero_ps(); 
__m512 cl_full_20_IM = _mm512_setzero_ps(); 
__m512 cl_full_21_RE = _mm512_setzero_ps(); 
__m512 cl_full_21_IM = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+176) + pfyOffs[0]) ), _MM_HINT_T1);

__m512 cl_full_22_RE = _mm512_setzero_ps(); 
__m512 cl_full_22_IM = _mm512_setzero_ps(); 
__m512 cl_full_23_RE = _mm512_setzero_ps(); 
__m512 cl_full_23_IM = _mm512_setzero_ps(); 
__m512 cl_full_24_RE = _mm512_setzero_ps(); 
__m512 cl_full_24_IM = _mm512_setzero_ps(); 
__m512 cl_full_25_RE = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+192) + pfyOffs[0]) ), _MM_HINT_T1);

__m512 cl_full_25_IM = _mm512_setzero_ps(); 
__m512 cl_full_30_RE = _mm512_setzero_ps(); 
__m512 cl_full_30_IM = _mm512_setzero_ps(); 
__m512 cl_full_31_RE = _mm512_setzero_ps(); 
__m512 cl_full_31_IM = _mm512_setzero_ps(); 
__m512 cl_full_32_RE = _mm512_setzero_ps(); 
__m512 cl_full_32_IM = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+208) + pfyOffs[0]) ), _MM_HINT_T1);

__m512 cl_full_33_RE = _mm512_setzero_ps(); 
__m512 cl_full_33_IM = _mm512_setzero_ps(); 
__m512 cl_full_34_RE = _mm512_setzero_ps(); 
__m512 cl_full_34_IM = _mm512_setzero_ps(); 
__m512 cl_full_35_RE = _mm512_setzero_ps(); 
__m512 cl_full_35_IM = _mm512_setzero_ps(); 
__m512 cl_full_40_RE = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+224) + pfyOffs[0]) ), _MM_HINT_T1);

__m512 cl_full_40_IM = _mm512_setzero_ps(); 
__m512 cl_full_41_RE = _mm512_setzero_ps(); 
__m512 cl_full_41_IM = _mm512_setzero_ps(); 
__m512 cl_full_42_RE = _mm512_setzero_ps(); 
__m512 cl_full_42_IM = _mm512_setzero_ps(); 
__m512 cl_full_43_RE = _mm512_setzero_ps(); 
__m512 cl_full_43_IM = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+240) + pfyOffs[0]) ), _MM_HINT_T1);

__m512 cl_full_44_RE = _mm512_setzero_ps(); 
__m512 cl_full_44_IM = _mm512_setzero_ps(); 
__m512 cl_full_45_RE = _mm512_setzero_ps(); 
__m512 cl_full_45_IM = _mm512_setzero_ps(); 
__m512 cl_full_50_RE = _mm512_setzero_ps(); 
__m512 cl_full_50_IM = _mm512_setzero_ps(); 
__m512 cl_full_51_RE = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+256) + pfyOffs[0]) ), _MM_HINT_T1);

__m512 cl_full_51_IM = _mm512_setzero_ps(); 
__m512 cl_full_52_RE = _mm512_setzero_ps(); 
__m512 cl_full_52_IM = _mm512_setzero_ps(); 
__m512 cl_full_53_RE = _mm512_setzero_ps(); 
__m512 cl_full_53_IM = _mm512_setzero_ps(); 
__m512 cl_full_54_RE = _mm512_setzero_ps(); 
__m512 cl_full_54_IM = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+272) + pfyOffs[0]) ), _MM_HINT_T1);

__m512 cl_full_55_RE = _mm512_setzero_ps(); 
__m512 cl_full_55_IM = _mm512_setzero_ps(); 
dout_S0_C0_RE = _mm512_setzero_ps(); 
dout_S0_C0_IM = _mm512_setzero_ps(); 
dout_S0_C1_RE = _mm512_setzero_ps(); 
dout_S0_C1_IM = _mm512_setzero_ps(); 
dout_S0_C2_RE = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+288) + pfyOffs[0]) ), _MM_HINT_T1);

dout_S0_C2_IM = _mm512_setzero_ps(); 
dout_S1_C0_RE = _mm512_setzero_ps(); 
dout_S1_C0_IM = _mm512_setzero_ps(); 
dout_S1_C1_RE = _mm512_setzero_ps(); 
dout_S1_C1_IM = _mm512_setzero_ps(); 
dout_S1_C2_RE = _mm512_setzero_ps(); 
dout_S1_C2_IM = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+304) + pfyOffs[0]) ), _MM_HINT_T1);

dout_S2_C0_RE = _mm512_setzero_ps(); 
dout_S2_C0_IM = _mm512_setzero_ps(); 
dout_S2_C1_RE = _mm512_setzero_ps(); 
dout_S2_C1_IM = _mm512_setzero_ps(); 
dout_S2_C2_RE = _mm512_setzero_ps(); 
dout_S2_C2_IM = _mm512_setzero_ps(); 
dout_S3_C0_RE = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+320) + pfyOffs[0]) ), _MM_HINT_T1);

dout_S3_C0_IM = _mm512_setzero_ps(); 
dout_S3_C1_RE = _mm512_setzero_ps(); 
dout_S3_C1_IM = _mm512_setzero_ps(); 
dout_S3_C2_RE = _mm512_setzero_ps(); 
dout_S3_C2_IM = _mm512_setzero_ps(); 
 if ( accumulate[0] ) { 
__m512 beta_vec = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+336) + pfyOffs[0]) ), _MM_HINT_T1);

beta_vec = _mm512_extload_ps((&coeff_s), _MM_UPCONV_PS_NONE, _MM_BROADCAST_1X16, _MM_HINT_NONE);

__mmask accMask;

accMask = accumulate[0];

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+0) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+16) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+32) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+48) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+352) + pfyOffs[0]) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+64) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+80) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+96) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+112) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+128) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+144) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+160) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((((*xyBase)[0][0][0] + siprefdist1)+368) + pfyOffs[0]) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+176) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+192) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+208) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+224) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+240) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+256) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+272) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+0) + offs[0]) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+288) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+304) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+320) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+336) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+352) + xbOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+368) + xbOffs[0]) ), _MM_HINT_T0);

psi_S0_RE = _mm512_undefined(); 
 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+16) + offs[0]) ), _MM_HINT_T1);

psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0x1, ((*xyBase)[0][0][0] + xbOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xfffe, ((*xyBase)[0][0][0] + xbOffs[1]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0x1, ((*xyBase)[0][0][1] + xbOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xfffe, ((*xyBase)[0][0][1] + xbOffs[1]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0x1, ((*xyBase)[0][3][0] + xbOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+32) + offs[0]) ), _MM_HINT_T1);

psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xfffe, ((*xyBase)[0][3][0] + xbOffs[1]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0x1, ((*xyBase)[0][3][1] + xbOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xfffe, ((*xyBase)[0][3][1] + xbOffs[1]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S0_C0_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S0_C0_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+48) + offs[0]) ), _MM_HINT_T1);

psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0x1, ((*xyBase)[1][0][0] + xbOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xfffe, ((*xyBase)[1][0][0] + xbOffs[1]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0x1, ((*xyBase)[1][0][1] + xbOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xfffe, ((*xyBase)[1][0][1] + xbOffs[1]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0x1, ((*xyBase)[1][3][0] + xbOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+64) + offs[0]) ), _MM_HINT_T1);

psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xfffe, ((*xyBase)[1][3][0] + xbOffs[1]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0x1, ((*xyBase)[1][3][1] + xbOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xfffe, ((*xyBase)[1][3][1] + xbOffs[1]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S0_C1_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S0_C1_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+80) + offs[0]) ), _MM_HINT_T1);

psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0x1, ((*xyBase)[2][0][0] + xbOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xfffe, ((*xyBase)[2][0][0] + xbOffs[1]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0x1, ((*xyBase)[2][0][1] + xbOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xfffe, ((*xyBase)[2][0][1] + xbOffs[1]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0x1, ((*xyBase)[2][3][0] + xbOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+96) + offs[0]) ), _MM_HINT_T1);

psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xfffe, ((*xyBase)[2][3][0] + xbOffs[1]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0x1, ((*xyBase)[2][3][1] + xbOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xfffe, ((*xyBase)[2][3][1] + xbOffs[1]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S0_C2_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S0_C2_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+112) + offs[0]) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+16) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+48) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+80) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+112) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+128) + offs[0]) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+144) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+160) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+176) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+192) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+208) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+224) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+144) + offs[0]) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+240) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+256) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[0][0][0][0]+272) ), _MM_HINT_T0);

u_00_re = _mm512_mask_extload_ps(u_00_re, 0xFFFF, (*gBase)[0][0][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_00_im = _mm512_mask_extload_ps(u_00_im, 0xFFFF, (*gBase)[0][0][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_01_re = _mm512_mask_extload_ps(u_01_re, 0xFFFF, (*gBase)[0][0][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_01_im = _mm512_mask_extload_ps(u_01_im, 0xFFFF, (*gBase)[0][0][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+160) + offs[0]) ), _MM_HINT_T1);

u_02_re = _mm512_mask_extload_ps(u_02_re, 0xFFFF, (*gBase)[0][0][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_02_im = _mm512_mask_extload_ps(u_02_im, 0xFFFF, (*gBase)[0][0][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_10_re = _mm512_mask_extload_ps(u_10_re, 0xFFFF, (*gBase)[0][1][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_10_im = _mm512_mask_extload_ps(u_10_im, 0xFFFF, (*gBase)[0][1][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_11_re = _mm512_mask_extload_ps(u_11_re, 0xFFFF, (*gBase)[0][1][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_11_im = _mm512_mask_extload_ps(u_11_im, 0xFFFF, (*gBase)[0][1][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_12_re = _mm512_mask_extload_ps(u_12_re, 0xFFFF, (*gBase)[0][1][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+176) + offs[0]) ), _MM_HINT_T1);

u_12_im = _mm512_mask_extload_ps(u_12_im, 0xFFFF, (*gBase)[0][1][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_20_re = _mm512_mask_extload_ps(u_20_re, 0xFFFF, (*gBase)[0][2][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_20_im = _mm512_mask_extload_ps(u_20_im, 0xFFFF, (*gBase)[0][2][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_21_re = _mm512_mask_extload_ps(u_21_re, 0xFFFF, (*gBase)[0][2][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_21_im = _mm512_mask_extload_ps(u_21_im, 0xFFFF, (*gBase)[0][2][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_22_re = _mm512_mask_extload_ps(u_22_re, 0xFFFF, (*gBase)[0][2][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_22_im = _mm512_mask_extload_ps(u_22_im, 0xFFFF, (*gBase)[0][2][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+192) + offs[0]) ), _MM_HINT_T1);

ub_S0_C0_RE = _mm512_mul_ps( u_00_re , b_S0_C0_RE );
ub_S0_C0_RE = _mm512_fmadd_ps(u_00_im, b_S0_C0_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_mul_ps( u_00_re , b_S0_C0_IM );
ub_S0_C0_IM = _mm512_fnmadd_ps(u_00_im, b_S0_C0_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_01_re, b_S0_C1_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fmadd_ps(u_01_im, b_S0_C1_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_01_re, b_S0_C1_IM, ub_S0_C0_IM);
 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+208) + offs[0]) ), _MM_HINT_T1);

ub_S0_C0_IM = _mm512_fnmadd_ps(u_01_im, b_S0_C1_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_02_re, b_S0_C2_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fmadd_ps(u_02_im, b_S0_C2_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_02_re, b_S0_C2_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fnmadd_ps(u_02_im, b_S0_C2_RE, ub_S0_C0_IM);
ub_S0_C1_RE = _mm512_mul_ps( u_10_re , b_S0_C0_RE );
ub_S0_C1_RE = _mm512_fmadd_ps(u_10_im, b_S0_C0_IM, ub_S0_C1_RE);
 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+224) + offs[0]) ), _MM_HINT_T1);

ub_S0_C1_IM = _mm512_mul_ps( u_10_re , b_S0_C0_IM );
ub_S0_C1_IM = _mm512_fnmadd_ps(u_10_im, b_S0_C0_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_re, b_S0_C1_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_im, b_S0_C1_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_re, b_S0_C1_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fnmadd_ps(u_11_im, b_S0_C1_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_12_re, b_S0_C2_RE, ub_S0_C1_RE);
 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+240) + offs[0]) ), _MM_HINT_T1);

ub_S0_C1_RE = _mm512_fmadd_ps(u_12_im, b_S0_C2_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_12_re, b_S0_C2_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fnmadd_ps(u_12_im, b_S0_C2_RE, ub_S0_C1_IM);
ub_S0_C2_RE = _mm512_mul_ps( u_20_re , b_S0_C0_RE );
ub_S0_C2_RE = _mm512_fmadd_ps(u_20_im, b_S0_C0_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_mul_ps( u_20_re , b_S0_C0_IM );
ub_S0_C2_IM = _mm512_fnmadd_ps(u_20_im, b_S0_C0_RE, ub_S0_C2_IM);
 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+256) + offs[0]) ), _MM_HINT_T1);

ub_S0_C2_RE = _mm512_fmadd_ps(u_21_re, b_S0_C1_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fmadd_ps(u_21_im, b_S0_C1_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_21_re, b_S0_C1_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fnmadd_ps(u_21_im, b_S0_C1_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_22_re, b_S0_C2_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fmadd_ps(u_22_im, b_S0_C2_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_re, b_S0_C2_IM, ub_S0_C2_IM);
 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+272) + offs[0]) ), _MM_HINT_T1);

ub_S0_C2_IM = _mm512_fnmadd_ps(u_22_im, b_S0_C2_RE, ub_S0_C2_IM);
dout_S0_C0_RE = _mm512_mask_mov_ps(dout_S0_C0_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C0_RE, dout_S0_C0_RE));
dout_S0_C0_IM = _mm512_mask_mov_ps(dout_S0_C0_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C0_IM, dout_S0_C0_IM));
dout_S0_C1_RE = _mm512_mask_mov_ps(dout_S0_C1_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C1_RE, dout_S0_C1_RE));
dout_S0_C1_IM = _mm512_mask_mov_ps(dout_S0_C1_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C1_IM, dout_S0_C1_IM));
dout_S0_C2_RE = _mm512_mask_mov_ps(dout_S0_C2_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C2_RE, dout_S0_C2_RE));
dout_S0_C2_IM = _mm512_mask_mov_ps(dout_S0_C2_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C2_IM, dout_S0_C2_IM));
 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+288) + offs[0]) ), _MM_HINT_T1);

dout_S3_C0_RE = _mm512_mask_mov_ps(dout_S3_C0_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C0_IM, dout_S3_C0_RE));
dout_S3_C0_IM = _mm512_mask_mov_ps(dout_S3_C0_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C0_RE, dout_S3_C0_IM));
dout_S3_C1_RE = _mm512_mask_mov_ps(dout_S3_C1_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C1_IM, dout_S3_C1_RE));
dout_S3_C1_IM = _mm512_mask_mov_ps(dout_S3_C1_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C1_RE, dout_S3_C1_IM));
dout_S3_C2_RE = _mm512_mask_mov_ps(dout_S3_C2_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C2_IM, dout_S3_C2_RE));
dout_S3_C2_IM = _mm512_mask_mov_ps(dout_S3_C2_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C2_RE, dout_S3_C2_IM));
psi_S0_RE = _mm512_undefined(); 
 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+304) + offs[0]) ), _MM_HINT_T1);

psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0x1, ((*xyBase)[0][1][0] + xbOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xfffe, ((*xyBase)[0][1][0] + xbOffs[1]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0x1, ((*xyBase)[0][1][1] + xbOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xfffe, ((*xyBase)[0][1][1] + xbOffs[1]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0x1, ((*xyBase)[0][2][0] + xbOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+320) + offs[0]) ), _MM_HINT_T1);

psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xfffe, ((*xyBase)[0][2][0] + xbOffs[1]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0x1, ((*xyBase)[0][2][1] + xbOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xfffe, ((*xyBase)[0][2][1] + xbOffs[1]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S1_C0_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S1_C0_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+336) + offs[0]) ), _MM_HINT_T1);

psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0x1, ((*xyBase)[1][1][0] + xbOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xfffe, ((*xyBase)[1][1][0] + xbOffs[1]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0x1, ((*xyBase)[1][1][1] + xbOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xfffe, ((*xyBase)[1][1][1] + xbOffs[1]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0x1, ((*xyBase)[1][2][0] + xbOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+352) + offs[0]) ), _MM_HINT_T1);

psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xfffe, ((*xyBase)[1][2][0] + xbOffs[1]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0x1, ((*xyBase)[1][2][1] + xbOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xfffe, ((*xyBase)[1][2][1] + xbOffs[1]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S1_C1_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S1_C1_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
 _mm_prefetch((const char *)( ((((*pfBase2)[0][0][0] + siprefdist2)+368) + offs[0]) ), _MM_HINT_T1);

psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0x1, ((*xyBase)[2][1][0] + xbOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xfffe, ((*xyBase)[2][1][0] + xbOffs[1]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0x1, ((*xyBase)[2][1][1] + xbOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xfffe, ((*xyBase)[2][1][1] + xbOffs[1]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0x1, ((*xyBase)[2][2][0] + xbOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+0) + offs[0]) ), _MM_HINT_T1);

psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xfffe, ((*xyBase)[2][2][0] + xbOffs[1]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0x1, ((*xyBase)[2][2][1] + xbOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xfffe, ((*xyBase)[2][2][1] + xbOffs[1]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S1_C2_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S1_C2_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
ub_S1_C0_RE = _mm512_mul_ps( u_00_re , b_S1_C0_RE );
 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+16) + offs[0]) ), _MM_HINT_T1);

ub_S1_C0_RE = _mm512_fmadd_ps(u_00_im, b_S1_C0_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_mul_ps( u_00_re , b_S1_C0_IM );
ub_S1_C0_IM = _mm512_fnmadd_ps(u_00_im, b_S1_C0_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_01_re, b_S1_C1_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fmadd_ps(u_01_im, b_S1_C1_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_01_re, b_S1_C1_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fnmadd_ps(u_01_im, b_S1_C1_RE, ub_S1_C0_IM);
 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+32) + offs[0]) ), _MM_HINT_T1);

ub_S1_C0_RE = _mm512_fmadd_ps(u_02_re, b_S1_C2_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fmadd_ps(u_02_im, b_S1_C2_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_02_re, b_S1_C2_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fnmadd_ps(u_02_im, b_S1_C2_RE, ub_S1_C0_IM);
ub_S1_C1_RE = _mm512_mul_ps( u_10_re , b_S1_C0_RE );
ub_S1_C1_RE = _mm512_fmadd_ps(u_10_im, b_S1_C0_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_mul_ps( u_10_re , b_S1_C0_IM );
 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+48) + offs[0]) ), _MM_HINT_T1);

ub_S1_C1_IM = _mm512_fnmadd_ps(u_10_im, b_S1_C0_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_re, b_S1_C1_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_im, b_S1_C1_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_re, b_S1_C1_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fnmadd_ps(u_11_im, b_S1_C1_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_12_re, b_S1_C2_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fmadd_ps(u_12_im, b_S1_C2_IM, ub_S1_C1_RE);
 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+64) + offs[0]) ), _MM_HINT_T1);

ub_S1_C1_IM = _mm512_fmadd_ps(u_12_re, b_S1_C2_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fnmadd_ps(u_12_im, b_S1_C2_RE, ub_S1_C1_IM);
ub_S1_C2_RE = _mm512_mul_ps( u_20_re , b_S1_C0_RE );
ub_S1_C2_RE = _mm512_fmadd_ps(u_20_im, b_S1_C0_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_mul_ps( u_20_re , b_S1_C0_IM );
ub_S1_C2_IM = _mm512_fnmadd_ps(u_20_im, b_S1_C0_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_21_re, b_S1_C1_RE, ub_S1_C2_RE);
 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+80) + offs[0]) ), _MM_HINT_T1);

ub_S1_C2_RE = _mm512_fmadd_ps(u_21_im, b_S1_C1_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_21_re, b_S1_C1_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fnmadd_ps(u_21_im, b_S1_C1_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_22_re, b_S1_C2_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fmadd_ps(u_22_im, b_S1_C2_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_re, b_S1_C2_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fnmadd_ps(u_22_im, b_S1_C2_RE, ub_S1_C2_IM);
 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+96) + offs[0]) ), _MM_HINT_T1);

dout_S1_C0_RE = _mm512_mask_mov_ps(dout_S1_C0_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C0_RE, dout_S1_C0_RE));
dout_S1_C0_IM = _mm512_mask_mov_ps(dout_S1_C0_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C0_IM, dout_S1_C0_IM));
dout_S1_C1_RE = _mm512_mask_mov_ps(dout_S1_C1_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C1_RE, dout_S1_C1_RE));
dout_S1_C1_IM = _mm512_mask_mov_ps(dout_S1_C1_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C1_IM, dout_S1_C1_IM));
dout_S1_C2_RE = _mm512_mask_mov_ps(dout_S1_C2_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C2_RE, dout_S1_C2_RE));
dout_S1_C2_IM = _mm512_mask_mov_ps(dout_S1_C2_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C2_IM, dout_S1_C2_IM));
dout_S2_C0_RE = _mm512_mask_mov_ps(dout_S2_C0_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C0_IM, dout_S2_C0_RE));
 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+112) + offs[0]) ), _MM_HINT_T1);

dout_S2_C0_IM = _mm512_mask_mov_ps(dout_S2_C0_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C0_RE, dout_S2_C0_IM));
dout_S2_C1_RE = _mm512_mask_mov_ps(dout_S2_C1_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C1_IM, dout_S2_C1_RE));
dout_S2_C1_IM = _mm512_mask_mov_ps(dout_S2_C1_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C1_RE, dout_S2_C1_IM));
dout_S2_C2_RE = _mm512_mask_mov_ps(dout_S2_C2_RE, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C2_IM, dout_S2_C2_RE));
dout_S2_C2_IM = _mm512_mask_mov_ps(dout_S2_C2_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C2_RE, dout_S2_C2_IM));
}
 if ( accumulate[1] ) { 
 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+128) + offs[0]) ), _MM_HINT_T1);

__m512 beta_vec = _mm512_setzero_ps(); 
beta_vec = _mm512_extload_ps((&coeff_s), _MM_UPCONV_PS_NONE, _MM_BROADCAST_1X16, _MM_HINT_NONE);

__mmask accMask;

accMask = accumulate[1];

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+0) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+16) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+32) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+144) + offs[0]) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+48) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+64) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+80) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+96) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+112) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+128) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+144) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+160) + offs[0]) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+160) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+176) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+192) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+208) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+224) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+240) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+256) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+176) + offs[0]) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+272) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+288) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+304) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+320) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+336) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+352) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+368) + xfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+192) + offs[0]) ), _MM_HINT_T1);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0x7fff, ((*xyBase)[0][0][0] + xfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0x8000, ((*xyBase)[0][0][0] + xfOffs[15]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0x7fff, ((*xyBase)[0][0][1] + xfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0x8000, ((*xyBase)[0][0][1] + xfOffs[15]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+208) + offs[0]) ), _MM_HINT_T1);

psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0x7fff, ((*xyBase)[0][3][0] + xfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0x8000, ((*xyBase)[0][3][0] + xfOffs[15]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0x7fff, ((*xyBase)[0][3][1] + xfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0x8000, ((*xyBase)[0][3][1] + xfOffs[15]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S0_C0_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S0_C0_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+224) + offs[0]) ), _MM_HINT_T1);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0x7fff, ((*xyBase)[1][0][0] + xfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0x8000, ((*xyBase)[1][0][0] + xfOffs[15]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0x7fff, ((*xyBase)[1][0][1] + xfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0x8000, ((*xyBase)[1][0][1] + xfOffs[15]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+240) + offs[0]) ), _MM_HINT_T1);

psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0x7fff, ((*xyBase)[1][3][0] + xfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0x8000, ((*xyBase)[1][3][0] + xfOffs[15]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0x7fff, ((*xyBase)[1][3][1] + xfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0x8000, ((*xyBase)[1][3][1] + xfOffs[15]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S0_C1_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S0_C1_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+256) + offs[0]) ), _MM_HINT_T1);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0x7fff, ((*xyBase)[2][0][0] + xfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0x8000, ((*xyBase)[2][0][0] + xfOffs[15]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0x7fff, ((*xyBase)[2][0][1] + xfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0x8000, ((*xyBase)[2][0][1] + xfOffs[15]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+272) + offs[0]) ), _MM_HINT_T1);

psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0x7fff, ((*xyBase)[2][3][0] + xfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0x8000, ((*xyBase)[2][3][0] + xfOffs[15]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0x7fff, ((*xyBase)[2][3][1] + xfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0x8000, ((*xyBase)[2][3][1] + xfOffs[15]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S0_C2_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S0_C2_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+288) + offs[0]) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+16) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+48) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+80) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+304) + offs[0]) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+112) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+144) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+160) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+176) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+192) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+208) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+320) + offs[0]) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+224) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+240) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+256) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[1][0][0][0]+272) ), _MM_HINT_T0);

u_00_re = _mm512_mask_extload_ps(u_00_re, 0xFFFF, (*gBase)[1][0][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_00_im = _mm512_mask_extload_ps(u_00_im, 0xFFFF, (*gBase)[1][0][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_01_re = _mm512_mask_extload_ps(u_01_re, 0xFFFF, (*gBase)[1][0][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+336) + offs[0]) ), _MM_HINT_T1);

u_01_im = _mm512_mask_extload_ps(u_01_im, 0xFFFF, (*gBase)[1][0][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_02_re = _mm512_mask_extload_ps(u_02_re, 0xFFFF, (*gBase)[1][0][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_02_im = _mm512_mask_extload_ps(u_02_im, 0xFFFF, (*gBase)[1][0][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_10_re = _mm512_mask_extload_ps(u_10_re, 0xFFFF, (*gBase)[1][1][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_10_im = _mm512_mask_extload_ps(u_10_im, 0xFFFF, (*gBase)[1][1][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_11_re = _mm512_mask_extload_ps(u_11_re, 0xFFFF, (*gBase)[1][1][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_11_im = _mm512_mask_extload_ps(u_11_im, 0xFFFF, (*gBase)[1][1][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+352) + offs[0]) ), _MM_HINT_T1);

u_12_re = _mm512_mask_extload_ps(u_12_re, 0xFFFF, (*gBase)[1][1][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_12_im = _mm512_mask_extload_ps(u_12_im, 0xFFFF, (*gBase)[1][1][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_20_re = _mm512_mask_extload_ps(u_20_re, 0xFFFF, (*gBase)[1][2][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_20_im = _mm512_mask_extload_ps(u_20_im, 0xFFFF, (*gBase)[1][2][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_21_re = _mm512_mask_extload_ps(u_21_re, 0xFFFF, (*gBase)[1][2][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_21_im = _mm512_mask_extload_ps(u_21_im, 0xFFFF, (*gBase)[1][2][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_22_re = _mm512_mask_extload_ps(u_22_re, 0xFFFF, (*gBase)[1][2][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( ((((*pfBase3)[0][0][0] + siprefdist3)+368) + offs[0]) ), _MM_HINT_T1);

u_22_im = _mm512_mask_extload_ps(u_22_im, 0xFFFF, (*gBase)[1][2][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

ub_S0_C0_RE = _mm512_mul_ps( u_00_re , b_S0_C0_RE );
ub_S0_C0_RE = _mm512_fnmadd_ps(u_00_im, b_S0_C0_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_mul_ps( u_00_re , b_S0_C0_IM );
ub_S0_C0_IM = _mm512_fmadd_ps(u_00_im, b_S0_C0_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_10_re, b_S0_C1_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fnmadd_ps(u_10_im, b_S0_C1_IM, ub_S0_C0_RE);
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+0) + offs[0]) ), _MM_HINT_T1);

ub_S0_C0_IM = _mm512_fmadd_ps(u_10_re, b_S0_C1_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fmadd_ps(u_10_im, b_S0_C1_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_20_re, b_S0_C2_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fnmadd_ps(u_20_im, b_S0_C2_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_20_re, b_S0_C2_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fmadd_ps(u_20_im, b_S0_C2_RE, ub_S0_C0_IM);
ub_S0_C1_RE = _mm512_mul_ps( u_01_re , b_S0_C0_RE );
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+16) + offs[0]) ), _MM_HINT_T1);

ub_S0_C1_RE = _mm512_fnmadd_ps(u_01_im, b_S0_C0_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_mul_ps( u_01_re , b_S0_C0_IM );
ub_S0_C1_IM = _mm512_fmadd_ps(u_01_im, b_S0_C0_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_re, b_S0_C1_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fnmadd_ps(u_11_im, b_S0_C1_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_re, b_S0_C1_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_im, b_S0_C1_RE, ub_S0_C1_IM);
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+32) + offs[0]) ), _MM_HINT_T1);

ub_S0_C1_RE = _mm512_fmadd_ps(u_21_re, b_S0_C2_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fnmadd_ps(u_21_im, b_S0_C2_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_21_re, b_S0_C2_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fmadd_ps(u_21_im, b_S0_C2_RE, ub_S0_C1_IM);
ub_S0_C2_RE = _mm512_mul_ps( u_02_re , b_S0_C0_RE );
ub_S0_C2_RE = _mm512_fnmadd_ps(u_02_im, b_S0_C0_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_mul_ps( u_02_re , b_S0_C0_IM );
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+48) + offs[0]) ), _MM_HINT_T1);

ub_S0_C2_IM = _mm512_fmadd_ps(u_02_im, b_S0_C0_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_12_re, b_S0_C1_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fnmadd_ps(u_12_im, b_S0_C1_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_12_re, b_S0_C1_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fmadd_ps(u_12_im, b_S0_C1_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_22_re, b_S0_C2_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fnmadd_ps(u_22_im, b_S0_C2_IM, ub_S0_C2_RE);
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+64) + offs[0]) ), _MM_HINT_T1);

ub_S0_C2_IM = _mm512_fmadd_ps(u_22_re, b_S0_C2_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_im, b_S0_C2_RE, ub_S0_C2_IM);
dout_S0_C0_RE = _mm512_mask_mov_ps(dout_S0_C0_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C0_RE, dout_S0_C0_RE));
dout_S0_C0_IM = _mm512_mask_mov_ps(dout_S0_C0_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C0_IM, dout_S0_C0_IM));
dout_S0_C1_RE = _mm512_mask_mov_ps(dout_S0_C1_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C1_RE, dout_S0_C1_RE));
dout_S0_C1_IM = _mm512_mask_mov_ps(dout_S0_C1_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C1_IM, dout_S0_C1_IM));
dout_S0_C2_RE = _mm512_mask_mov_ps(dout_S0_C2_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C2_RE, dout_S0_C2_RE));
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+80) + offs[0]) ), _MM_HINT_T1);

dout_S0_C2_IM = _mm512_mask_mov_ps(dout_S0_C2_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C2_IM, dout_S0_C2_IM));
dout_S3_C0_RE = _mm512_mask_mov_ps(dout_S3_C0_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C0_IM, dout_S3_C0_RE));
dout_S3_C0_IM = _mm512_mask_mov_ps(dout_S3_C0_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C0_RE, dout_S3_C0_IM));
dout_S3_C1_RE = _mm512_mask_mov_ps(dout_S3_C1_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C1_IM, dout_S3_C1_RE));
dout_S3_C1_IM = _mm512_mask_mov_ps(dout_S3_C1_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C1_RE, dout_S3_C1_IM));
dout_S3_C2_RE = _mm512_mask_mov_ps(dout_S3_C2_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S0_C2_IM, dout_S3_C2_RE));
dout_S3_C2_IM = _mm512_mask_mov_ps(dout_S3_C2_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S0_C2_RE, dout_S3_C2_IM));
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+96) + offs[0]) ), _MM_HINT_T1);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0x7fff, ((*xyBase)[0][1][0] + xfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0x8000, ((*xyBase)[0][1][0] + xfOffs[15]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0x7fff, ((*xyBase)[0][1][1] + xfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0x8000, ((*xyBase)[0][1][1] + xfOffs[15]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+112) + offs[0]) ), _MM_HINT_T1);

psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0x7fff, ((*xyBase)[0][2][0] + xfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0x8000, ((*xyBase)[0][2][0] + xfOffs[15]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0x7fff, ((*xyBase)[0][2][1] + xfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0x8000, ((*xyBase)[0][2][1] + xfOffs[15]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S1_C0_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S1_C0_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+128) + offs[0]) ), _MM_HINT_T1);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0x7fff, ((*xyBase)[1][1][0] + xfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0x8000, ((*xyBase)[1][1][0] + xfOffs[15]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0x7fff, ((*xyBase)[1][1][1] + xfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0x8000, ((*xyBase)[1][1][1] + xfOffs[15]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+144) + offs[0]) ), _MM_HINT_T1);

psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0x7fff, ((*xyBase)[1][2][0] + xfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0x8000, ((*xyBase)[1][2][0] + xfOffs[15]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0x7fff, ((*xyBase)[1][2][1] + xfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0x8000, ((*xyBase)[1][2][1] + xfOffs[15]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S1_C1_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S1_C1_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+160) + offs[0]) ), _MM_HINT_T1);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0x7fff, ((*xyBase)[2][1][0] + xfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0x8000, ((*xyBase)[2][1][0] + xfOffs[15]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0x7fff, ((*xyBase)[2][1][1] + xfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0x8000, ((*xyBase)[2][1][1] + xfOffs[15]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+176) + offs[0]) ), _MM_HINT_T1);

psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0x7fff, ((*xyBase)[2][2][0] + xfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0x8000, ((*xyBase)[2][2][0] + xfOffs[15]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0x7fff, ((*xyBase)[2][2][1] + xfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0x8000, ((*xyBase)[2][2][1] + xfOffs[15]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S1_C2_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S1_C2_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+192) + offs[0]) ), _MM_HINT_T1);

ub_S1_C0_RE = _mm512_mul_ps( u_00_re , b_S1_C0_RE );
ub_S1_C0_RE = _mm512_fnmadd_ps(u_00_im, b_S1_C0_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_mul_ps( u_00_re , b_S1_C0_IM );
ub_S1_C0_IM = _mm512_fmadd_ps(u_00_im, b_S1_C0_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_10_re, b_S1_C1_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fnmadd_ps(u_10_im, b_S1_C1_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_10_re, b_S1_C1_IM, ub_S1_C0_IM);
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+208) + offs[0]) ), _MM_HINT_T1);

ub_S1_C0_IM = _mm512_fmadd_ps(u_10_im, b_S1_C1_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_20_re, b_S1_C2_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fnmadd_ps(u_20_im, b_S1_C2_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_20_re, b_S1_C2_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fmadd_ps(u_20_im, b_S1_C2_RE, ub_S1_C0_IM);
ub_S1_C1_RE = _mm512_mul_ps( u_01_re , b_S1_C0_RE );
ub_S1_C1_RE = _mm512_fnmadd_ps(u_01_im, b_S1_C0_IM, ub_S1_C1_RE);
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+224) + offs[0]) ), _MM_HINT_T1);

ub_S1_C1_IM = _mm512_mul_ps( u_01_re , b_S1_C0_IM );
ub_S1_C1_IM = _mm512_fmadd_ps(u_01_im, b_S1_C0_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_re, b_S1_C1_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fnmadd_ps(u_11_im, b_S1_C1_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_re, b_S1_C1_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_im, b_S1_C1_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_21_re, b_S1_C2_RE, ub_S1_C1_RE);
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+240) + offs[0]) ), _MM_HINT_T1);

ub_S1_C1_RE = _mm512_fnmadd_ps(u_21_im, b_S1_C2_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_21_re, b_S1_C2_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fmadd_ps(u_21_im, b_S1_C2_RE, ub_S1_C1_IM);
ub_S1_C2_RE = _mm512_mul_ps( u_02_re , b_S1_C0_RE );
ub_S1_C2_RE = _mm512_fnmadd_ps(u_02_im, b_S1_C0_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_mul_ps( u_02_re , b_S1_C0_IM );
ub_S1_C2_IM = _mm512_fmadd_ps(u_02_im, b_S1_C0_RE, ub_S1_C2_IM);
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+256) + offs[0]) ), _MM_HINT_T1);

ub_S1_C2_RE = _mm512_fmadd_ps(u_12_re, b_S1_C1_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fnmadd_ps(u_12_im, b_S1_C1_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_12_re, b_S1_C1_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fmadd_ps(u_12_im, b_S1_C1_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_22_re, b_S1_C2_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fnmadd_ps(u_22_im, b_S1_C2_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_re, b_S1_C2_IM, ub_S1_C2_IM);
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+272) + offs[0]) ), _MM_HINT_T1);

ub_S1_C2_IM = _mm512_fmadd_ps(u_22_im, b_S1_C2_RE, ub_S1_C2_IM);
dout_S1_C0_RE = _mm512_mask_mov_ps(dout_S1_C0_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C0_RE, dout_S1_C0_RE));
dout_S1_C0_IM = _mm512_mask_mov_ps(dout_S1_C0_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C0_IM, dout_S1_C0_IM));
dout_S1_C1_RE = _mm512_mask_mov_ps(dout_S1_C1_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C1_RE, dout_S1_C1_RE));
dout_S1_C1_IM = _mm512_mask_mov_ps(dout_S1_C1_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C1_IM, dout_S1_C1_IM));
dout_S1_C2_RE = _mm512_mask_mov_ps(dout_S1_C2_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C2_RE, dout_S1_C2_RE));
dout_S1_C2_IM = _mm512_mask_mov_ps(dout_S1_C2_IM, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C2_IM, dout_S1_C2_IM));
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+288) + offs[0]) ), _MM_HINT_T1);

dout_S2_C0_RE = _mm512_mask_mov_ps(dout_S2_C0_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C0_IM, dout_S2_C0_RE));
dout_S2_C0_IM = _mm512_mask_mov_ps(dout_S2_C0_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C0_RE, dout_S2_C0_IM));
dout_S2_C1_RE = _mm512_mask_mov_ps(dout_S2_C1_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C1_IM, dout_S2_C1_RE));
dout_S2_C1_IM = _mm512_mask_mov_ps(dout_S2_C1_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C1_RE, dout_S2_C1_IM));
dout_S2_C2_RE = _mm512_mask_mov_ps(dout_S2_C2_RE, accMask, _mm512_fmadd_ps(beta_vec, ub_S1_C2_IM, dout_S2_C2_RE));
dout_S2_C2_IM = _mm512_mask_mov_ps(dout_S2_C2_IM, accMask, _mm512_fnmadd_ps(beta_vec, ub_S1_C2_RE, dout_S2_C2_IM));
}
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+304) + offs[0]) ), _MM_HINT_T1);

 if ( accumulate[2] ) { 
__m512 beta_vec = _mm512_setzero_ps(); 
beta_vec = _mm512_extload_ps((&coeff_s), _MM_UPCONV_PS_NONE, _MM_BROADCAST_1X16, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+0) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+16) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+32) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+48) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+320) + offs[0]) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+64) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+80) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+96) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+112) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+128) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+144) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+160) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+336) + offs[0]) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+176) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+192) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+208) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+224) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+240) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+256) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+272) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+352) + offs[0]) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+288) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+304) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+320) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+336) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+352) + ybOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+368) + ybOffs[0]) ), _MM_HINT_T0);

psi_S0_RE = _mm512_undefined(); 
 _mm_prefetch((const char *)( ((((*pfBase4)[0][0][0] + siprefdist4)+368) + offs[0]) ), _MM_HINT_T1);

psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*xyBase)[0][0][0] + ybOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*xyBase)[0][0][1] + ybOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*xyBase)[0][3][0] + ybOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*xyBase)[0][3][1] + ybOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+0) ), _MM_HINT_T1);

b_S0_C0_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
b_S0_C0_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*xyBase)[1][0][0] + ybOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*xyBase)[1][0][1] + ybOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+16) ), _MM_HINT_T1);

psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*xyBase)[1][3][0] + ybOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*xyBase)[1][3][1] + ybOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S0_C1_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
b_S0_C1_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*xyBase)[2][0][0] + ybOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+32) ), _MM_HINT_T1);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*xyBase)[2][0][1] + ybOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*xyBase)[2][3][0] + ybOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*xyBase)[2][3][1] + ybOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S0_C2_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+48) ), _MM_HINT_T1);

b_S0_C2_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+16) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+48) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+80) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+64) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+112) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+144) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+160) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+176) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+192) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+80) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+208) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+224) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+240) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+256) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[2][0][0][0]+272) ), _MM_HINT_T0);

u_00_re = _mm512_mask_extload_ps(u_00_re, 0xFFFF, (*gBase)[2][0][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_00_im = _mm512_mask_extload_ps(u_00_im, 0xFFFF, (*gBase)[2][0][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+96) ), _MM_HINT_T1);

u_01_re = _mm512_mask_extload_ps(u_01_re, 0xFFFF, (*gBase)[2][0][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_01_im = _mm512_mask_extload_ps(u_01_im, 0xFFFF, (*gBase)[2][0][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_02_re = _mm512_mask_extload_ps(u_02_re, 0xFFFF, (*gBase)[2][0][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_02_im = _mm512_mask_extload_ps(u_02_im, 0xFFFF, (*gBase)[2][0][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_10_re = _mm512_mask_extload_ps(u_10_re, 0xFFFF, (*gBase)[2][1][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_10_im = _mm512_mask_extload_ps(u_10_im, 0xFFFF, (*gBase)[2][1][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_11_re = _mm512_mask_extload_ps(u_11_re, 0xFFFF, (*gBase)[2][1][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+112) ), _MM_HINT_T1);

u_11_im = _mm512_mask_extload_ps(u_11_im, 0xFFFF, (*gBase)[2][1][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_12_re = _mm512_mask_extload_ps(u_12_re, 0xFFFF, (*gBase)[2][1][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_12_im = _mm512_mask_extload_ps(u_12_im, 0xFFFF, (*gBase)[2][1][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_20_re = _mm512_mask_extload_ps(u_20_re, 0xFFFF, (*gBase)[2][2][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_20_im = _mm512_mask_extload_ps(u_20_im, 0xFFFF, (*gBase)[2][2][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_21_re = _mm512_mask_extload_ps(u_21_re, 0xFFFF, (*gBase)[2][2][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_21_im = _mm512_mask_extload_ps(u_21_im, 0xFFFF, (*gBase)[2][2][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+128) ), _MM_HINT_T1);

u_22_re = _mm512_mask_extload_ps(u_22_re, 0xFFFF, (*gBase)[2][2][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_22_im = _mm512_mask_extload_ps(u_22_im, 0xFFFF, (*gBase)[2][2][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

ub_S0_C0_RE = _mm512_mul_ps( u_00_re , b_S0_C0_RE );
ub_S0_C0_RE = _mm512_fmadd_ps(u_00_im, b_S0_C0_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_mul_ps( u_00_re , b_S0_C0_IM );
ub_S0_C0_IM = _mm512_fnmadd_ps(u_00_im, b_S0_C0_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_01_re, b_S0_C1_RE, ub_S0_C0_RE);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+144) ), _MM_HINT_T1);

ub_S0_C0_RE = _mm512_fmadd_ps(u_01_im, b_S0_C1_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_01_re, b_S0_C1_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fnmadd_ps(u_01_im, b_S0_C1_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_02_re, b_S0_C2_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fmadd_ps(u_02_im, b_S0_C2_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_02_re, b_S0_C2_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fnmadd_ps(u_02_im, b_S0_C2_RE, ub_S0_C0_IM);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+160) ), _MM_HINT_T1);

ub_S0_C1_RE = _mm512_mul_ps( u_10_re , b_S0_C0_RE );
ub_S0_C1_RE = _mm512_fmadd_ps(u_10_im, b_S0_C0_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_mul_ps( u_10_re , b_S0_C0_IM );
ub_S0_C1_IM = _mm512_fnmadd_ps(u_10_im, b_S0_C0_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_re, b_S0_C1_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_im, b_S0_C1_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_re, b_S0_C1_IM, ub_S0_C1_IM);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+176) ), _MM_HINT_T1);

ub_S0_C1_IM = _mm512_fnmadd_ps(u_11_im, b_S0_C1_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_12_re, b_S0_C2_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fmadd_ps(u_12_im, b_S0_C2_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_12_re, b_S0_C2_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fnmadd_ps(u_12_im, b_S0_C2_RE, ub_S0_C1_IM);
ub_S0_C2_RE = _mm512_mul_ps( u_20_re , b_S0_C0_RE );
ub_S0_C2_RE = _mm512_fmadd_ps(u_20_im, b_S0_C0_IM, ub_S0_C2_RE);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+192) ), _MM_HINT_T1);

ub_S0_C2_IM = _mm512_mul_ps( u_20_re , b_S0_C0_IM );
ub_S0_C2_IM = _mm512_fnmadd_ps(u_20_im, b_S0_C0_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_21_re, b_S0_C1_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fmadd_ps(u_21_im, b_S0_C1_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_21_re, b_S0_C1_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fnmadd_ps(u_21_im, b_S0_C1_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_22_re, b_S0_C2_RE, ub_S0_C2_RE);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+208) ), _MM_HINT_T1);

ub_S0_C2_RE = _mm512_fmadd_ps(u_22_im, b_S0_C2_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_re, b_S0_C2_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fnmadd_ps(u_22_im, b_S0_C2_RE, ub_S0_C2_IM);
dout_S0_C0_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C0_RE, dout_S0_C0_RE);
dout_S0_C0_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C0_IM, dout_S0_C0_IM);
dout_S0_C1_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C1_RE, dout_S0_C1_RE);
dout_S0_C1_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C1_IM, dout_S0_C1_IM);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+224) ), _MM_HINT_T1);

dout_S0_C2_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C2_RE, dout_S0_C2_RE);
dout_S0_C2_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C2_IM, dout_S0_C2_IM);
dout_S3_C0_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C0_RE, dout_S3_C0_RE);
dout_S3_C0_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C0_IM, dout_S3_C0_IM);
dout_S3_C1_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C1_RE, dout_S3_C1_RE);
dout_S3_C1_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C1_IM, dout_S3_C1_IM);
dout_S3_C2_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C2_RE, dout_S3_C2_RE);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+240) ), _MM_HINT_T1);

dout_S3_C2_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C2_IM, dout_S3_C2_IM);
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*xyBase)[0][1][0] + ybOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*xyBase)[0][1][1] + ybOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*xyBase)[0][2][0] + ybOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+256) ), _MM_HINT_T1);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*xyBase)[0][2][1] + ybOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S1_C0_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S1_C0_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*xyBase)[1][1][0] + ybOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+272) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*xyBase)[1][1][1] + ybOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*xyBase)[1][2][0] + ybOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*xyBase)[1][2][1] + ybOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S1_C1_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S1_C1_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+288) ), _MM_HINT_T1);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*xyBase)[2][1][0] + ybOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*xyBase)[2][1][1] + ybOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*xyBase)[2][2][0] + ybOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+304) ), _MM_HINT_T1);

psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*xyBase)[2][2][1] + ybOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S1_C2_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S1_C2_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
ub_S1_C0_RE = _mm512_mul_ps( u_00_re , b_S1_C0_RE );
ub_S1_C0_RE = _mm512_fmadd_ps(u_00_im, b_S1_C0_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_mul_ps( u_00_re , b_S1_C0_IM );
ub_S1_C0_IM = _mm512_fnmadd_ps(u_00_im, b_S1_C0_RE, ub_S1_C0_IM);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+320) ), _MM_HINT_T1);

ub_S1_C0_RE = _mm512_fmadd_ps(u_01_re, b_S1_C1_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fmadd_ps(u_01_im, b_S1_C1_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_01_re, b_S1_C1_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fnmadd_ps(u_01_im, b_S1_C1_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_02_re, b_S1_C2_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fmadd_ps(u_02_im, b_S1_C2_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_02_re, b_S1_C2_IM, ub_S1_C0_IM);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+336) ), _MM_HINT_T1);

ub_S1_C0_IM = _mm512_fnmadd_ps(u_02_im, b_S1_C2_RE, ub_S1_C0_IM);
ub_S1_C1_RE = _mm512_mul_ps( u_10_re , b_S1_C0_RE );
ub_S1_C1_RE = _mm512_fmadd_ps(u_10_im, b_S1_C0_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_mul_ps( u_10_re , b_S1_C0_IM );
ub_S1_C1_IM = _mm512_fnmadd_ps(u_10_im, b_S1_C0_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_re, b_S1_C1_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_im, b_S1_C1_IM, ub_S1_C1_RE);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+352) ), _MM_HINT_T1);

ub_S1_C1_IM = _mm512_fmadd_ps(u_11_re, b_S1_C1_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fnmadd_ps(u_11_im, b_S1_C1_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_12_re, b_S1_C2_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fmadd_ps(u_12_im, b_S1_C2_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_12_re, b_S1_C2_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fnmadd_ps(u_12_im, b_S1_C2_RE, ub_S1_C1_IM);
ub_S1_C2_RE = _mm512_mul_ps( u_20_re , b_S1_C0_RE );
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+368) ), _MM_HINT_T1);

ub_S1_C2_RE = _mm512_fmadd_ps(u_20_im, b_S1_C0_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_mul_ps( u_20_re , b_S1_C0_IM );
ub_S1_C2_IM = _mm512_fnmadd_ps(u_20_im, b_S1_C0_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_21_re, b_S1_C1_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fmadd_ps(u_21_im, b_S1_C1_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_21_re, b_S1_C1_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fnmadd_ps(u_21_im, b_S1_C1_RE, ub_S1_C2_IM);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+384) ), _MM_HINT_T1);

ub_S1_C2_RE = _mm512_fmadd_ps(u_22_re, b_S1_C2_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fmadd_ps(u_22_im, b_S1_C2_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_re, b_S1_C2_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fnmadd_ps(u_22_im, b_S1_C2_RE, ub_S1_C2_IM);
dout_S1_C0_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C0_RE, dout_S1_C0_RE);
dout_S1_C0_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C0_IM, dout_S1_C0_IM);
dout_S1_C1_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C1_RE, dout_S1_C1_RE);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+400) ), _MM_HINT_T1);

dout_S1_C1_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C1_IM, dout_S1_C1_IM);
dout_S1_C2_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C2_RE, dout_S1_C2_RE);
dout_S1_C2_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C2_IM, dout_S1_C2_IM);
dout_S2_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_RE, dout_S2_C0_RE);
dout_S2_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_IM, dout_S2_C0_IM);
dout_S2_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_RE, dout_S2_C1_RE);
dout_S2_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_IM, dout_S2_C1_IM);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+416) ), _MM_HINT_T1);

dout_S2_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_RE, dout_S2_C2_RE);
dout_S2_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_IM, dout_S2_C2_IM);
}
 if ( accumulate[3] ) { 
__m512 beta_vec = _mm512_setzero_ps(); 
beta_vec = _mm512_extload_ps((&coeff_s), _MM_UPCONV_PS_NONE, _MM_BROADCAST_1X16, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+0) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+432) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+16) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+32) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+48) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+64) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+80) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+96) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+112) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+448) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+128) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+144) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+160) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+176) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+192) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+208) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+224) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+464) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+240) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+256) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+272) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+288) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+304) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+320) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+336) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+480) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+352) + yfOffs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*xyBase)[0][0][0]+368) + yfOffs[0]) ), _MM_HINT_T0);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*xyBase)[0][0][0] + yfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*xyBase)[0][0][1] + yfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+496) ), _MM_HINT_T1);

psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*xyBase)[0][3][0] + yfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*xyBase)[0][3][1] + yfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S0_C0_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S0_C0_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*xyBase)[1][0][0] + yfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+512) ), _MM_HINT_T1);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*xyBase)[1][0][1] + yfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*xyBase)[1][3][0] + yfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*xyBase)[1][3][1] + yfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S0_C1_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+528) ), _MM_HINT_T1);

b_S0_C1_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*xyBase)[2][0][0] + yfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*xyBase)[2][0][1] + yfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*xyBase)[2][3][0] + yfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+544) ), _MM_HINT_T1);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*xyBase)[2][3][1] + yfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S0_C2_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S0_C2_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+16) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+560) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+48) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+80) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+112) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+144) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+576) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+160) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+176) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+192) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+208) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+224) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+240) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+256) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+592) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[3][0][0][0]+272) ), _MM_HINT_T0);

u_00_re = _mm512_mask_extload_ps(u_00_re, 0xFFFF, (*gBase)[3][0][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_00_im = _mm512_mask_extload_ps(u_00_im, 0xFFFF, (*gBase)[3][0][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_01_re = _mm512_mask_extload_ps(u_01_re, 0xFFFF, (*gBase)[3][0][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_01_im = _mm512_mask_extload_ps(u_01_im, 0xFFFF, (*gBase)[3][0][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_02_re = _mm512_mask_extload_ps(u_02_re, 0xFFFF, (*gBase)[3][0][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_02_im = _mm512_mask_extload_ps(u_02_im, 0xFFFF, (*gBase)[3][0][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+608) ), _MM_HINT_T1);

u_10_re = _mm512_mask_extload_ps(u_10_re, 0xFFFF, (*gBase)[3][1][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_10_im = _mm512_mask_extload_ps(u_10_im, 0xFFFF, (*gBase)[3][1][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_11_re = _mm512_mask_extload_ps(u_11_re, 0xFFFF, (*gBase)[3][1][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_11_im = _mm512_mask_extload_ps(u_11_im, 0xFFFF, (*gBase)[3][1][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_12_re = _mm512_mask_extload_ps(u_12_re, 0xFFFF, (*gBase)[3][1][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_12_im = _mm512_mask_extload_ps(u_12_im, 0xFFFF, (*gBase)[3][1][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_20_re = _mm512_mask_extload_ps(u_20_re, 0xFFFF, (*gBase)[3][2][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+624) ), _MM_HINT_T1);

u_20_im = _mm512_mask_extload_ps(u_20_im, 0xFFFF, (*gBase)[3][2][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_21_re = _mm512_mask_extload_ps(u_21_re, 0xFFFF, (*gBase)[3][2][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_21_im = _mm512_mask_extload_ps(u_21_im, 0xFFFF, (*gBase)[3][2][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_22_re = _mm512_mask_extload_ps(u_22_re, 0xFFFF, (*gBase)[3][2][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_22_im = _mm512_mask_extload_ps(u_22_im, 0xFFFF, (*gBase)[3][2][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

ub_S0_C0_RE = _mm512_mul_ps( u_00_re , b_S0_C0_RE );
ub_S0_C0_RE = _mm512_fnmadd_ps(u_00_im, b_S0_C0_IM, ub_S0_C0_RE);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+640) ), _MM_HINT_T1);

ub_S0_C0_IM = _mm512_mul_ps( u_00_re , b_S0_C0_IM );
ub_S0_C0_IM = _mm512_fmadd_ps(u_00_im, b_S0_C0_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_10_re, b_S0_C1_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fnmadd_ps(u_10_im, b_S0_C1_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_10_re, b_S0_C1_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fmadd_ps(u_10_im, b_S0_C1_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_20_re, b_S0_C2_RE, ub_S0_C0_RE);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+656) ), _MM_HINT_T1);

ub_S0_C0_RE = _mm512_fnmadd_ps(u_20_im, b_S0_C2_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_20_re, b_S0_C2_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fmadd_ps(u_20_im, b_S0_C2_RE, ub_S0_C0_IM);
ub_S0_C1_RE = _mm512_mul_ps( u_01_re , b_S0_C0_RE );
ub_S0_C1_RE = _mm512_fnmadd_ps(u_01_im, b_S0_C0_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_mul_ps( u_01_re , b_S0_C0_IM );
ub_S0_C1_IM = _mm512_fmadd_ps(u_01_im, b_S0_C0_RE, ub_S0_C1_IM);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+672) ), _MM_HINT_T1);

ub_S0_C1_RE = _mm512_fmadd_ps(u_11_re, b_S0_C1_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fnmadd_ps(u_11_im, b_S0_C1_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_re, b_S0_C1_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_im, b_S0_C1_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_21_re, b_S0_C2_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fnmadd_ps(u_21_im, b_S0_C2_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_21_re, b_S0_C2_IM, ub_S0_C1_IM);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+688) ), _MM_HINT_T1);

ub_S0_C1_IM = _mm512_fmadd_ps(u_21_im, b_S0_C2_RE, ub_S0_C1_IM);
ub_S0_C2_RE = _mm512_mul_ps( u_02_re , b_S0_C0_RE );
ub_S0_C2_RE = _mm512_fnmadd_ps(u_02_im, b_S0_C0_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_mul_ps( u_02_re , b_S0_C0_IM );
ub_S0_C2_IM = _mm512_fmadd_ps(u_02_im, b_S0_C0_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_12_re, b_S0_C1_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fnmadd_ps(u_12_im, b_S0_C1_IM, ub_S0_C2_RE);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+704) ), _MM_HINT_T1);

ub_S0_C2_IM = _mm512_fmadd_ps(u_12_re, b_S0_C1_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fmadd_ps(u_12_im, b_S0_C1_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_22_re, b_S0_C2_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fnmadd_ps(u_22_im, b_S0_C2_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_re, b_S0_C2_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_im, b_S0_C2_RE, ub_S0_C2_IM);
dout_S0_C0_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C0_RE, dout_S0_C0_RE);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+720) ), _MM_HINT_T1);

dout_S0_C0_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C0_IM, dout_S0_C0_IM);
dout_S0_C1_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C1_RE, dout_S0_C1_RE);
dout_S0_C1_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C1_IM, dout_S0_C1_IM);
dout_S0_C2_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C2_RE, dout_S0_C2_RE);
dout_S0_C2_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C2_IM, dout_S0_C2_IM);
dout_S3_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_RE, dout_S3_C0_RE);
dout_S3_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_IM, dout_S3_C0_IM);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+736) ), _MM_HINT_T1);

dout_S3_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_RE, dout_S3_C1_RE);
dout_S3_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_IM, dout_S3_C1_IM);
dout_S3_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_RE, dout_S3_C2_RE);
dout_S3_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_IM, dout_S3_C2_IM);
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*xyBase)[0][1][0] + yfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+752) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*xyBase)[0][1][1] + yfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*xyBase)[0][2][0] + yfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*xyBase)[0][2][1] + yfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S1_C0_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
b_S1_C0_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+768) ), _MM_HINT_T1);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*xyBase)[1][1][0] + yfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*xyBase)[1][1][1] + yfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*xyBase)[1][2][0] + yfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+784) ), _MM_HINT_T1);

psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*xyBase)[1][2][1] + yfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S1_C1_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
b_S1_C1_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*xyBase)[2][1][0] + yfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*xyBase)[2][1][1] + yfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+800) ), _MM_HINT_T1);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*xyBase)[2][2][0] + yfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*xyBase)[2][2][1] + yfOffs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S1_C2_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
b_S1_C2_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
ub_S1_C0_RE = _mm512_mul_ps( u_00_re , b_S1_C0_RE );
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+816) ), _MM_HINT_T1);

ub_S1_C0_RE = _mm512_fnmadd_ps(u_00_im, b_S1_C0_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_mul_ps( u_00_re , b_S1_C0_IM );
ub_S1_C0_IM = _mm512_fmadd_ps(u_00_im, b_S1_C0_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_10_re, b_S1_C1_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fnmadd_ps(u_10_im, b_S1_C1_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_10_re, b_S1_C1_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fmadd_ps(u_10_im, b_S1_C1_RE, ub_S1_C0_IM);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+832) ), _MM_HINT_T1);

ub_S1_C0_RE = _mm512_fmadd_ps(u_20_re, b_S1_C2_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fnmadd_ps(u_20_im, b_S1_C2_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_20_re, b_S1_C2_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fmadd_ps(u_20_im, b_S1_C2_RE, ub_S1_C0_IM);
ub_S1_C1_RE = _mm512_mul_ps( u_01_re , b_S1_C0_RE );
ub_S1_C1_RE = _mm512_fnmadd_ps(u_01_im, b_S1_C0_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_mul_ps( u_01_re , b_S1_C0_IM );
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+848) ), _MM_HINT_T1);

ub_S1_C1_IM = _mm512_fmadd_ps(u_01_im, b_S1_C0_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_re, b_S1_C1_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fnmadd_ps(u_11_im, b_S1_C1_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_re, b_S1_C1_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_im, b_S1_C1_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_21_re, b_S1_C2_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fnmadd_ps(u_21_im, b_S1_C2_IM, ub_S1_C1_RE);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+864) ), _MM_HINT_T1);

ub_S1_C1_IM = _mm512_fmadd_ps(u_21_re, b_S1_C2_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fmadd_ps(u_21_im, b_S1_C2_RE, ub_S1_C1_IM);
ub_S1_C2_RE = _mm512_mul_ps( u_02_re , b_S1_C0_RE );
ub_S1_C2_RE = _mm512_fnmadd_ps(u_02_im, b_S1_C0_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_mul_ps( u_02_re , b_S1_C0_IM );
ub_S1_C2_IM = _mm512_fmadd_ps(u_02_im, b_S1_C0_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_12_re, b_S1_C1_RE, ub_S1_C2_RE);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+880) ), _MM_HINT_T1);

ub_S1_C2_RE = _mm512_fnmadd_ps(u_12_im, b_S1_C1_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_12_re, b_S1_C1_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fmadd_ps(u_12_im, b_S1_C1_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_22_re, b_S1_C2_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fnmadd_ps(u_22_im, b_S1_C2_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_re, b_S1_C2_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_im, b_S1_C2_RE, ub_S1_C2_IM);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+896) ), _MM_HINT_T1);

dout_S1_C0_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C0_RE, dout_S1_C0_RE);
dout_S1_C0_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C0_IM, dout_S1_C0_IM);
dout_S1_C1_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C1_RE, dout_S1_C1_RE);
dout_S1_C1_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C1_IM, dout_S1_C1_IM);
dout_S1_C2_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C2_RE, dout_S1_C2_RE);
dout_S1_C2_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C2_IM, dout_S1_C2_IM);
dout_S2_C0_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C0_RE, dout_S2_C0_RE);
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+912) ), _MM_HINT_T1);

dout_S2_C0_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C0_IM, dout_S2_C0_IM);
dout_S2_C1_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C1_RE, dout_S2_C1_RE);
dout_S2_C1_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C1_IM, dout_S2_C1_IM);
dout_S2_C2_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C2_RE, dout_S2_C2_RE);
dout_S2_C2_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C2_IM, dout_S2_C2_IM);
}
 if ( accumulate[4] ) { 
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+928) ), _MM_HINT_T1);

__m512 beta_vec = _mm512_setzero_ps(); 
beta_vec = _mm512_extload_ps((&coeff_s), _MM_UPCONV_PS_NONE, _MM_BROADCAST_1X16, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+0) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+16) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+32) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+48) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+64) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+944) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+80) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+96) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+112) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+128) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+144) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+160) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+176) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+960) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+192) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+208) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+224) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+240) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+256) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+272) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+288) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+976) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+304) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+320) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+336) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+352) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zbBase)[0][0][0]+368) + offs[0]) ), _MM_HINT_T0);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*zbBase)[0][0][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+992) ), _MM_HINT_T1);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*zbBase)[0][0][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*zbBase)[0][2][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*zbBase)[0][2][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S0_C0_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+1008) ), _MM_HINT_T1);

b_S0_C0_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*zbBase)[1][0][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*zbBase)[1][0][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*zbBase)[1][2][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+1024) ), _MM_HINT_T1);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*zbBase)[1][2][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S0_C1_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S0_C1_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*zbBase)[2][0][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+1040) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*zbBase)[2][0][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*zbBase)[2][2][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*zbBase)[2][2][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S0_C2_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S0_C2_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+1056) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+16) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+48) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+80) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+1072) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+112) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+144) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+160) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+176) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+192) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+208) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+1088) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+224) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+240) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+256) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[4][0][0][0]+272) ), _MM_HINT_T0);

u_00_re = _mm512_mask_extload_ps(u_00_re, 0xFFFF, (*gBase)[4][0][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_00_im = _mm512_mask_extload_ps(u_00_im, 0xFFFF, (*gBase)[4][0][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_01_re = _mm512_mask_extload_ps(u_01_re, 0xFFFF, (*gBase)[4][0][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+1104) ), _MM_HINT_T1);

u_01_im = _mm512_mask_extload_ps(u_01_im, 0xFFFF, (*gBase)[4][0][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_02_re = _mm512_mask_extload_ps(u_02_re, 0xFFFF, (*gBase)[4][0][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_02_im = _mm512_mask_extload_ps(u_02_im, 0xFFFF, (*gBase)[4][0][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_10_re = _mm512_mask_extload_ps(u_10_re, 0xFFFF, (*gBase)[4][1][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_10_im = _mm512_mask_extload_ps(u_10_im, 0xFFFF, (*gBase)[4][1][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_11_re = _mm512_mask_extload_ps(u_11_re, 0xFFFF, (*gBase)[4][1][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_11_im = _mm512_mask_extload_ps(u_11_im, 0xFFFF, (*gBase)[4][1][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+1120) ), _MM_HINT_T1);

u_12_re = _mm512_mask_extload_ps(u_12_re, 0xFFFF, (*gBase)[4][1][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_12_im = _mm512_mask_extload_ps(u_12_im, 0xFFFF, (*gBase)[4][1][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_20_re = _mm512_mask_extload_ps(u_20_re, 0xFFFF, (*gBase)[4][2][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_20_im = _mm512_mask_extload_ps(u_20_im, 0xFFFF, (*gBase)[4][2][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_21_re = _mm512_mask_extload_ps(u_21_re, 0xFFFF, (*gBase)[4][2][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_21_im = _mm512_mask_extload_ps(u_21_im, 0xFFFF, (*gBase)[4][2][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_22_re = _mm512_mask_extload_ps(u_22_re, 0xFFFF, (*gBase)[4][2][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*clBase).block1[0][0][0] + clprefdist)+1136) ), _MM_HINT_T1);

u_22_im = _mm512_mask_extload_ps(u_22_im, 0xFFFF, (*gBase)[4][2][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

ub_S0_C0_RE = _mm512_mul_ps( u_00_re , b_S0_C0_RE );
ub_S0_C0_RE = _mm512_fmadd_ps(u_00_im, b_S0_C0_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_mul_ps( u_00_re , b_S0_C0_IM );
ub_S0_C0_IM = _mm512_fnmadd_ps(u_00_im, b_S0_C0_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_01_re, b_S0_C1_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fmadd_ps(u_01_im, b_S0_C1_IM, ub_S0_C0_RE);
 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+0) ), _MM_HINT_T1);

ub_S0_C0_IM = _mm512_fmadd_ps(u_01_re, b_S0_C1_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fnmadd_ps(u_01_im, b_S0_C1_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_02_re, b_S0_C2_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fmadd_ps(u_02_im, b_S0_C2_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_02_re, b_S0_C2_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fnmadd_ps(u_02_im, b_S0_C2_RE, ub_S0_C0_IM);
ub_S0_C1_RE = _mm512_mul_ps( u_10_re , b_S0_C0_RE );
 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+16) ), _MM_HINT_T1);

ub_S0_C1_RE = _mm512_fmadd_ps(u_10_im, b_S0_C0_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_mul_ps( u_10_re , b_S0_C0_IM );
ub_S0_C1_IM = _mm512_fnmadd_ps(u_10_im, b_S0_C0_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_re, b_S0_C1_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_im, b_S0_C1_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_re, b_S0_C1_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fnmadd_ps(u_11_im, b_S0_C1_RE, ub_S0_C1_IM);
 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+32) ), _MM_HINT_T1);

ub_S0_C1_RE = _mm512_fmadd_ps(u_12_re, b_S0_C2_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fmadd_ps(u_12_im, b_S0_C2_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_12_re, b_S0_C2_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fnmadd_ps(u_12_im, b_S0_C2_RE, ub_S0_C1_IM);
ub_S0_C2_RE = _mm512_mul_ps( u_20_re , b_S0_C0_RE );
ub_S0_C2_RE = _mm512_fmadd_ps(u_20_im, b_S0_C0_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_mul_ps( u_20_re , b_S0_C0_IM );
 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+48) ), _MM_HINT_T1);

ub_S0_C2_IM = _mm512_fnmadd_ps(u_20_im, b_S0_C0_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_21_re, b_S0_C1_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fmadd_ps(u_21_im, b_S0_C1_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_21_re, b_S0_C1_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fnmadd_ps(u_21_im, b_S0_C1_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_22_re, b_S0_C2_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fmadd_ps(u_22_im, b_S0_C2_IM, ub_S0_C2_RE);
 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+64) ), _MM_HINT_T1);

ub_S0_C2_IM = _mm512_fmadd_ps(u_22_re, b_S0_C2_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fnmadd_ps(u_22_im, b_S0_C2_RE, ub_S0_C2_IM);
dout_S0_C0_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C0_RE, dout_S0_C0_RE);
dout_S0_C0_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C0_IM, dout_S0_C0_IM);
dout_S0_C1_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C1_RE, dout_S0_C1_RE);
dout_S0_C1_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C1_IM, dout_S0_C1_IM);
dout_S0_C2_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C2_RE, dout_S0_C2_RE);
 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+80) ), _MM_HINT_T1);

dout_S0_C2_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C2_IM, dout_S0_C2_IM);
dout_S2_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_IM, dout_S2_C0_RE);
dout_S2_C0_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C0_RE, dout_S2_C0_IM);
dout_S2_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_IM, dout_S2_C1_RE);
dout_S2_C1_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C1_RE, dout_S2_C1_IM);
dout_S2_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_IM, dout_S2_C2_RE);
dout_S2_C2_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C2_RE, dout_S2_C2_IM);
 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+96) ), _MM_HINT_T1);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*zbBase)[0][1][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*zbBase)[0][1][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*zbBase)[0][3][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+112) ), _MM_HINT_T1);

psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*zbBase)[0][3][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S1_C0_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S1_C0_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*zbBase)[1][1][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*zbBase)[1][1][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+128) ), _MM_HINT_T1);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*zbBase)[1][3][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*zbBase)[1][3][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S1_C1_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S1_C1_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+144) ), _MM_HINT_T1);

psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*zbBase)[2][1][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*zbBase)[2][1][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*zbBase)[2][3][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*zbBase)[2][3][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+160) ), _MM_HINT_T1);

b_S1_C2_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S1_C2_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
ub_S1_C0_RE = _mm512_mul_ps( u_00_re , b_S1_C0_RE );
ub_S1_C0_RE = _mm512_fmadd_ps(u_00_im, b_S1_C0_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_mul_ps( u_00_re , b_S1_C0_IM );
ub_S1_C0_IM = _mm512_fnmadd_ps(u_00_im, b_S1_C0_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_01_re, b_S1_C1_RE, ub_S1_C0_RE);
 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+176) ), _MM_HINT_T1);

ub_S1_C0_RE = _mm512_fmadd_ps(u_01_im, b_S1_C1_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_01_re, b_S1_C1_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fnmadd_ps(u_01_im, b_S1_C1_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_02_re, b_S1_C2_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fmadd_ps(u_02_im, b_S1_C2_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_02_re, b_S1_C2_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fnmadd_ps(u_02_im, b_S1_C2_RE, ub_S1_C0_IM);
 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+192) ), _MM_HINT_T1);

ub_S1_C1_RE = _mm512_mul_ps( u_10_re , b_S1_C0_RE );
ub_S1_C1_RE = _mm512_fmadd_ps(u_10_im, b_S1_C0_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_mul_ps( u_10_re , b_S1_C0_IM );
ub_S1_C1_IM = _mm512_fnmadd_ps(u_10_im, b_S1_C0_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_re, b_S1_C1_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_im, b_S1_C1_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_re, b_S1_C1_IM, ub_S1_C1_IM);
 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+208) ), _MM_HINT_T1);

ub_S1_C1_IM = _mm512_fnmadd_ps(u_11_im, b_S1_C1_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_12_re, b_S1_C2_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fmadd_ps(u_12_im, b_S1_C2_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_12_re, b_S1_C2_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fnmadd_ps(u_12_im, b_S1_C2_RE, ub_S1_C1_IM);
ub_S1_C2_RE = _mm512_mul_ps( u_20_re , b_S1_C0_RE );
ub_S1_C2_RE = _mm512_fmadd_ps(u_20_im, b_S1_C0_IM, ub_S1_C2_RE);
 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+224) ), _MM_HINT_T1);

ub_S1_C2_IM = _mm512_mul_ps( u_20_re , b_S1_C0_IM );
ub_S1_C2_IM = _mm512_fnmadd_ps(u_20_im, b_S1_C0_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_21_re, b_S1_C1_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fmadd_ps(u_21_im, b_S1_C1_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_21_re, b_S1_C1_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fnmadd_ps(u_21_im, b_S1_C1_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_22_re, b_S1_C2_RE, ub_S1_C2_RE);
 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+240) ), _MM_HINT_T1);

ub_S1_C2_RE = _mm512_fmadd_ps(u_22_im, b_S1_C2_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_re, b_S1_C2_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fnmadd_ps(u_22_im, b_S1_C2_RE, ub_S1_C2_IM);
dout_S1_C0_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C0_RE, dout_S1_C0_RE);
dout_S1_C0_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C0_IM, dout_S1_C0_IM);
dout_S1_C1_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C1_RE, dout_S1_C1_RE);
dout_S1_C1_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C1_IM, dout_S1_C1_IM);
 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+256) ), _MM_HINT_T1);

dout_S1_C2_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C2_RE, dout_S1_C2_RE);
dout_S1_C2_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C2_IM, dout_S1_C2_IM);
dout_S3_C0_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C0_IM, dout_S3_C0_RE);
dout_S3_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_RE, dout_S3_C0_IM);
dout_S3_C1_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C1_IM, dout_S3_C1_RE);
dout_S3_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_RE, dout_S3_C1_IM);
dout_S3_C2_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C2_IM, dout_S3_C2_RE);
 _mm_prefetch((const char *)( (((*gBase)[0][0][0][0] + gprefdist)+272) ), _MM_HINT_T1);

dout_S3_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_RE, dout_S3_C2_IM);
}
 if ( accumulate[5] ) { 
__m512 beta_vec = _mm512_setzero_ps(); 
beta_vec = _mm512_extload_ps((&coeff_s), _MM_UPCONV_PS_NONE, _MM_BROADCAST_1X16, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+0) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+16) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+0) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+32) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+48) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+64) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+80) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+96) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+112) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+128) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+16) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+144) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+160) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+176) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+192) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+208) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+224) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+240) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+32) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+256) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+272) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+288) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+304) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+320) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+336) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+352) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+48) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*zfBase)[0][0][0]+368) + offs[0]) ), _MM_HINT_T0);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*zfBase)[0][0][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*zfBase)[0][0][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*zfBase)[0][2][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+64) ), _MM_HINT_T1);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*zfBase)[0][2][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S0_C0_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S0_C0_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*zfBase)[1][0][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+80) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*zfBase)[1][0][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*zfBase)[1][2][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*zfBase)[1][2][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S0_C1_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S0_C1_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+96) ), _MM_HINT_T1);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*zfBase)[2][0][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*zfBase)[2][0][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*zfBase)[2][2][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+112) ), _MM_HINT_T1);

psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*zfBase)[2][2][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S0_C2_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_IM );
b_S0_C2_IM = _mm512_add_ps( psi_S0_IM , psi_S1_RE );
 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+16) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+48) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+128) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+80) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+112) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+144) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+160) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+144) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+176) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+192) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+208) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+224) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+240) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+256) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[5][0][0][0]+272) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+160) ), _MM_HINT_T1);

u_00_re = _mm512_mask_extload_ps(u_00_re, 0xFFFF, (*gBase)[5][0][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_00_im = _mm512_mask_extload_ps(u_00_im, 0xFFFF, (*gBase)[5][0][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_01_re = _mm512_mask_extload_ps(u_01_re, 0xFFFF, (*gBase)[5][0][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_01_im = _mm512_mask_extload_ps(u_01_im, 0xFFFF, (*gBase)[5][0][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_02_re = _mm512_mask_extload_ps(u_02_re, 0xFFFF, (*gBase)[5][0][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_02_im = _mm512_mask_extload_ps(u_02_im, 0xFFFF, (*gBase)[5][0][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_10_re = _mm512_mask_extload_ps(u_10_re, 0xFFFF, (*gBase)[5][1][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+176) ), _MM_HINT_T1);

u_10_im = _mm512_mask_extload_ps(u_10_im, 0xFFFF, (*gBase)[5][1][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_11_re = _mm512_mask_extload_ps(u_11_re, 0xFFFF, (*gBase)[5][1][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_11_im = _mm512_mask_extload_ps(u_11_im, 0xFFFF, (*gBase)[5][1][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_12_re = _mm512_mask_extload_ps(u_12_re, 0xFFFF, (*gBase)[5][1][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_12_im = _mm512_mask_extload_ps(u_12_im, 0xFFFF, (*gBase)[5][1][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_20_re = _mm512_mask_extload_ps(u_20_re, 0xFFFF, (*gBase)[5][2][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_20_im = _mm512_mask_extload_ps(u_20_im, 0xFFFF, (*gBase)[5][2][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+192) ), _MM_HINT_T1);

u_21_re = _mm512_mask_extload_ps(u_21_re, 0xFFFF, (*gBase)[5][2][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_21_im = _mm512_mask_extload_ps(u_21_im, 0xFFFF, (*gBase)[5][2][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_22_re = _mm512_mask_extload_ps(u_22_re, 0xFFFF, (*gBase)[5][2][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_22_im = _mm512_mask_extload_ps(u_22_im, 0xFFFF, (*gBase)[5][2][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

ub_S0_C0_RE = _mm512_mul_ps( u_00_re , b_S0_C0_RE );
ub_S0_C0_RE = _mm512_fnmadd_ps(u_00_im, b_S0_C0_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_mul_ps( u_00_re , b_S0_C0_IM );
 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+208) ), _MM_HINT_T1);

ub_S0_C0_IM = _mm512_fmadd_ps(u_00_im, b_S0_C0_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_10_re, b_S0_C1_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fnmadd_ps(u_10_im, b_S0_C1_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_10_re, b_S0_C1_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fmadd_ps(u_10_im, b_S0_C1_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_20_re, b_S0_C2_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fnmadd_ps(u_20_im, b_S0_C2_IM, ub_S0_C0_RE);
 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+224) ), _MM_HINT_T1);

ub_S0_C0_IM = _mm512_fmadd_ps(u_20_re, b_S0_C2_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fmadd_ps(u_20_im, b_S0_C2_RE, ub_S0_C0_IM);
ub_S0_C1_RE = _mm512_mul_ps( u_01_re , b_S0_C0_RE );
ub_S0_C1_RE = _mm512_fnmadd_ps(u_01_im, b_S0_C0_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_mul_ps( u_01_re , b_S0_C0_IM );
ub_S0_C1_IM = _mm512_fmadd_ps(u_01_im, b_S0_C0_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_re, b_S0_C1_RE, ub_S0_C1_RE);
 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+240) ), _MM_HINT_T1);

ub_S0_C1_RE = _mm512_fnmadd_ps(u_11_im, b_S0_C1_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_re, b_S0_C1_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_im, b_S0_C1_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_21_re, b_S0_C2_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fnmadd_ps(u_21_im, b_S0_C2_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_21_re, b_S0_C2_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fmadd_ps(u_21_im, b_S0_C2_RE, ub_S0_C1_IM);
 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+256) ), _MM_HINT_T1);

ub_S0_C2_RE = _mm512_mul_ps( u_02_re , b_S0_C0_RE );
ub_S0_C2_RE = _mm512_fnmadd_ps(u_02_im, b_S0_C0_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_mul_ps( u_02_re , b_S0_C0_IM );
ub_S0_C2_IM = _mm512_fmadd_ps(u_02_im, b_S0_C0_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_12_re, b_S0_C1_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fnmadd_ps(u_12_im, b_S0_C1_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_12_re, b_S0_C1_IM, ub_S0_C2_IM);
 _mm_prefetch((const char *)( (((*gBase)[1][0][0][0] + gprefdist)+272) ), _MM_HINT_T1);

ub_S0_C2_IM = _mm512_fmadd_ps(u_12_im, b_S0_C1_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_22_re, b_S0_C2_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fnmadd_ps(u_22_im, b_S0_C2_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_re, b_S0_C2_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_im, b_S0_C2_RE, ub_S0_C2_IM);
dout_S0_C0_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C0_RE, dout_S0_C0_RE);
dout_S0_C0_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C0_IM, dout_S0_C0_IM);
 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+0) ), _MM_HINT_T1);

dout_S0_C1_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C1_RE, dout_S0_C1_RE);
dout_S0_C1_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C1_IM, dout_S0_C1_IM);
dout_S0_C2_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C2_RE, dout_S0_C2_RE);
dout_S0_C2_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C2_IM, dout_S0_C2_IM);
dout_S2_C0_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C0_IM, dout_S2_C0_RE);
dout_S2_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_RE, dout_S2_C0_IM);
dout_S2_C1_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C1_IM, dout_S2_C1_RE);
 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+16) ), _MM_HINT_T1);

dout_S2_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_RE, dout_S2_C1_IM);
dout_S2_C2_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C2_IM, dout_S2_C2_RE);
dout_S2_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_RE, dout_S2_C2_IM);
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*zfBase)[0][1][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*zfBase)[0][1][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+32) ), _MM_HINT_T1);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*zfBase)[0][3][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*zfBase)[0][3][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S1_C0_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S1_C0_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+48) ), _MM_HINT_T1);

psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*zfBase)[1][1][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*zfBase)[1][1][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*zfBase)[1][3][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*zfBase)[1][3][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+64) ), _MM_HINT_T1);

b_S1_C1_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S1_C1_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*zfBase)[2][1][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*zfBase)[2][1][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+80) ), _MM_HINT_T1);

psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*zfBase)[2][3][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*zfBase)[2][3][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S1_C2_RE = _mm512_add_ps( psi_S0_RE , psi_S1_IM );
b_S1_C2_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_RE );
ub_S1_C0_RE = _mm512_mul_ps( u_00_re , b_S1_C0_RE );
ub_S1_C0_RE = _mm512_fnmadd_ps(u_00_im, b_S1_C0_IM, ub_S1_C0_RE);
 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+96) ), _MM_HINT_T1);

ub_S1_C0_IM = _mm512_mul_ps( u_00_re , b_S1_C0_IM );
ub_S1_C0_IM = _mm512_fmadd_ps(u_00_im, b_S1_C0_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_10_re, b_S1_C1_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fnmadd_ps(u_10_im, b_S1_C1_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_10_re, b_S1_C1_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fmadd_ps(u_10_im, b_S1_C1_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_20_re, b_S1_C2_RE, ub_S1_C0_RE);
 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+112) ), _MM_HINT_T1);

ub_S1_C0_RE = _mm512_fnmadd_ps(u_20_im, b_S1_C2_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_20_re, b_S1_C2_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fmadd_ps(u_20_im, b_S1_C2_RE, ub_S1_C0_IM);
ub_S1_C1_RE = _mm512_mul_ps( u_01_re , b_S1_C0_RE );
ub_S1_C1_RE = _mm512_fnmadd_ps(u_01_im, b_S1_C0_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_mul_ps( u_01_re , b_S1_C0_IM );
ub_S1_C1_IM = _mm512_fmadd_ps(u_01_im, b_S1_C0_RE, ub_S1_C1_IM);
 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+128) ), _MM_HINT_T1);

ub_S1_C1_RE = _mm512_fmadd_ps(u_11_re, b_S1_C1_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fnmadd_ps(u_11_im, b_S1_C1_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_re, b_S1_C1_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_im, b_S1_C1_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_21_re, b_S1_C2_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fnmadd_ps(u_21_im, b_S1_C2_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_21_re, b_S1_C2_IM, ub_S1_C1_IM);
 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+144) ), _MM_HINT_T1);

ub_S1_C1_IM = _mm512_fmadd_ps(u_21_im, b_S1_C2_RE, ub_S1_C1_IM);
ub_S1_C2_RE = _mm512_mul_ps( u_02_re , b_S1_C0_RE );
ub_S1_C2_RE = _mm512_fnmadd_ps(u_02_im, b_S1_C0_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_mul_ps( u_02_re , b_S1_C0_IM );
ub_S1_C2_IM = _mm512_fmadd_ps(u_02_im, b_S1_C0_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_12_re, b_S1_C1_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fnmadd_ps(u_12_im, b_S1_C1_IM, ub_S1_C2_RE);
 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+160) ), _MM_HINT_T1);

ub_S1_C2_IM = _mm512_fmadd_ps(u_12_re, b_S1_C1_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fmadd_ps(u_12_im, b_S1_C1_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_22_re, b_S1_C2_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fnmadd_ps(u_22_im, b_S1_C2_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_re, b_S1_C2_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_im, b_S1_C2_RE, ub_S1_C2_IM);
dout_S1_C0_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C0_RE, dout_S1_C0_RE);
 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+176) ), _MM_HINT_T1);

dout_S1_C0_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C0_IM, dout_S1_C0_IM);
dout_S1_C1_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C1_RE, dout_S1_C1_RE);
dout_S1_C1_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C1_IM, dout_S1_C1_IM);
dout_S1_C2_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C2_RE, dout_S1_C2_RE);
dout_S1_C2_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C2_IM, dout_S1_C2_IM);
dout_S3_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_IM, dout_S3_C0_RE);
dout_S3_C0_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C0_RE, dout_S3_C0_IM);
 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+192) ), _MM_HINT_T1);

dout_S3_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_IM, dout_S3_C1_RE);
dout_S3_C1_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C1_RE, dout_S3_C1_IM);
dout_S3_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_IM, dout_S3_C2_RE);
dout_S3_C2_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C2_RE, dout_S3_C2_IM);
}
 if ( accumulate[6] ) { 
__m512 beta_vec = _mm512_setzero_ps(); 
 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+208) ), _MM_HINT_T1);

beta_vec = _mm512_extload_ps((&coeff_t_b), _MM_UPCONV_PS_NONE, _MM_BROADCAST_1X16, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+0) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+16) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+32) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+48) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+64) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+80) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+224) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+96) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+112) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+128) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+144) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+160) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+176) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+192) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+240) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+208) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+224) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+240) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+256) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+272) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+288) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+304) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+256) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+320) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+336) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+352) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tbBase)[0][0][0]+368) + offs[0]) ), _MM_HINT_T0);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*tbBase)[0][0][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*gBase)[2][0][0][0] + gprefdist)+272) ), _MM_HINT_T1);

psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*tbBase)[0][0][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*tbBase)[0][2][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*tbBase)[0][2][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S0_C0_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S0_C0_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+0) ), _MM_HINT_T1);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*tbBase)[1][0][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*tbBase)[1][0][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*tbBase)[1][2][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+16) ), _MM_HINT_T1);

psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*tbBase)[1][2][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S0_C1_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S0_C1_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*tbBase)[2][0][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*tbBase)[2][0][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+32) ), _MM_HINT_T1);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*tbBase)[2][2][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*tbBase)[2][2][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S0_C2_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S0_C2_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+48) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+16) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+48) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+80) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+112) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+64) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+144) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+160) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+176) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+192) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+208) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+224) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+80) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+240) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+256) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[6][0][0][0]+272) ), _MM_HINT_T0);

u_00_re = _mm512_mask_extload_ps(u_00_re, 0xFFFF, (*gBase)[6][0][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_00_im = _mm512_mask_extload_ps(u_00_im, 0xFFFF, (*gBase)[6][0][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_01_re = _mm512_mask_extload_ps(u_01_re, 0xFFFF, (*gBase)[6][0][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_01_im = _mm512_mask_extload_ps(u_01_im, 0xFFFF, (*gBase)[6][0][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+96) ), _MM_HINT_T1);

u_02_re = _mm512_mask_extload_ps(u_02_re, 0xFFFF, (*gBase)[6][0][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_02_im = _mm512_mask_extload_ps(u_02_im, 0xFFFF, (*gBase)[6][0][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_10_re = _mm512_mask_extload_ps(u_10_re, 0xFFFF, (*gBase)[6][1][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_10_im = _mm512_mask_extload_ps(u_10_im, 0xFFFF, (*gBase)[6][1][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_11_re = _mm512_mask_extload_ps(u_11_re, 0xFFFF, (*gBase)[6][1][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_11_im = _mm512_mask_extload_ps(u_11_im, 0xFFFF, (*gBase)[6][1][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_12_re = _mm512_mask_extload_ps(u_12_re, 0xFFFF, (*gBase)[6][1][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+112) ), _MM_HINT_T1);

u_12_im = _mm512_mask_extload_ps(u_12_im, 0xFFFF, (*gBase)[6][1][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_20_re = _mm512_mask_extload_ps(u_20_re, 0xFFFF, (*gBase)[6][2][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_20_im = _mm512_mask_extload_ps(u_20_im, 0xFFFF, (*gBase)[6][2][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_21_re = _mm512_mask_extload_ps(u_21_re, 0xFFFF, (*gBase)[6][2][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_21_im = _mm512_mask_extload_ps(u_21_im, 0xFFFF, (*gBase)[6][2][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_22_re = _mm512_mask_extload_ps(u_22_re, 0xFFFF, (*gBase)[6][2][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_22_im = _mm512_mask_extload_ps(u_22_im, 0xFFFF, (*gBase)[6][2][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+128) ), _MM_HINT_T1);

ub_S0_C0_RE = _mm512_mul_ps( u_00_re , b_S0_C0_RE );
ub_S0_C0_RE = _mm512_fmadd_ps(u_00_im, b_S0_C0_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_mul_ps( u_00_re , b_S0_C0_IM );
ub_S0_C0_IM = _mm512_fnmadd_ps(u_00_im, b_S0_C0_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_01_re, b_S0_C1_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fmadd_ps(u_01_im, b_S0_C1_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_01_re, b_S0_C1_IM, ub_S0_C0_IM);
 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+144) ), _MM_HINT_T1);

ub_S0_C0_IM = _mm512_fnmadd_ps(u_01_im, b_S0_C1_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_02_re, b_S0_C2_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fmadd_ps(u_02_im, b_S0_C2_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_02_re, b_S0_C2_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fnmadd_ps(u_02_im, b_S0_C2_RE, ub_S0_C0_IM);
ub_S0_C1_RE = _mm512_mul_ps( u_10_re , b_S0_C0_RE );
ub_S0_C1_RE = _mm512_fmadd_ps(u_10_im, b_S0_C0_IM, ub_S0_C1_RE);
 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+160) ), _MM_HINT_T1);

ub_S0_C1_IM = _mm512_mul_ps( u_10_re , b_S0_C0_IM );
ub_S0_C1_IM = _mm512_fnmadd_ps(u_10_im, b_S0_C0_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_re, b_S0_C1_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_im, b_S0_C1_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_re, b_S0_C1_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fnmadd_ps(u_11_im, b_S0_C1_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_12_re, b_S0_C2_RE, ub_S0_C1_RE);
 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+176) ), _MM_HINT_T1);

ub_S0_C1_RE = _mm512_fmadd_ps(u_12_im, b_S0_C2_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_12_re, b_S0_C2_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fnmadd_ps(u_12_im, b_S0_C2_RE, ub_S0_C1_IM);
ub_S0_C2_RE = _mm512_mul_ps( u_20_re , b_S0_C0_RE );
ub_S0_C2_RE = _mm512_fmadd_ps(u_20_im, b_S0_C0_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_mul_ps( u_20_re , b_S0_C0_IM );
ub_S0_C2_IM = _mm512_fnmadd_ps(u_20_im, b_S0_C0_RE, ub_S0_C2_IM);
 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+192) ), _MM_HINT_T1);

ub_S0_C2_RE = _mm512_fmadd_ps(u_21_re, b_S0_C1_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fmadd_ps(u_21_im, b_S0_C1_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_21_re, b_S0_C1_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fnmadd_ps(u_21_im, b_S0_C1_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_22_re, b_S0_C2_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fmadd_ps(u_22_im, b_S0_C2_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_re, b_S0_C2_IM, ub_S0_C2_IM);
 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+208) ), _MM_HINT_T1);

ub_S0_C2_IM = _mm512_fnmadd_ps(u_22_im, b_S0_C2_RE, ub_S0_C2_IM);
dout_S0_C0_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C0_RE, dout_S0_C0_RE);
dout_S0_C0_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C0_IM, dout_S0_C0_IM);
dout_S0_C1_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C1_RE, dout_S0_C1_RE);
dout_S0_C1_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C1_IM, dout_S0_C1_IM);
dout_S0_C2_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C2_RE, dout_S0_C2_RE);
dout_S0_C2_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C2_IM, dout_S0_C2_IM);
 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+224) ), _MM_HINT_T1);

dout_S2_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_RE, dout_S2_C0_RE);
dout_S2_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C0_IM, dout_S2_C0_IM);
dout_S2_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_RE, dout_S2_C1_RE);
dout_S2_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C1_IM, dout_S2_C1_IM);
dout_S2_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_RE, dout_S2_C2_RE);
dout_S2_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S0_C2_IM, dout_S2_C2_IM);
psi_S0_RE = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+240) ), _MM_HINT_T1);

psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*tbBase)[0][1][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*tbBase)[0][1][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*tbBase)[0][3][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*tbBase)[0][3][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+256) ), _MM_HINT_T1);

b_S1_C0_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S1_C0_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*tbBase)[1][1][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*tbBase)[1][1][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*gBase)[3][0][0][0] + gprefdist)+272) ), _MM_HINT_T1);

psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*tbBase)[1][3][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*tbBase)[1][3][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S1_C1_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
b_S1_C1_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*tbBase)[2][1][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+0) ), _MM_HINT_T1);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*tbBase)[2][1][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*tbBase)[2][3][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*tbBase)[2][3][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S1_C2_RE = _mm512_sub_ps( psi_S0_RE , psi_S1_RE );
 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+16) ), _MM_HINT_T1);

b_S1_C2_IM = _mm512_sub_ps( psi_S0_IM , psi_S1_IM );
ub_S1_C0_RE = _mm512_mul_ps( u_00_re , b_S1_C0_RE );
ub_S1_C0_RE = _mm512_fmadd_ps(u_00_im, b_S1_C0_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_mul_ps( u_00_re , b_S1_C0_IM );
ub_S1_C0_IM = _mm512_fnmadd_ps(u_00_im, b_S1_C0_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_01_re, b_S1_C1_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fmadd_ps(u_01_im, b_S1_C1_IM, ub_S1_C0_RE);
 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+32) ), _MM_HINT_T1);

ub_S1_C0_IM = _mm512_fmadd_ps(u_01_re, b_S1_C1_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fnmadd_ps(u_01_im, b_S1_C1_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_02_re, b_S1_C2_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fmadd_ps(u_02_im, b_S1_C2_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_02_re, b_S1_C2_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fnmadd_ps(u_02_im, b_S1_C2_RE, ub_S1_C0_IM);
ub_S1_C1_RE = _mm512_mul_ps( u_10_re , b_S1_C0_RE );
 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+48) ), _MM_HINT_T1);

ub_S1_C1_RE = _mm512_fmadd_ps(u_10_im, b_S1_C0_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_mul_ps( u_10_re , b_S1_C0_IM );
ub_S1_C1_IM = _mm512_fnmadd_ps(u_10_im, b_S1_C0_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_re, b_S1_C1_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_im, b_S1_C1_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_re, b_S1_C1_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fnmadd_ps(u_11_im, b_S1_C1_RE, ub_S1_C1_IM);
 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+64) ), _MM_HINT_T1);

ub_S1_C1_RE = _mm512_fmadd_ps(u_12_re, b_S1_C2_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fmadd_ps(u_12_im, b_S1_C2_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_12_re, b_S1_C2_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fnmadd_ps(u_12_im, b_S1_C2_RE, ub_S1_C1_IM);
ub_S1_C2_RE = _mm512_mul_ps( u_20_re , b_S1_C0_RE );
ub_S1_C2_RE = _mm512_fmadd_ps(u_20_im, b_S1_C0_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_mul_ps( u_20_re , b_S1_C0_IM );
 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+80) ), _MM_HINT_T1);

ub_S1_C2_IM = _mm512_fnmadd_ps(u_20_im, b_S1_C0_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_21_re, b_S1_C1_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fmadd_ps(u_21_im, b_S1_C1_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_21_re, b_S1_C1_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fnmadd_ps(u_21_im, b_S1_C1_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_22_re, b_S1_C2_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fmadd_ps(u_22_im, b_S1_C2_IM, ub_S1_C2_RE);
 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+96) ), _MM_HINT_T1);

ub_S1_C2_IM = _mm512_fmadd_ps(u_22_re, b_S1_C2_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fnmadd_ps(u_22_im, b_S1_C2_RE, ub_S1_C2_IM);
dout_S1_C0_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C0_RE, dout_S1_C0_RE);
dout_S1_C0_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C0_IM, dout_S1_C0_IM);
dout_S1_C1_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C1_RE, dout_S1_C1_RE);
dout_S1_C1_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C1_IM, dout_S1_C1_IM);
dout_S1_C2_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C2_RE, dout_S1_C2_RE);
 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+112) ), _MM_HINT_T1);

dout_S1_C2_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C2_IM, dout_S1_C2_IM);
dout_S3_C0_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_RE, dout_S3_C0_RE);
dout_S3_C0_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C0_IM, dout_S3_C0_IM);
dout_S3_C1_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_RE, dout_S3_C1_RE);
dout_S3_C1_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C1_IM, dout_S3_C1_IM);
dout_S3_C2_RE = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_RE, dout_S3_C2_RE);
dout_S3_C2_IM = _mm512_fnmadd_ps(beta_vec, ub_S1_C2_IM, dout_S3_C2_IM);
 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+128) ), _MM_HINT_T1);

}
 if ( accumulate[7] ) { 
__m512 beta_vec = _mm512_setzero_ps(); 
beta_vec = _mm512_extload_ps((&coeff_t_f), _MM_UPCONV_PS_NONE, _MM_BROADCAST_1X16, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+0) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+16) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+32) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+144) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+48) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+64) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+80) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+96) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+112) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+128) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+144) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+160) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+160) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+176) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+192) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+208) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+224) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+240) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+256) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+176) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+272) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+288) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+304) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+320) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+336) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+352) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*tfBase)[0][0][0]+368) + offs[0]) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+192) ), _MM_HINT_T1);

psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*tfBase)[0][0][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*tfBase)[0][0][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*tfBase)[0][2][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+208) ), _MM_HINT_T1);

psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*tfBase)[0][2][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S0_C0_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
b_S0_C0_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*tfBase)[1][0][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*tfBase)[1][0][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+224) ), _MM_HINT_T1);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*tfBase)[1][2][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*tfBase)[1][2][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S0_C1_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
b_S0_C1_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+240) ), _MM_HINT_T1);

psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*tfBase)[2][0][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*tfBase)[2][0][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*tfBase)[2][2][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*tfBase)[2][2][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+256) ), _MM_HINT_T1);

b_S0_C2_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
b_S0_C2_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+16) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+48) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[4][0][0][0] + gprefdist)+272) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+80) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+112) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+144) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+160) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+176) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+0) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+192) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+208) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+224) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+240) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+256) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*gBase)[7][0][0][0]+272) ), _MM_HINT_T0);

u_00_re = _mm512_mask_extload_ps(u_00_re, 0xFFFF, (*gBase)[7][0][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+16) ), _MM_HINT_T1);

u_00_im = _mm512_mask_extload_ps(u_00_im, 0xFFFF, (*gBase)[7][0][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_01_re = _mm512_mask_extload_ps(u_01_re, 0xFFFF, (*gBase)[7][0][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_01_im = _mm512_mask_extload_ps(u_01_im, 0xFFFF, (*gBase)[7][0][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_02_re = _mm512_mask_extload_ps(u_02_re, 0xFFFF, (*gBase)[7][0][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_02_im = _mm512_mask_extload_ps(u_02_im, 0xFFFF, (*gBase)[7][0][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_10_re = _mm512_mask_extload_ps(u_10_re, 0xFFFF, (*gBase)[7][1][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_10_im = _mm512_mask_extload_ps(u_10_im, 0xFFFF, (*gBase)[7][1][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+32) ), _MM_HINT_T1);

u_11_re = _mm512_mask_extload_ps(u_11_re, 0xFFFF, (*gBase)[7][1][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_11_im = _mm512_mask_extload_ps(u_11_im, 0xFFFF, (*gBase)[7][1][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_12_re = _mm512_mask_extload_ps(u_12_re, 0xFFFF, (*gBase)[7][1][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_12_im = _mm512_mask_extload_ps(u_12_im, 0xFFFF, (*gBase)[7][1][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_20_re = _mm512_mask_extload_ps(u_20_re, 0xFFFF, (*gBase)[7][2][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_20_im = _mm512_mask_extload_ps(u_20_im, 0xFFFF, (*gBase)[7][2][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_21_re = _mm512_mask_extload_ps(u_21_re, 0xFFFF, (*gBase)[7][2][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+48) ), _MM_HINT_T1);

u_21_im = _mm512_mask_extload_ps(u_21_im, 0xFFFF, (*gBase)[7][2][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_22_re = _mm512_mask_extload_ps(u_22_re, 0xFFFF, (*gBase)[7][2][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

u_22_im = _mm512_mask_extload_ps(u_22_im, 0xFFFF, (*gBase)[7][2][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

ub_S0_C0_RE = _mm512_mul_ps( u_00_re , b_S0_C0_RE );
ub_S0_C0_RE = _mm512_fnmadd_ps(u_00_im, b_S0_C0_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_mul_ps( u_00_re , b_S0_C0_IM );
ub_S0_C0_IM = _mm512_fmadd_ps(u_00_im, b_S0_C0_RE, ub_S0_C0_IM);
 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+64) ), _MM_HINT_T1);

ub_S0_C0_RE = _mm512_fmadd_ps(u_10_re, b_S0_C1_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fnmadd_ps(u_10_im, b_S0_C1_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_10_re, b_S0_C1_IM, ub_S0_C0_IM);
ub_S0_C0_IM = _mm512_fmadd_ps(u_10_im, b_S0_C1_RE, ub_S0_C0_IM);
ub_S0_C0_RE = _mm512_fmadd_ps(u_20_re, b_S0_C2_RE, ub_S0_C0_RE);
ub_S0_C0_RE = _mm512_fnmadd_ps(u_20_im, b_S0_C2_IM, ub_S0_C0_RE);
ub_S0_C0_IM = _mm512_fmadd_ps(u_20_re, b_S0_C2_IM, ub_S0_C0_IM);
 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+80) ), _MM_HINT_T1);

ub_S0_C0_IM = _mm512_fmadd_ps(u_20_im, b_S0_C2_RE, ub_S0_C0_IM);
ub_S0_C1_RE = _mm512_mul_ps( u_01_re , b_S0_C0_RE );
ub_S0_C1_RE = _mm512_fnmadd_ps(u_01_im, b_S0_C0_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_mul_ps( u_01_re , b_S0_C0_IM );
ub_S0_C1_IM = _mm512_fmadd_ps(u_01_im, b_S0_C0_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_11_re, b_S0_C1_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fnmadd_ps(u_11_im, b_S0_C1_IM, ub_S0_C1_RE);
 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+96) ), _MM_HINT_T1);

ub_S0_C1_IM = _mm512_fmadd_ps(u_11_re, b_S0_C1_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fmadd_ps(u_11_im, b_S0_C1_RE, ub_S0_C1_IM);
ub_S0_C1_RE = _mm512_fmadd_ps(u_21_re, b_S0_C2_RE, ub_S0_C1_RE);
ub_S0_C1_RE = _mm512_fnmadd_ps(u_21_im, b_S0_C2_IM, ub_S0_C1_RE);
ub_S0_C1_IM = _mm512_fmadd_ps(u_21_re, b_S0_C2_IM, ub_S0_C1_IM);
ub_S0_C1_IM = _mm512_fmadd_ps(u_21_im, b_S0_C2_RE, ub_S0_C1_IM);
ub_S0_C2_RE = _mm512_mul_ps( u_02_re , b_S0_C0_RE );
 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+112) ), _MM_HINT_T1);

ub_S0_C2_RE = _mm512_fnmadd_ps(u_02_im, b_S0_C0_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_mul_ps( u_02_re , b_S0_C0_IM );
ub_S0_C2_IM = _mm512_fmadd_ps(u_02_im, b_S0_C0_RE, ub_S0_C2_IM);
ub_S0_C2_RE = _mm512_fmadd_ps(u_12_re, b_S0_C1_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fnmadd_ps(u_12_im, b_S0_C1_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_12_re, b_S0_C1_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fmadd_ps(u_12_im, b_S0_C1_RE, ub_S0_C2_IM);
 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+128) ), _MM_HINT_T1);

ub_S0_C2_RE = _mm512_fmadd_ps(u_22_re, b_S0_C2_RE, ub_S0_C2_RE);
ub_S0_C2_RE = _mm512_fnmadd_ps(u_22_im, b_S0_C2_IM, ub_S0_C2_RE);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_re, b_S0_C2_IM, ub_S0_C2_IM);
ub_S0_C2_IM = _mm512_fmadd_ps(u_22_im, b_S0_C2_RE, ub_S0_C2_IM);
dout_S0_C0_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C0_RE, dout_S0_C0_RE);
dout_S0_C0_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C0_IM, dout_S0_C0_IM);
dout_S0_C1_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C1_RE, dout_S0_C1_RE);
 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+144) ), _MM_HINT_T1);

dout_S0_C1_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C1_IM, dout_S0_C1_IM);
dout_S0_C2_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C2_RE, dout_S0_C2_RE);
dout_S0_C2_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C2_IM, dout_S0_C2_IM);
dout_S2_C0_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C0_RE, dout_S2_C0_RE);
dout_S2_C0_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C0_IM, dout_S2_C0_IM);
dout_S2_C1_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C1_RE, dout_S2_C1_RE);
dout_S2_C1_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C1_IM, dout_S2_C1_IM);
 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+160) ), _MM_HINT_T1);

dout_S2_C2_RE = _mm512_fmadd_ps(beta_vec, ub_S0_C2_RE, dout_S2_C2_RE);
dout_S2_C2_IM = _mm512_fmadd_ps(beta_vec, ub_S0_C2_IM, dout_S2_C2_IM);
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*tfBase)[0][1][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*tfBase)[0][1][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+176) ), _MM_HINT_T1);

psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*tfBase)[0][3][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*tfBase)[0][3][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S1_C0_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
b_S1_C0_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*tfBase)[1][1][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+192) ), _MM_HINT_T1);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*tfBase)[1][1][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*tfBase)[1][3][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*tfBase)[1][3][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S1_C1_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+208) ), _MM_HINT_T1);

b_S1_C1_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm512_undefined(); 
psi_S0_RE = _mm512_mask_extloadunpacklo_ps(psi_S0_RE, 0xffff, ((*tfBase)[2][1][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S0_IM = _mm512_undefined(); 
psi_S0_IM = _mm512_mask_extloadunpacklo_ps(psi_S0_IM, 0xffff, ((*tfBase)[2][1][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

psi_S1_RE = _mm512_undefined(); 
psi_S1_RE = _mm512_mask_extloadunpacklo_ps(psi_S1_RE, 0xffff, ((*tfBase)[2][3][0] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+224) ), _MM_HINT_T1);

psi_S1_IM = _mm512_undefined(); 
psi_S1_IM = _mm512_mask_extloadunpacklo_ps(psi_S1_IM, 0xffff, ((*tfBase)[2][3][1] + offs[0]), _MM_UPCONV_PS_NONE, _MM_HINT_NONE);

b_S1_C2_RE = _mm512_add_ps( psi_S0_RE , psi_S1_RE );
b_S1_C2_IM = _mm512_add_ps( psi_S0_IM , psi_S1_IM );
ub_S1_C0_RE = _mm512_mul_ps( u_00_re , b_S1_C0_RE );
ub_S1_C0_RE = _mm512_fnmadd_ps(u_00_im, b_S1_C0_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_mul_ps( u_00_re , b_S1_C0_IM );
 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+240) ), _MM_HINT_T1);

ub_S1_C0_IM = _mm512_fmadd_ps(u_00_im, b_S1_C0_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_10_re, b_S1_C1_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fnmadd_ps(u_10_im, b_S1_C1_IM, ub_S1_C0_RE);
ub_S1_C0_IM = _mm512_fmadd_ps(u_10_re, b_S1_C1_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fmadd_ps(u_10_im, b_S1_C1_RE, ub_S1_C0_IM);
ub_S1_C0_RE = _mm512_fmadd_ps(u_20_re, b_S1_C2_RE, ub_S1_C0_RE);
ub_S1_C0_RE = _mm512_fnmadd_ps(u_20_im, b_S1_C2_IM, ub_S1_C0_RE);
 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+256) ), _MM_HINT_T1);

ub_S1_C0_IM = _mm512_fmadd_ps(u_20_re, b_S1_C2_IM, ub_S1_C0_IM);
ub_S1_C0_IM = _mm512_fmadd_ps(u_20_im, b_S1_C2_RE, ub_S1_C0_IM);
ub_S1_C1_RE = _mm512_mul_ps( u_01_re , b_S1_C0_RE );
ub_S1_C1_RE = _mm512_fnmadd_ps(u_01_im, b_S1_C0_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_mul_ps( u_01_re , b_S1_C0_IM );
ub_S1_C1_IM = _mm512_fmadd_ps(u_01_im, b_S1_C0_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_11_re, b_S1_C1_RE, ub_S1_C1_RE);
 _mm_prefetch((const char *)( (((*gBase)[5][0][0][0] + gprefdist)+272) ), _MM_HINT_T1);

ub_S1_C1_RE = _mm512_fnmadd_ps(u_11_im, b_S1_C1_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_re, b_S1_C1_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fmadd_ps(u_11_im, b_S1_C1_RE, ub_S1_C1_IM);
ub_S1_C1_RE = _mm512_fmadd_ps(u_21_re, b_S1_C2_RE, ub_S1_C1_RE);
ub_S1_C1_RE = _mm512_fnmadd_ps(u_21_im, b_S1_C2_IM, ub_S1_C1_RE);
ub_S1_C1_IM = _mm512_fmadd_ps(u_21_re, b_S1_C2_IM, ub_S1_C1_IM);
ub_S1_C1_IM = _mm512_fmadd_ps(u_21_im, b_S1_C2_RE, ub_S1_C1_IM);
 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+0) ), _MM_HINT_T1);

ub_S1_C2_RE = _mm512_mul_ps( u_02_re , b_S1_C0_RE );
ub_S1_C2_RE = _mm512_fnmadd_ps(u_02_im, b_S1_C0_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_mul_ps( u_02_re , b_S1_C0_IM );
ub_S1_C2_IM = _mm512_fmadd_ps(u_02_im, b_S1_C0_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_12_re, b_S1_C1_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fnmadd_ps(u_12_im, b_S1_C1_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_12_re, b_S1_C1_IM, ub_S1_C2_IM);
 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+16) ), _MM_HINT_T1);

ub_S1_C2_IM = _mm512_fmadd_ps(u_12_im, b_S1_C1_RE, ub_S1_C2_IM);
ub_S1_C2_RE = _mm512_fmadd_ps(u_22_re, b_S1_C2_RE, ub_S1_C2_RE);
ub_S1_C2_RE = _mm512_fnmadd_ps(u_22_im, b_S1_C2_IM, ub_S1_C2_RE);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_re, b_S1_C2_IM, ub_S1_C2_IM);
ub_S1_C2_IM = _mm512_fmadd_ps(u_22_im, b_S1_C2_RE, ub_S1_C2_IM);
dout_S1_C0_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C0_RE, dout_S1_C0_RE);
dout_S1_C0_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C0_IM, dout_S1_C0_IM);
 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+32) ), _MM_HINT_T1);

dout_S1_C1_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C1_RE, dout_S1_C1_RE);
dout_S1_C1_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C1_IM, dout_S1_C1_IM);
dout_S1_C2_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C2_RE, dout_S1_C2_RE);
dout_S1_C2_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C2_IM, dout_S1_C2_IM);
dout_S3_C0_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C0_RE, dout_S3_C0_RE);
dout_S3_C0_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C0_IM, dout_S3_C0_IM);
dout_S3_C1_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C1_RE, dout_S3_C1_RE);
 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+48) ), _MM_HINT_T1);

dout_S3_C1_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C1_IM, dout_S3_C1_IM);
dout_S3_C2_RE = _mm512_fmadd_ps(beta_vec, ub_S1_C2_RE, dout_S3_C2_RE);
dout_S3_C2_IM = _mm512_fmadd_ps(beta_vec, ub_S1_C2_IM, dout_S3_C2_IM);
}
 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+16) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+64) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+48) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+80) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+112) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+144) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+80) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+160) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+176) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+192) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+208) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+224) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+240) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+256) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+96) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+272) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+288) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+304) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+320) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+336) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+352) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+368) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+112) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+384) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+400) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+416) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+432) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+448) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+464) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+480) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+128) ), _MM_HINT_T1);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+496) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+512) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+528) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+544) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block1[0][0][0]+560) ), _MM_HINT_T0);

cl_full_00_RE = _mm512_mask_extload_ps(cl_full_00_RE, 0xFFFF, (*clBase).block1[0][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_00_IM = _mm512_mask_extload_ps(cl_full_00_IM, 0xFFFF, (*clBase).block1[0][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+144) ), _MM_HINT_T1);

cl_full_01_RE = _mm512_mask_extload_ps(cl_full_01_RE, 0xFFFF, (*clBase).block1[0][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_01_IM = _mm512_mask_extload_ps(cl_full_01_IM, 0xFFFF, (*clBase).block1[0][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_02_RE = _mm512_mask_extload_ps(cl_full_02_RE, 0xFFFF, (*clBase).block1[0][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_02_IM = _mm512_mask_extload_ps(cl_full_02_IM, 0xFFFF, (*clBase).block1[0][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_03_RE = _mm512_mask_extload_ps(cl_full_03_RE, 0xFFFF, (*clBase).block1[0][3][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_03_IM = _mm512_mask_extload_ps(cl_full_03_IM, 0xFFFF, (*clBase).block1[0][3][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_04_RE = _mm512_mask_extload_ps(cl_full_04_RE, 0xFFFF, (*clBase).block1[0][4][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+160) ), _MM_HINT_T1);

cl_full_04_IM = _mm512_mask_extload_ps(cl_full_04_IM, 0xFFFF, (*clBase).block1[0][4][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_05_RE = _mm512_mask_extload_ps(cl_full_05_RE, 0xFFFF, (*clBase).block1[0][5][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_05_IM = _mm512_mask_extload_ps(cl_full_05_IM, 0xFFFF, (*clBase).block1[0][5][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_10_RE = _mm512_mask_extload_ps(cl_full_10_RE, 0xFFFF, (*clBase).block1[1][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_10_IM = _mm512_mask_extload_ps(cl_full_10_IM, 0xFFFF, (*clBase).block1[1][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_11_RE = _mm512_mask_extload_ps(cl_full_11_RE, 0xFFFF, (*clBase).block1[1][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_11_IM = _mm512_mask_extload_ps(cl_full_11_IM, 0xFFFF, (*clBase).block1[1][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+176) ), _MM_HINT_T1);

cl_full_12_RE = _mm512_mask_extload_ps(cl_full_12_RE, 0xFFFF, (*clBase).block1[1][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_12_IM = _mm512_mask_extload_ps(cl_full_12_IM, 0xFFFF, (*clBase).block1[1][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_13_RE = _mm512_mask_extload_ps(cl_full_13_RE, 0xFFFF, (*clBase).block1[1][3][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_13_IM = _mm512_mask_extload_ps(cl_full_13_IM, 0xFFFF, (*clBase).block1[1][3][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_14_RE = _mm512_mask_extload_ps(cl_full_14_RE, 0xFFFF, (*clBase).block1[1][4][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_14_IM = _mm512_mask_extload_ps(cl_full_14_IM, 0xFFFF, (*clBase).block1[1][4][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_15_RE = _mm512_mask_extload_ps(cl_full_15_RE, 0xFFFF, (*clBase).block1[1][5][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+192) ), _MM_HINT_T1);

cl_full_15_IM = _mm512_mask_extload_ps(cl_full_15_IM, 0xFFFF, (*clBase).block1[1][5][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_20_RE = _mm512_mask_extload_ps(cl_full_20_RE, 0xFFFF, (*clBase).block1[2][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_20_IM = _mm512_mask_extload_ps(cl_full_20_IM, 0xFFFF, (*clBase).block1[2][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_21_RE = _mm512_mask_extload_ps(cl_full_21_RE, 0xFFFF, (*clBase).block1[2][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_21_IM = _mm512_mask_extload_ps(cl_full_21_IM, 0xFFFF, (*clBase).block1[2][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_22_RE = _mm512_mask_extload_ps(cl_full_22_RE, 0xFFFF, (*clBase).block1[2][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_22_IM = _mm512_mask_extload_ps(cl_full_22_IM, 0xFFFF, (*clBase).block1[2][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+208) ), _MM_HINT_T1);

cl_full_23_RE = _mm512_mask_extload_ps(cl_full_23_RE, 0xFFFF, (*clBase).block1[2][3][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_23_IM = _mm512_mask_extload_ps(cl_full_23_IM, 0xFFFF, (*clBase).block1[2][3][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_24_RE = _mm512_mask_extload_ps(cl_full_24_RE, 0xFFFF, (*clBase).block1[2][4][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_24_IM = _mm512_mask_extload_ps(cl_full_24_IM, 0xFFFF, (*clBase).block1[2][4][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_25_RE = _mm512_mask_extload_ps(cl_full_25_RE, 0xFFFF, (*clBase).block1[2][5][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_25_IM = _mm512_mask_extload_ps(cl_full_25_IM, 0xFFFF, (*clBase).block1[2][5][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_30_RE = _mm512_mask_extload_ps(cl_full_30_RE, 0xFFFF, (*clBase).block1[3][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+224) ), _MM_HINT_T1);

cl_full_30_IM = _mm512_mask_extload_ps(cl_full_30_IM, 0xFFFF, (*clBase).block1[3][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_31_RE = _mm512_mask_extload_ps(cl_full_31_RE, 0xFFFF, (*clBase).block1[3][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_31_IM = _mm512_mask_extload_ps(cl_full_31_IM, 0xFFFF, (*clBase).block1[3][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_32_RE = _mm512_mask_extload_ps(cl_full_32_RE, 0xFFFF, (*clBase).block1[3][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_32_IM = _mm512_mask_extload_ps(cl_full_32_IM, 0xFFFF, (*clBase).block1[3][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_33_RE = _mm512_mask_extload_ps(cl_full_33_RE, 0xFFFF, (*clBase).block1[3][3][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_33_IM = _mm512_mask_extload_ps(cl_full_33_IM, 0xFFFF, (*clBase).block1[3][3][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+240) ), _MM_HINT_T1);

cl_full_34_RE = _mm512_mask_extload_ps(cl_full_34_RE, 0xFFFF, (*clBase).block1[3][4][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_34_IM = _mm512_mask_extload_ps(cl_full_34_IM, 0xFFFF, (*clBase).block1[3][4][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_35_RE = _mm512_mask_extload_ps(cl_full_35_RE, 0xFFFF, (*clBase).block1[3][5][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_35_IM = _mm512_mask_extload_ps(cl_full_35_IM, 0xFFFF, (*clBase).block1[3][5][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_40_RE = _mm512_mask_extload_ps(cl_full_40_RE, 0xFFFF, (*clBase).block1[4][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_40_IM = _mm512_mask_extload_ps(cl_full_40_IM, 0xFFFF, (*clBase).block1[4][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_41_RE = _mm512_mask_extload_ps(cl_full_41_RE, 0xFFFF, (*clBase).block1[4][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+256) ), _MM_HINT_T1);

cl_full_41_IM = _mm512_mask_extload_ps(cl_full_41_IM, 0xFFFF, (*clBase).block1[4][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_42_RE = _mm512_mask_extload_ps(cl_full_42_RE, 0xFFFF, (*clBase).block1[4][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_42_IM = _mm512_mask_extload_ps(cl_full_42_IM, 0xFFFF, (*clBase).block1[4][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_43_RE = _mm512_mask_extload_ps(cl_full_43_RE, 0xFFFF, (*clBase).block1[4][3][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_43_IM = _mm512_mask_extload_ps(cl_full_43_IM, 0xFFFF, (*clBase).block1[4][3][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_44_RE = _mm512_mask_extload_ps(cl_full_44_RE, 0xFFFF, (*clBase).block1[4][4][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_44_IM = _mm512_mask_extload_ps(cl_full_44_IM, 0xFFFF, (*clBase).block1[4][4][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*gBase)[6][0][0][0] + gprefdist)+272) ), _MM_HINT_T1);

cl_full_45_RE = _mm512_mask_extload_ps(cl_full_45_RE, 0xFFFF, (*clBase).block1[4][5][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_45_IM = _mm512_mask_extload_ps(cl_full_45_IM, 0xFFFF, (*clBase).block1[4][5][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_50_RE = _mm512_mask_extload_ps(cl_full_50_RE, 0xFFFF, (*clBase).block1[5][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_50_IM = _mm512_mask_extload_ps(cl_full_50_IM, 0xFFFF, (*clBase).block1[5][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_51_RE = _mm512_mask_extload_ps(cl_full_51_RE, 0xFFFF, (*clBase).block1[5][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_51_IM = _mm512_mask_extload_ps(cl_full_51_IM, 0xFFFF, (*clBase).block1[5][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_52_RE = _mm512_mask_extload_ps(cl_full_52_RE, 0xFFFF, (*clBase).block1[5][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+0) ), _MM_HINT_T1);

cl_full_52_IM = _mm512_mask_extload_ps(cl_full_52_IM, 0xFFFF, (*clBase).block1[5][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_53_RE = _mm512_mask_extload_ps(cl_full_53_RE, 0xFFFF, (*clBase).block1[5][3][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_53_IM = _mm512_mask_extload_ps(cl_full_53_IM, 0xFFFF, (*clBase).block1[5][3][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_54_RE = _mm512_mask_extload_ps(cl_full_54_RE, 0xFFFF, (*clBase).block1[5][4][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_54_IM = _mm512_mask_extload_ps(cl_full_54_IM, 0xFFFF, (*clBase).block1[5][4][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_55_RE = _mm512_mask_extload_ps(cl_full_55_RE, 0xFFFF, (*clBase).block1[5][5][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_55_IM = _mm512_mask_extload_ps(cl_full_55_IM, 0xFFFF, (*clBase).block1[5][5][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+16) ), _MM_HINT_T1);

out_S0_C0_RE = _mm512_mul_ps( cl_full_00_RE , dout_S0_C0_RE );
out_S0_C0_RE = _mm512_fnmadd_ps(cl_full_00_IM, dout_S0_C0_IM, out_S0_C0_RE);
out_S0_C0_IM = _mm512_mul_ps( cl_full_00_RE , dout_S0_C0_IM );
out_S0_C0_IM = _mm512_fmadd_ps(cl_full_00_IM, dout_S0_C0_RE, out_S0_C0_IM);
out_S0_C0_RE = _mm512_fmadd_ps(cl_full_01_RE, dout_S0_C1_RE, out_S0_C0_RE);
out_S0_C0_RE = _mm512_fnmadd_ps(cl_full_01_IM, dout_S0_C1_IM, out_S0_C0_RE);
out_S0_C0_IM = _mm512_fmadd_ps(cl_full_01_RE, dout_S0_C1_IM, out_S0_C0_IM);
 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+32) ), _MM_HINT_T1);

out_S0_C0_IM = _mm512_fmadd_ps(cl_full_01_IM, dout_S0_C1_RE, out_S0_C0_IM);
out_S0_C0_RE = _mm512_fmadd_ps(cl_full_02_RE, dout_S0_C2_RE, out_S0_C0_RE);
out_S0_C0_RE = _mm512_fnmadd_ps(cl_full_02_IM, dout_S0_C2_IM, out_S0_C0_RE);
out_S0_C0_IM = _mm512_fmadd_ps(cl_full_02_RE, dout_S0_C2_IM, out_S0_C0_IM);
out_S0_C0_IM = _mm512_fmadd_ps(cl_full_02_IM, dout_S0_C2_RE, out_S0_C0_IM);
out_S0_C0_RE = _mm512_fmadd_ps(cl_full_03_RE, dout_S1_C0_RE, out_S0_C0_RE);
out_S0_C0_RE = _mm512_fnmadd_ps(cl_full_03_IM, dout_S1_C0_IM, out_S0_C0_RE);
 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+48) ), _MM_HINT_T1);

out_S0_C0_IM = _mm512_fmadd_ps(cl_full_03_RE, dout_S1_C0_IM, out_S0_C0_IM);
out_S0_C0_IM = _mm512_fmadd_ps(cl_full_03_IM, dout_S1_C0_RE, out_S0_C0_IM);
out_S0_C0_RE = _mm512_fmadd_ps(cl_full_04_RE, dout_S1_C1_RE, out_S0_C0_RE);
out_S0_C0_RE = _mm512_fnmadd_ps(cl_full_04_IM, dout_S1_C1_IM, out_S0_C0_RE);
out_S0_C0_IM = _mm512_fmadd_ps(cl_full_04_RE, dout_S1_C1_IM, out_S0_C0_IM);
out_S0_C0_IM = _mm512_fmadd_ps(cl_full_04_IM, dout_S1_C1_RE, out_S0_C0_IM);
out_S0_C0_RE = _mm512_fmadd_ps(cl_full_05_RE, dout_S1_C2_RE, out_S0_C0_RE);
 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+64) ), _MM_HINT_T1);

out_S0_C0_RE = _mm512_fnmadd_ps(cl_full_05_IM, dout_S1_C2_IM, out_S0_C0_RE);
out_S0_C0_IM = _mm512_fmadd_ps(cl_full_05_RE, dout_S1_C2_IM, out_S0_C0_IM);
out_S0_C0_IM = _mm512_fmadd_ps(cl_full_05_IM, dout_S1_C2_RE, out_S0_C0_IM);
out_S0_C1_RE = _mm512_mul_ps( cl_full_10_RE , dout_S0_C0_RE );
out_S0_C1_RE = _mm512_fnmadd_ps(cl_full_10_IM, dout_S0_C0_IM, out_S0_C1_RE);
out_S0_C1_IM = _mm512_mul_ps( cl_full_10_RE , dout_S0_C0_IM );
out_S0_C1_IM = _mm512_fmadd_ps(cl_full_10_IM, dout_S0_C0_RE, out_S0_C1_IM);
 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+80) ), _MM_HINT_T1);

out_S0_C1_RE = _mm512_fmadd_ps(cl_full_11_RE, dout_S0_C1_RE, out_S0_C1_RE);
out_S0_C1_RE = _mm512_fnmadd_ps(cl_full_11_IM, dout_S0_C1_IM, out_S0_C1_RE);
out_S0_C1_IM = _mm512_fmadd_ps(cl_full_11_RE, dout_S0_C1_IM, out_S0_C1_IM);
out_S0_C1_IM = _mm512_fmadd_ps(cl_full_11_IM, dout_S0_C1_RE, out_S0_C1_IM);
out_S0_C1_RE = _mm512_fmadd_ps(cl_full_12_RE, dout_S0_C2_RE, out_S0_C1_RE);
out_S0_C1_RE = _mm512_fnmadd_ps(cl_full_12_IM, dout_S0_C2_IM, out_S0_C1_RE);
out_S0_C1_IM = _mm512_fmadd_ps(cl_full_12_RE, dout_S0_C2_IM, out_S0_C1_IM);
 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+96) ), _MM_HINT_T1);

out_S0_C1_IM = _mm512_fmadd_ps(cl_full_12_IM, dout_S0_C2_RE, out_S0_C1_IM);
out_S0_C1_RE = _mm512_fmadd_ps(cl_full_13_RE, dout_S1_C0_RE, out_S0_C1_RE);
out_S0_C1_RE = _mm512_fnmadd_ps(cl_full_13_IM, dout_S1_C0_IM, out_S0_C1_RE);
out_S0_C1_IM = _mm512_fmadd_ps(cl_full_13_RE, dout_S1_C0_IM, out_S0_C1_IM);
out_S0_C1_IM = _mm512_fmadd_ps(cl_full_13_IM, dout_S1_C0_RE, out_S0_C1_IM);
out_S0_C1_RE = _mm512_fmadd_ps(cl_full_14_RE, dout_S1_C1_RE, out_S0_C1_RE);
out_S0_C1_RE = _mm512_fnmadd_ps(cl_full_14_IM, dout_S1_C1_IM, out_S0_C1_RE);
 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+112) ), _MM_HINT_T1);

out_S0_C1_IM = _mm512_fmadd_ps(cl_full_14_RE, dout_S1_C1_IM, out_S0_C1_IM);
out_S0_C1_IM = _mm512_fmadd_ps(cl_full_14_IM, dout_S1_C1_RE, out_S0_C1_IM);
out_S0_C1_RE = _mm512_fmadd_ps(cl_full_15_RE, dout_S1_C2_RE, out_S0_C1_RE);
out_S0_C1_RE = _mm512_fnmadd_ps(cl_full_15_IM, dout_S1_C2_IM, out_S0_C1_RE);
out_S0_C1_IM = _mm512_fmadd_ps(cl_full_15_RE, dout_S1_C2_IM, out_S0_C1_IM);
out_S0_C1_IM = _mm512_fmadd_ps(cl_full_15_IM, dout_S1_C2_RE, out_S0_C1_IM);
out_S0_C2_RE = _mm512_mul_ps( cl_full_20_RE , dout_S0_C0_RE );
 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+128) ), _MM_HINT_T1);

out_S0_C2_RE = _mm512_fnmadd_ps(cl_full_20_IM, dout_S0_C0_IM, out_S0_C2_RE);
out_S0_C2_IM = _mm512_mul_ps( cl_full_20_RE , dout_S0_C0_IM );
out_S0_C2_IM = _mm512_fmadd_ps(cl_full_20_IM, dout_S0_C0_RE, out_S0_C2_IM);
out_S0_C2_RE = _mm512_fmadd_ps(cl_full_21_RE, dout_S0_C1_RE, out_S0_C2_RE);
out_S0_C2_RE = _mm512_fnmadd_ps(cl_full_21_IM, dout_S0_C1_IM, out_S0_C2_RE);
out_S0_C2_IM = _mm512_fmadd_ps(cl_full_21_RE, dout_S0_C1_IM, out_S0_C2_IM);
out_S0_C2_IM = _mm512_fmadd_ps(cl_full_21_IM, dout_S0_C1_RE, out_S0_C2_IM);
 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+144) ), _MM_HINT_T1);

out_S0_C2_RE = _mm512_fmadd_ps(cl_full_22_RE, dout_S0_C2_RE, out_S0_C2_RE);
out_S0_C2_RE = _mm512_fnmadd_ps(cl_full_22_IM, dout_S0_C2_IM, out_S0_C2_RE);
out_S0_C2_IM = _mm512_fmadd_ps(cl_full_22_RE, dout_S0_C2_IM, out_S0_C2_IM);
out_S0_C2_IM = _mm512_fmadd_ps(cl_full_22_IM, dout_S0_C2_RE, out_S0_C2_IM);
out_S0_C2_RE = _mm512_fmadd_ps(cl_full_23_RE, dout_S1_C0_RE, out_S0_C2_RE);
out_S0_C2_RE = _mm512_fnmadd_ps(cl_full_23_IM, dout_S1_C0_IM, out_S0_C2_RE);
out_S0_C2_IM = _mm512_fmadd_ps(cl_full_23_RE, dout_S1_C0_IM, out_S0_C2_IM);
 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+160) ), _MM_HINT_T1);

out_S0_C2_IM = _mm512_fmadd_ps(cl_full_23_IM, dout_S1_C0_RE, out_S0_C2_IM);
out_S0_C2_RE = _mm512_fmadd_ps(cl_full_24_RE, dout_S1_C1_RE, out_S0_C2_RE);
out_S0_C2_RE = _mm512_fnmadd_ps(cl_full_24_IM, dout_S1_C1_IM, out_S0_C2_RE);
out_S0_C2_IM = _mm512_fmadd_ps(cl_full_24_RE, dout_S1_C1_IM, out_S0_C2_IM);
out_S0_C2_IM = _mm512_fmadd_ps(cl_full_24_IM, dout_S1_C1_RE, out_S0_C2_IM);
out_S0_C2_RE = _mm512_fmadd_ps(cl_full_25_RE, dout_S1_C2_RE, out_S0_C2_RE);
out_S0_C2_RE = _mm512_fnmadd_ps(cl_full_25_IM, dout_S1_C2_IM, out_S0_C2_RE);
 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+176) ), _MM_HINT_T1);

out_S0_C2_IM = _mm512_fmadd_ps(cl_full_25_RE, dout_S1_C2_IM, out_S0_C2_IM);
out_S0_C2_IM = _mm512_fmadd_ps(cl_full_25_IM, dout_S1_C2_RE, out_S0_C2_IM);
out_S1_C0_RE = _mm512_mul_ps( cl_full_30_RE , dout_S0_C0_RE );
out_S1_C0_RE = _mm512_fnmadd_ps(cl_full_30_IM, dout_S0_C0_IM, out_S1_C0_RE);
out_S1_C0_IM = _mm512_mul_ps( cl_full_30_RE , dout_S0_C0_IM );
out_S1_C0_IM = _mm512_fmadd_ps(cl_full_30_IM, dout_S0_C0_RE, out_S1_C0_IM);
out_S1_C0_RE = _mm512_fmadd_ps(cl_full_31_RE, dout_S0_C1_RE, out_S1_C0_RE);
 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+192) ), _MM_HINT_T1);

out_S1_C0_RE = _mm512_fnmadd_ps(cl_full_31_IM, dout_S0_C1_IM, out_S1_C0_RE);
out_S1_C0_IM = _mm512_fmadd_ps(cl_full_31_RE, dout_S0_C1_IM, out_S1_C0_IM);
out_S1_C0_IM = _mm512_fmadd_ps(cl_full_31_IM, dout_S0_C1_RE, out_S1_C0_IM);
out_S1_C0_RE = _mm512_fmadd_ps(cl_full_32_RE, dout_S0_C2_RE, out_S1_C0_RE);
out_S1_C0_RE = _mm512_fnmadd_ps(cl_full_32_IM, dout_S0_C2_IM, out_S1_C0_RE);
out_S1_C0_IM = _mm512_fmadd_ps(cl_full_32_RE, dout_S0_C2_IM, out_S1_C0_IM);
out_S1_C0_IM = _mm512_fmadd_ps(cl_full_32_IM, dout_S0_C2_RE, out_S1_C0_IM);
 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+208) ), _MM_HINT_T1);

out_S1_C0_RE = _mm512_fmadd_ps(cl_full_33_RE, dout_S1_C0_RE, out_S1_C0_RE);
out_S1_C0_RE = _mm512_fnmadd_ps(cl_full_33_IM, dout_S1_C0_IM, out_S1_C0_RE);
out_S1_C0_IM = _mm512_fmadd_ps(cl_full_33_RE, dout_S1_C0_IM, out_S1_C0_IM);
out_S1_C0_IM = _mm512_fmadd_ps(cl_full_33_IM, dout_S1_C0_RE, out_S1_C0_IM);
out_S1_C0_RE = _mm512_fmadd_ps(cl_full_34_RE, dout_S1_C1_RE, out_S1_C0_RE);
out_S1_C0_RE = _mm512_fnmadd_ps(cl_full_34_IM, dout_S1_C1_IM, out_S1_C0_RE);
out_S1_C0_IM = _mm512_fmadd_ps(cl_full_34_RE, dout_S1_C1_IM, out_S1_C0_IM);
 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+224) ), _MM_HINT_T1);

out_S1_C0_IM = _mm512_fmadd_ps(cl_full_34_IM, dout_S1_C1_RE, out_S1_C0_IM);
out_S1_C0_RE = _mm512_fmadd_ps(cl_full_35_RE, dout_S1_C2_RE, out_S1_C0_RE);
out_S1_C0_RE = _mm512_fnmadd_ps(cl_full_35_IM, dout_S1_C2_IM, out_S1_C0_RE);
out_S1_C0_IM = _mm512_fmadd_ps(cl_full_35_RE, dout_S1_C2_IM, out_S1_C0_IM);
out_S1_C0_IM = _mm512_fmadd_ps(cl_full_35_IM, dout_S1_C2_RE, out_S1_C0_IM);
out_S1_C1_RE = _mm512_mul_ps( cl_full_40_RE , dout_S0_C0_RE );
out_S1_C1_RE = _mm512_fnmadd_ps(cl_full_40_IM, dout_S0_C0_IM, out_S1_C1_RE);
 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+240) ), _MM_HINT_T1);

out_S1_C1_IM = _mm512_mul_ps( cl_full_40_RE , dout_S0_C0_IM );
out_S1_C1_IM = _mm512_fmadd_ps(cl_full_40_IM, dout_S0_C0_RE, out_S1_C1_IM);
out_S1_C1_RE = _mm512_fmadd_ps(cl_full_41_RE, dout_S0_C1_RE, out_S1_C1_RE);
out_S1_C1_RE = _mm512_fnmadd_ps(cl_full_41_IM, dout_S0_C1_IM, out_S1_C1_RE);
out_S1_C1_IM = _mm512_fmadd_ps(cl_full_41_RE, dout_S0_C1_IM, out_S1_C1_IM);
out_S1_C1_IM = _mm512_fmadd_ps(cl_full_41_IM, dout_S0_C1_RE, out_S1_C1_IM);
out_S1_C1_RE = _mm512_fmadd_ps(cl_full_42_RE, dout_S0_C2_RE, out_S1_C1_RE);
 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+256) ), _MM_HINT_T1);

out_S1_C1_RE = _mm512_fnmadd_ps(cl_full_42_IM, dout_S0_C2_IM, out_S1_C1_RE);
out_S1_C1_IM = _mm512_fmadd_ps(cl_full_42_RE, dout_S0_C2_IM, out_S1_C1_IM);
out_S1_C1_IM = _mm512_fmadd_ps(cl_full_42_IM, dout_S0_C2_RE, out_S1_C1_IM);
out_S1_C1_RE = _mm512_fmadd_ps(cl_full_43_RE, dout_S1_C0_RE, out_S1_C1_RE);
out_S1_C1_RE = _mm512_fnmadd_ps(cl_full_43_IM, dout_S1_C0_IM, out_S1_C1_RE);
out_S1_C1_IM = _mm512_fmadd_ps(cl_full_43_RE, dout_S1_C0_IM, out_S1_C1_IM);
out_S1_C1_IM = _mm512_fmadd_ps(cl_full_43_IM, dout_S1_C0_RE, out_S1_C1_IM);
 _mm_prefetch((const char *)( (((*gBase)[7][0][0][0] + gprefdist)+272) ), _MM_HINT_T1);

out_S1_C1_RE = _mm512_fmadd_ps(cl_full_44_RE, dout_S1_C1_RE, out_S1_C1_RE);
out_S1_C1_RE = _mm512_fnmadd_ps(cl_full_44_IM, dout_S1_C1_IM, out_S1_C1_RE);
out_S1_C1_IM = _mm512_fmadd_ps(cl_full_44_RE, dout_S1_C1_IM, out_S1_C1_IM);
out_S1_C1_IM = _mm512_fmadd_ps(cl_full_44_IM, dout_S1_C1_RE, out_S1_C1_IM);
out_S1_C1_RE = _mm512_fmadd_ps(cl_full_45_RE, dout_S1_C2_RE, out_S1_C1_RE);
out_S1_C1_RE = _mm512_fnmadd_ps(cl_full_45_IM, dout_S1_C2_IM, out_S1_C1_RE);
out_S1_C1_IM = _mm512_fmadd_ps(cl_full_45_RE, dout_S1_C2_IM, out_S1_C1_IM);
out_S1_C1_IM = _mm512_fmadd_ps(cl_full_45_IM, dout_S1_C2_RE, out_S1_C1_IM);
out_S1_C2_RE = _mm512_mul_ps( cl_full_50_RE , dout_S0_C0_RE );
out_S1_C2_RE = _mm512_fnmadd_ps(cl_full_50_IM, dout_S0_C0_IM, out_S1_C2_RE);
out_S1_C2_IM = _mm512_mul_ps( cl_full_50_RE , dout_S0_C0_IM );
out_S1_C2_IM = _mm512_fmadd_ps(cl_full_50_IM, dout_S0_C0_RE, out_S1_C2_IM);
out_S1_C2_RE = _mm512_fmadd_ps(cl_full_51_RE, dout_S0_C1_RE, out_S1_C2_RE);
out_S1_C2_RE = _mm512_fnmadd_ps(cl_full_51_IM, dout_S0_C1_IM, out_S1_C2_RE);
out_S1_C2_IM = _mm512_fmadd_ps(cl_full_51_RE, dout_S0_C1_IM, out_S1_C2_IM);
out_S1_C2_IM = _mm512_fmadd_ps(cl_full_51_IM, dout_S0_C1_RE, out_S1_C2_IM);
out_S1_C2_RE = _mm512_fmadd_ps(cl_full_52_RE, dout_S0_C2_RE, out_S1_C2_RE);
out_S1_C2_RE = _mm512_fnmadd_ps(cl_full_52_IM, dout_S0_C2_IM, out_S1_C2_RE);
out_S1_C2_IM = _mm512_fmadd_ps(cl_full_52_RE, dout_S0_C2_IM, out_S1_C2_IM);
out_S1_C2_IM = _mm512_fmadd_ps(cl_full_52_IM, dout_S0_C2_RE, out_S1_C2_IM);
out_S1_C2_RE = _mm512_fmadd_ps(cl_full_53_RE, dout_S1_C0_RE, out_S1_C2_RE);
out_S1_C2_RE = _mm512_fnmadd_ps(cl_full_53_IM, dout_S1_C0_IM, out_S1_C2_RE);
out_S1_C2_IM = _mm512_fmadd_ps(cl_full_53_RE, dout_S1_C0_IM, out_S1_C2_IM);
out_S1_C2_IM = _mm512_fmadd_ps(cl_full_53_IM, dout_S1_C0_RE, out_S1_C2_IM);
out_S1_C2_RE = _mm512_fmadd_ps(cl_full_54_RE, dout_S1_C1_RE, out_S1_C2_RE);
out_S1_C2_RE = _mm512_fnmadd_ps(cl_full_54_IM, dout_S1_C1_IM, out_S1_C2_RE);
out_S1_C2_IM = _mm512_fmadd_ps(cl_full_54_RE, dout_S1_C1_IM, out_S1_C2_IM);
out_S1_C2_IM = _mm512_fmadd_ps(cl_full_54_IM, dout_S1_C1_RE, out_S1_C2_IM);
out_S1_C2_RE = _mm512_fmadd_ps(cl_full_55_RE, dout_S1_C2_RE, out_S1_C2_RE);
out_S1_C2_RE = _mm512_fnmadd_ps(cl_full_55_IM, dout_S1_C2_IM, out_S1_C2_RE);
out_S1_C2_IM = _mm512_fmadd_ps(cl_full_55_RE, dout_S1_C2_IM, out_S1_C2_IM);
out_S1_C2_IM = _mm512_fmadd_ps(cl_full_55_IM, dout_S1_C2_RE, out_S1_C2_IM);
 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+0) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+16) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+32) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+48) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+64) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+80) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+96) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+112) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+128) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+144) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+160) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+176) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+192) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+208) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+224) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+240) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+256) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+272) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+288) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+304) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+320) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+336) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+352) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+368) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+384) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+400) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+416) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+432) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+448) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+464) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+480) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+496) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+512) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+528) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+544) ), _MM_HINT_T0);

 _mm_prefetch((const char *)( ((*clBase).block2[0][0][0]+560) ), _MM_HINT_T0);

cl_full_00_RE = _mm512_mask_extload_ps(cl_full_00_RE, 0xFFFF, (*clBase).block2[0][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_00_IM = _mm512_mask_extload_ps(cl_full_00_IM, 0xFFFF, (*clBase).block2[0][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_01_RE = _mm512_mask_extload_ps(cl_full_01_RE, 0xFFFF, (*clBase).block2[0][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_01_IM = _mm512_mask_extload_ps(cl_full_01_IM, 0xFFFF, (*clBase).block2[0][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_02_RE = _mm512_mask_extload_ps(cl_full_02_RE, 0xFFFF, (*clBase).block2[0][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_02_IM = _mm512_mask_extload_ps(cl_full_02_IM, 0xFFFF, (*clBase).block2[0][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_03_RE = _mm512_mask_extload_ps(cl_full_03_RE, 0xFFFF, (*clBase).block2[0][3][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_03_IM = _mm512_mask_extload_ps(cl_full_03_IM, 0xFFFF, (*clBase).block2[0][3][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_04_RE = _mm512_mask_extload_ps(cl_full_04_RE, 0xFFFF, (*clBase).block2[0][4][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_04_IM = _mm512_mask_extload_ps(cl_full_04_IM, 0xFFFF, (*clBase).block2[0][4][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_05_RE = _mm512_mask_extload_ps(cl_full_05_RE, 0xFFFF, (*clBase).block2[0][5][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_05_IM = _mm512_mask_extload_ps(cl_full_05_IM, 0xFFFF, (*clBase).block2[0][5][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_10_RE = _mm512_mask_extload_ps(cl_full_10_RE, 0xFFFF, (*clBase).block2[1][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_10_IM = _mm512_mask_extload_ps(cl_full_10_IM, 0xFFFF, (*clBase).block2[1][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_11_RE = _mm512_mask_extload_ps(cl_full_11_RE, 0xFFFF, (*clBase).block2[1][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_11_IM = _mm512_mask_extload_ps(cl_full_11_IM, 0xFFFF, (*clBase).block2[1][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_12_RE = _mm512_mask_extload_ps(cl_full_12_RE, 0xFFFF, (*clBase).block2[1][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_12_IM = _mm512_mask_extload_ps(cl_full_12_IM, 0xFFFF, (*clBase).block2[1][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_13_RE = _mm512_mask_extload_ps(cl_full_13_RE, 0xFFFF, (*clBase).block2[1][3][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_13_IM = _mm512_mask_extload_ps(cl_full_13_IM, 0xFFFF, (*clBase).block2[1][3][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_14_RE = _mm512_mask_extload_ps(cl_full_14_RE, 0xFFFF, (*clBase).block2[1][4][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_14_IM = _mm512_mask_extload_ps(cl_full_14_IM, 0xFFFF, (*clBase).block2[1][4][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_15_RE = _mm512_mask_extload_ps(cl_full_15_RE, 0xFFFF, (*clBase).block2[1][5][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_15_IM = _mm512_mask_extload_ps(cl_full_15_IM, 0xFFFF, (*clBase).block2[1][5][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_20_RE = _mm512_mask_extload_ps(cl_full_20_RE, 0xFFFF, (*clBase).block2[2][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_20_IM = _mm512_mask_extload_ps(cl_full_20_IM, 0xFFFF, (*clBase).block2[2][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_21_RE = _mm512_mask_extload_ps(cl_full_21_RE, 0xFFFF, (*clBase).block2[2][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_21_IM = _mm512_mask_extload_ps(cl_full_21_IM, 0xFFFF, (*clBase).block2[2][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_22_RE = _mm512_mask_extload_ps(cl_full_22_RE, 0xFFFF, (*clBase).block2[2][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_22_IM = _mm512_mask_extload_ps(cl_full_22_IM, 0xFFFF, (*clBase).block2[2][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_23_RE = _mm512_mask_extload_ps(cl_full_23_RE, 0xFFFF, (*clBase).block2[2][3][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_23_IM = _mm512_mask_extload_ps(cl_full_23_IM, 0xFFFF, (*clBase).block2[2][3][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_24_RE = _mm512_mask_extload_ps(cl_full_24_RE, 0xFFFF, (*clBase).block2[2][4][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_24_IM = _mm512_mask_extload_ps(cl_full_24_IM, 0xFFFF, (*clBase).block2[2][4][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_25_RE = _mm512_mask_extload_ps(cl_full_25_RE, 0xFFFF, (*clBase).block2[2][5][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_25_IM = _mm512_mask_extload_ps(cl_full_25_IM, 0xFFFF, (*clBase).block2[2][5][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_30_RE = _mm512_mask_extload_ps(cl_full_30_RE, 0xFFFF, (*clBase).block2[3][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_30_IM = _mm512_mask_extload_ps(cl_full_30_IM, 0xFFFF, (*clBase).block2[3][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_31_RE = _mm512_mask_extload_ps(cl_full_31_RE, 0xFFFF, (*clBase).block2[3][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_31_IM = _mm512_mask_extload_ps(cl_full_31_IM, 0xFFFF, (*clBase).block2[3][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_32_RE = _mm512_mask_extload_ps(cl_full_32_RE, 0xFFFF, (*clBase).block2[3][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_32_IM = _mm512_mask_extload_ps(cl_full_32_IM, 0xFFFF, (*clBase).block2[3][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_33_RE = _mm512_mask_extload_ps(cl_full_33_RE, 0xFFFF, (*clBase).block2[3][3][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_33_IM = _mm512_mask_extload_ps(cl_full_33_IM, 0xFFFF, (*clBase).block2[3][3][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_34_RE = _mm512_mask_extload_ps(cl_full_34_RE, 0xFFFF, (*clBase).block2[3][4][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_34_IM = _mm512_mask_extload_ps(cl_full_34_IM, 0xFFFF, (*clBase).block2[3][4][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_35_RE = _mm512_mask_extload_ps(cl_full_35_RE, 0xFFFF, (*clBase).block2[3][5][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_35_IM = _mm512_mask_extload_ps(cl_full_35_IM, 0xFFFF, (*clBase).block2[3][5][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_40_RE = _mm512_mask_extload_ps(cl_full_40_RE, 0xFFFF, (*clBase).block2[4][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_40_IM = _mm512_mask_extload_ps(cl_full_40_IM, 0xFFFF, (*clBase).block2[4][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_41_RE = _mm512_mask_extload_ps(cl_full_41_RE, 0xFFFF, (*clBase).block2[4][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_41_IM = _mm512_mask_extload_ps(cl_full_41_IM, 0xFFFF, (*clBase).block2[4][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_42_RE = _mm512_mask_extload_ps(cl_full_42_RE, 0xFFFF, (*clBase).block2[4][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_42_IM = _mm512_mask_extload_ps(cl_full_42_IM, 0xFFFF, (*clBase).block2[4][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_43_RE = _mm512_mask_extload_ps(cl_full_43_RE, 0xFFFF, (*clBase).block2[4][3][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_43_IM = _mm512_mask_extload_ps(cl_full_43_IM, 0xFFFF, (*clBase).block2[4][3][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_44_RE = _mm512_mask_extload_ps(cl_full_44_RE, 0xFFFF, (*clBase).block2[4][4][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_44_IM = _mm512_mask_extload_ps(cl_full_44_IM, 0xFFFF, (*clBase).block2[4][4][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_45_RE = _mm512_mask_extload_ps(cl_full_45_RE, 0xFFFF, (*clBase).block2[4][5][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_45_IM = _mm512_mask_extload_ps(cl_full_45_IM, 0xFFFF, (*clBase).block2[4][5][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_50_RE = _mm512_mask_extload_ps(cl_full_50_RE, 0xFFFF, (*clBase).block2[5][0][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_50_IM = _mm512_mask_extload_ps(cl_full_50_IM, 0xFFFF, (*clBase).block2[5][0][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_51_RE = _mm512_mask_extload_ps(cl_full_51_RE, 0xFFFF, (*clBase).block2[5][1][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_51_IM = _mm512_mask_extload_ps(cl_full_51_IM, 0xFFFF, (*clBase).block2[5][1][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_52_RE = _mm512_mask_extload_ps(cl_full_52_RE, 0xFFFF, (*clBase).block2[5][2][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_52_IM = _mm512_mask_extload_ps(cl_full_52_IM, 0xFFFF, (*clBase).block2[5][2][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_53_RE = _mm512_mask_extload_ps(cl_full_53_RE, 0xFFFF, (*clBase).block2[5][3][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_53_IM = _mm512_mask_extload_ps(cl_full_53_IM, 0xFFFF, (*clBase).block2[5][3][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_54_RE = _mm512_mask_extload_ps(cl_full_54_RE, 0xFFFF, (*clBase).block2[5][4][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_54_IM = _mm512_mask_extload_ps(cl_full_54_IM, 0xFFFF, (*clBase).block2[5][4][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_55_RE = _mm512_mask_extload_ps(cl_full_55_RE, 0xFFFF, (*clBase).block2[5][5][0], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

cl_full_55_IM = _mm512_mask_extload_ps(cl_full_55_IM, 0xFFFF, (*clBase).block2[5][5][1], _MM_UPCONV_PS_NONE, _MM_BROADCAST32_NONE, _MM_HINT_NONE);

out_S2_C0_RE = _mm512_mul_ps( cl_full_00_RE , dout_S2_C0_RE );
out_S2_C0_RE = _mm512_fnmadd_ps(cl_full_00_IM, dout_S2_C0_IM, out_S2_C0_RE);
out_S2_C0_IM = _mm512_mul_ps( cl_full_00_RE , dout_S2_C0_IM );
out_S2_C0_IM = _mm512_fmadd_ps(cl_full_00_IM, dout_S2_C0_RE, out_S2_C0_IM);
out_S2_C0_RE = _mm512_fmadd_ps(cl_full_01_RE, dout_S2_C1_RE, out_S2_C0_RE);
out_S2_C0_RE = _mm512_fnmadd_ps(cl_full_01_IM, dout_S2_C1_IM, out_S2_C0_RE);
out_S2_C0_IM = _mm512_fmadd_ps(cl_full_01_RE, dout_S2_C1_IM, out_S2_C0_IM);
out_S2_C0_IM = _mm512_fmadd_ps(cl_full_01_IM, dout_S2_C1_RE, out_S2_C0_IM);
out_S2_C0_RE = _mm512_fmadd_ps(cl_full_02_RE, dout_S2_C2_RE, out_S2_C0_RE);
out_S2_C0_RE = _mm512_fnmadd_ps(cl_full_02_IM, dout_S2_C2_IM, out_S2_C0_RE);
out_S2_C0_IM = _mm512_fmadd_ps(cl_full_02_RE, dout_S2_C2_IM, out_S2_C0_IM);
out_S2_C0_IM = _mm512_fmadd_ps(cl_full_02_IM, dout_S2_C2_RE, out_S2_C0_IM);
out_S2_C0_RE = _mm512_fmadd_ps(cl_full_03_RE, dout_S3_C0_RE, out_S2_C0_RE);
out_S2_C0_RE = _mm512_fnmadd_ps(cl_full_03_IM, dout_S3_C0_IM, out_S2_C0_RE);
out_S2_C0_IM = _mm512_fmadd_ps(cl_full_03_RE, dout_S3_C0_IM, out_S2_C0_IM);
out_S2_C0_IM = _mm512_fmadd_ps(cl_full_03_IM, dout_S3_C0_RE, out_S2_C0_IM);
out_S2_C0_RE = _mm512_fmadd_ps(cl_full_04_RE, dout_S3_C1_RE, out_S2_C0_RE);
out_S2_C0_RE = _mm512_fnmadd_ps(cl_full_04_IM, dout_S3_C1_IM, out_S2_C0_RE);
out_S2_C0_IM = _mm512_fmadd_ps(cl_full_04_RE, dout_S3_C1_IM, out_S2_C0_IM);
out_S2_C0_IM = _mm512_fmadd_ps(cl_full_04_IM, dout_S3_C1_RE, out_S2_C0_IM);
out_S2_C0_RE = _mm512_fmadd_ps(cl_full_05_RE, dout_S3_C2_RE, out_S2_C0_RE);
out_S2_C0_RE = _mm512_fnmadd_ps(cl_full_05_IM, dout_S3_C2_IM, out_S2_C0_RE);
out_S2_C0_IM = _mm512_fmadd_ps(cl_full_05_RE, dout_S3_C2_IM, out_S2_C0_IM);
out_S2_C0_IM = _mm512_fmadd_ps(cl_full_05_IM, dout_S3_C2_RE, out_S2_C0_IM);
out_S2_C1_RE = _mm512_mul_ps( cl_full_10_RE , dout_S2_C0_RE );
out_S2_C1_RE = _mm512_fnmadd_ps(cl_full_10_IM, dout_S2_C0_IM, out_S2_C1_RE);
out_S2_C1_IM = _mm512_mul_ps( cl_full_10_RE , dout_S2_C0_IM );
out_S2_C1_IM = _mm512_fmadd_ps(cl_full_10_IM, dout_S2_C0_RE, out_S2_C1_IM);
out_S2_C1_RE = _mm512_fmadd_ps(cl_full_11_RE, dout_S2_C1_RE, out_S2_C1_RE);
out_S2_C1_RE = _mm512_fnmadd_ps(cl_full_11_IM, dout_S2_C1_IM, out_S2_C1_RE);
out_S2_C1_IM = _mm512_fmadd_ps(cl_full_11_RE, dout_S2_C1_IM, out_S2_C1_IM);
out_S2_C1_IM = _mm512_fmadd_ps(cl_full_11_IM, dout_S2_C1_RE, out_S2_C1_IM);
out_S2_C1_RE = _mm512_fmadd_ps(cl_full_12_RE, dout_S2_C2_RE, out_S2_C1_RE);
out_S2_C1_RE = _mm512_fnmadd_ps(cl_full_12_IM, dout_S2_C2_IM, out_S2_C1_RE);
out_S2_C1_IM = _mm512_fmadd_ps(cl_full_12_RE, dout_S2_C2_IM, out_S2_C1_IM);
out_S2_C1_IM = _mm512_fmadd_ps(cl_full_12_IM, dout_S2_C2_RE, out_S2_C1_IM);
out_S2_C1_RE = _mm512_fmadd_ps(cl_full_13_RE, dout_S3_C0_RE, out_S2_C1_RE);
out_S2_C1_RE = _mm512_fnmadd_ps(cl_full_13_IM, dout_S3_C0_IM, out_S2_C1_RE);
out_S2_C1_IM = _mm512_fmadd_ps(cl_full_13_RE, dout_S3_C0_IM, out_S2_C1_IM);
out_S2_C1_IM = _mm512_fmadd_ps(cl_full_13_IM, dout_S3_C0_RE, out_S2_C1_IM);
out_S2_C1_RE = _mm512_fmadd_ps(cl_full_14_RE, dout_S3_C1_RE, out_S2_C1_RE);
out_S2_C1_RE = _mm512_fnmadd_ps(cl_full_14_IM, dout_S3_C1_IM, out_S2_C1_RE);
out_S2_C1_IM = _mm512_fmadd_ps(cl_full_14_RE, dout_S3_C1_IM, out_S2_C1_IM);
out_S2_C1_IM = _mm512_fmadd_ps(cl_full_14_IM, dout_S3_C1_RE, out_S2_C1_IM);
out_S2_C1_RE = _mm512_fmadd_ps(cl_full_15_RE, dout_S3_C2_RE, out_S2_C1_RE);
out_S2_C1_RE = _mm512_fnmadd_ps(cl_full_15_IM, dout_S3_C2_IM, out_S2_C1_RE);
out_S2_C1_IM = _mm512_fmadd_ps(cl_full_15_RE, dout_S3_C2_IM, out_S2_C1_IM);
out_S2_C1_IM = _mm512_fmadd_ps(cl_full_15_IM, dout_S3_C2_RE, out_S2_C1_IM);
out_S2_C2_RE = _mm512_mul_ps( cl_full_20_RE , dout_S2_C0_RE );
out_S2_C2_RE = _mm512_fnmadd_ps(cl_full_20_IM, dout_S2_C0_IM, out_S2_C2_RE);
out_S2_C2_IM = _mm512_mul_ps( cl_full_20_RE , dout_S2_C0_IM );
out_S2_C2_IM = _mm512_fmadd_ps(cl_full_20_IM, dout_S2_C0_RE, out_S2_C2_IM);
out_S2_C2_RE = _mm512_fmadd_ps(cl_full_21_RE, dout_S2_C1_RE, out_S2_C2_RE);
out_S2_C2_RE = _mm512_fnmadd_ps(cl_full_21_IM, dout_S2_C1_IM, out_S2_C2_RE);
out_S2_C2_IM = _mm512_fmadd_ps(cl_full_21_RE, dout_S2_C1_IM, out_S2_C2_IM);
out_S2_C2_IM = _mm512_fmadd_ps(cl_full_21_IM, dout_S2_C1_RE, out_S2_C2_IM);
out_S2_C2_RE = _mm512_fmadd_ps(cl_full_22_RE, dout_S2_C2_RE, out_S2_C2_RE);
out_S2_C2_RE = _mm512_fnmadd_ps(cl_full_22_IM, dout_S2_C2_IM, out_S2_C2_RE);
out_S2_C2_IM = _mm512_fmadd_ps(cl_full_22_RE, dout_S2_C2_IM, out_S2_C2_IM);
out_S2_C2_IM = _mm512_fmadd_ps(cl_full_22_IM, dout_S2_C2_RE, out_S2_C2_IM);
out_S2_C2_RE = _mm512_fmadd_ps(cl_full_23_RE, dout_S3_C0_RE, out_S2_C2_RE);
out_S2_C2_RE = _mm512_fnmadd_ps(cl_full_23_IM, dout_S3_C0_IM, out_S2_C2_RE);
out_S2_C2_IM = _mm512_fmadd_ps(cl_full_23_RE, dout_S3_C0_IM, out_S2_C2_IM);
out_S2_C2_IM = _mm512_fmadd_ps(cl_full_23_IM, dout_S3_C0_RE, out_S2_C2_IM);
out_S2_C2_RE = _mm512_fmadd_ps(cl_full_24_RE, dout_S3_C1_RE, out_S2_C2_RE);
out_S2_C2_RE = _mm512_fnmadd_ps(cl_full_24_IM, dout_S3_C1_IM, out_S2_C2_RE);
out_S2_C2_IM = _mm512_fmadd_ps(cl_full_24_RE, dout_S3_C1_IM, out_S2_C2_IM);
out_S2_C2_IM = _mm512_fmadd_ps(cl_full_24_IM, dout_S3_C1_RE, out_S2_C2_IM);
out_S2_C2_RE = _mm512_fmadd_ps(cl_full_25_RE, dout_S3_C2_RE, out_S2_C2_RE);
out_S2_C2_RE = _mm512_fnmadd_ps(cl_full_25_IM, dout_S3_C2_IM, out_S2_C2_RE);
out_S2_C2_IM = _mm512_fmadd_ps(cl_full_25_RE, dout_S3_C2_IM, out_S2_C2_IM);
out_S2_C2_IM = _mm512_fmadd_ps(cl_full_25_IM, dout_S3_C2_RE, out_S2_C2_IM);
out_S3_C0_RE = _mm512_mul_ps( cl_full_30_RE , dout_S2_C0_RE );
out_S3_C0_RE = _mm512_fnmadd_ps(cl_full_30_IM, dout_S2_C0_IM, out_S3_C0_RE);
out_S3_C0_IM = _mm512_mul_ps( cl_full_30_RE , dout_S2_C0_IM );
out_S3_C0_IM = _mm512_fmadd_ps(cl_full_30_IM, dout_S2_C0_RE, out_S3_C0_IM);
out_S3_C0_RE = _mm512_fmadd_ps(cl_full_31_RE, dout_S2_C1_RE, out_S3_C0_RE);
out_S3_C0_RE = _mm512_fnmadd_ps(cl_full_31_IM, dout_S2_C1_IM, out_S3_C0_RE);
out_S3_C0_IM = _mm512_fmadd_ps(cl_full_31_RE, dout_S2_C1_IM, out_S3_C0_IM);
out_S3_C0_IM = _mm512_fmadd_ps(cl_full_31_IM, dout_S2_C1_RE, out_S3_C0_IM);
out_S3_C0_RE = _mm512_fmadd_ps(cl_full_32_RE, dout_S2_C2_RE, out_S3_C0_RE);
out_S3_C0_RE = _mm512_fnmadd_ps(cl_full_32_IM, dout_S2_C2_IM, out_S3_C0_RE);
out_S3_C0_IM = _mm512_fmadd_ps(cl_full_32_RE, dout_S2_C2_IM, out_S3_C0_IM);
out_S3_C0_IM = _mm512_fmadd_ps(cl_full_32_IM, dout_S2_C2_RE, out_S3_C0_IM);
out_S3_C0_RE = _mm512_fmadd_ps(cl_full_33_RE, dout_S3_C0_RE, out_S3_C0_RE);
out_S3_C0_RE = _mm512_fnmadd_ps(cl_full_33_IM, dout_S3_C0_IM, out_S3_C0_RE);
out_S3_C0_IM = _mm512_fmadd_ps(cl_full_33_RE, dout_S3_C0_IM, out_S3_C0_IM);
out_S3_C0_IM = _mm512_fmadd_ps(cl_full_33_IM, dout_S3_C0_RE, out_S3_C0_IM);
out_S3_C0_RE = _mm512_fmadd_ps(cl_full_34_RE, dout_S3_C1_RE, out_S3_C0_RE);
out_S3_C0_RE = _mm512_fnmadd_ps(cl_full_34_IM, dout_S3_C1_IM, out_S3_C0_RE);
out_S3_C0_IM = _mm512_fmadd_ps(cl_full_34_RE, dout_S3_C1_IM, out_S3_C0_IM);
out_S3_C0_IM = _mm512_fmadd_ps(cl_full_34_IM, dout_S3_C1_RE, out_S3_C0_IM);
out_S3_C0_RE = _mm512_fmadd_ps(cl_full_35_RE, dout_S3_C2_RE, out_S3_C0_RE);
out_S3_C0_RE = _mm512_fnmadd_ps(cl_full_35_IM, dout_S3_C2_IM, out_S3_C0_RE);
out_S3_C0_IM = _mm512_fmadd_ps(cl_full_35_RE, dout_S3_C2_IM, out_S3_C0_IM);
out_S3_C0_IM = _mm512_fmadd_ps(cl_full_35_IM, dout_S3_C2_RE, out_S3_C0_IM);
out_S3_C1_RE = _mm512_mul_ps( cl_full_40_RE , dout_S2_C0_RE );
out_S3_C1_RE = _mm512_fnmadd_ps(cl_full_40_IM, dout_S2_C0_IM, out_S3_C1_RE);
out_S3_C1_IM = _mm512_mul_ps( cl_full_40_RE , dout_S2_C0_IM );
out_S3_C1_IM = _mm512_fmadd_ps(cl_full_40_IM, dout_S2_C0_RE, out_S3_C1_IM);
out_S3_C1_RE = _mm512_fmadd_ps(cl_full_41_RE, dout_S2_C1_RE, out_S3_C1_RE);
out_S3_C1_RE = _mm512_fnmadd_ps(cl_full_41_IM, dout_S2_C1_IM, out_S3_C1_RE);
out_S3_C1_IM = _mm512_fmadd_ps(cl_full_41_RE, dout_S2_C1_IM, out_S3_C1_IM);
out_S3_C1_IM = _mm512_fmadd_ps(cl_full_41_IM, dout_S2_C1_RE, out_S3_C1_IM);
out_S3_C1_RE = _mm512_fmadd_ps(cl_full_42_RE, dout_S2_C2_RE, out_S3_C1_RE);
out_S3_C1_RE = _mm512_fnmadd_ps(cl_full_42_IM, dout_S2_C2_IM, out_S3_C1_RE);
out_S3_C1_IM = _mm512_fmadd_ps(cl_full_42_RE, dout_S2_C2_IM, out_S3_C1_IM);
out_S3_C1_IM = _mm512_fmadd_ps(cl_full_42_IM, dout_S2_C2_RE, out_S3_C1_IM);
out_S3_C1_RE = _mm512_fmadd_ps(cl_full_43_RE, dout_S3_C0_RE, out_S3_C1_RE);
out_S3_C1_RE = _mm512_fnmadd_ps(cl_full_43_IM, dout_S3_C0_IM, out_S3_C1_RE);
out_S3_C1_IM = _mm512_fmadd_ps(cl_full_43_RE, dout_S3_C0_IM, out_S3_C1_IM);
out_S3_C1_IM = _mm512_fmadd_ps(cl_full_43_IM, dout_S3_C0_RE, out_S3_C1_IM);
out_S3_C1_RE = _mm512_fmadd_ps(cl_full_44_RE, dout_S3_C1_RE, out_S3_C1_RE);
out_S3_C1_RE = _mm512_fnmadd_ps(cl_full_44_IM, dout_S3_C1_IM, out_S3_C1_RE);
out_S3_C1_IM = _mm512_fmadd_ps(cl_full_44_RE, dout_S3_C1_IM, out_S3_C1_IM);
out_S3_C1_IM = _mm512_fmadd_ps(cl_full_44_IM, dout_S3_C1_RE, out_S3_C1_IM);
out_S3_C1_RE = _mm512_fmadd_ps(cl_full_45_RE, dout_S3_C2_RE, out_S3_C1_RE);
out_S3_C1_RE = _mm512_fnmadd_ps(cl_full_45_IM, dout_S3_C2_IM, out_S3_C1_RE);
out_S3_C1_IM = _mm512_fmadd_ps(cl_full_45_RE, dout_S3_C2_IM, out_S3_C1_IM);
out_S3_C1_IM = _mm512_fmadd_ps(cl_full_45_IM, dout_S3_C2_RE, out_S3_C1_IM);
out_S3_C2_RE = _mm512_mul_ps( cl_full_50_RE , dout_S2_C0_RE );
out_S3_C2_RE = _mm512_fnmadd_ps(cl_full_50_IM, dout_S2_C0_IM, out_S3_C2_RE);
out_S3_C2_IM = _mm512_mul_ps( cl_full_50_RE , dout_S2_C0_IM );
out_S3_C2_IM = _mm512_fmadd_ps(cl_full_50_IM, dout_S2_C0_RE, out_S3_C2_IM);
out_S3_C2_RE = _mm512_fmadd_ps(cl_full_51_RE, dout_S2_C1_RE, out_S3_C2_RE);
out_S3_C2_RE = _mm512_fnmadd_ps(cl_full_51_IM, dout_S2_C1_IM, out_S3_C2_RE);
out_S3_C2_IM = _mm512_fmadd_ps(cl_full_51_RE, dout_S2_C1_IM, out_S3_C2_IM);
out_S3_C2_IM = _mm512_fmadd_ps(cl_full_51_IM, dout_S2_C1_RE, out_S3_C2_IM);
out_S3_C2_RE = _mm512_fmadd_ps(cl_full_52_RE, dout_S2_C2_RE, out_S3_C2_RE);
out_S3_C2_RE = _mm512_fnmadd_ps(cl_full_52_IM, dout_S2_C2_IM, out_S3_C2_RE);
out_S3_C2_IM = _mm512_fmadd_ps(cl_full_52_RE, dout_S2_C2_IM, out_S3_C2_IM);
out_S3_C2_IM = _mm512_fmadd_ps(cl_full_52_IM, dout_S2_C2_RE, out_S3_C2_IM);
out_S3_C2_RE = _mm512_fmadd_ps(cl_full_53_RE, dout_S3_C0_RE, out_S3_C2_RE);
out_S3_C2_RE = _mm512_fnmadd_ps(cl_full_53_IM, dout_S3_C0_IM, out_S3_C2_RE);
out_S3_C2_IM = _mm512_fmadd_ps(cl_full_53_RE, dout_S3_C0_IM, out_S3_C2_IM);
out_S3_C2_IM = _mm512_fmadd_ps(cl_full_53_IM, dout_S3_C0_RE, out_S3_C2_IM);
out_S3_C2_RE = _mm512_fmadd_ps(cl_full_54_RE, dout_S3_C1_RE, out_S3_C2_RE);
out_S3_C2_RE = _mm512_fnmadd_ps(cl_full_54_IM, dout_S3_C1_IM, out_S3_C2_RE);
out_S3_C2_IM = _mm512_fmadd_ps(cl_full_54_RE, dout_S3_C1_IM, out_S3_C2_IM);
out_S3_C2_IM = _mm512_fmadd_ps(cl_full_54_IM, dout_S3_C1_RE, out_S3_C2_IM);
out_S3_C2_RE = _mm512_fmadd_ps(cl_full_55_RE, dout_S3_C2_RE, out_S3_C2_RE);
out_S3_C2_RE = _mm512_fnmadd_ps(cl_full_55_IM, dout_S3_C2_IM, out_S3_C2_RE);
out_S3_C2_IM = _mm512_fmadd_ps(cl_full_55_RE, dout_S3_C2_IM, out_S3_C2_IM);
out_S3_C2_IM = _mm512_fmadd_ps(cl_full_55_IM, dout_S3_C2_RE, out_S3_C2_IM);
_mm512_mask_extpackstorelo_ps((void*)((*oBase)[0][0][0] + offs[0]), 0xffff, out_S0_C0_RE, _MM_DOWNCONV_PS_NONE, _MM_HINT_NONE);

_mm512_mask_extpackstorelo_ps((void*)((*oBase)[0][0][1] + offs[0]), 0xffff, out_S0_C0_IM, _MM_DOWNCONV_PS_NONE, _MM_HINT_NONE);

_mm512_mask_extpackstorelo_ps((void*)((*oBase)[1][0][0] + offs[0]), 0xffff, out_S0_C1_RE, _MM_DOWNCONV_PS_NONE, _MM_HINT_NONE);

_mm512_mask_extpackstorelo_ps((void*)((*oBase)[1][0][1] + offs[0]), 0xffff, out_S0_C1_IM, _MM_DOWNCONV_PS_NONE, _MM_HINT_NONE);

_mm512_mask_extpackstorelo_ps((void*)((*oBase)[2][0][0] + offs[0]), 0xffff, out_S0_C2_RE, _MM_DOWNCONV_PS_NONE, _MM_HINT_NONE);

_mm512_mask_extpackstorelo_ps((void*)((*oBase)[2][0][1] + offs[0]), 0xffff, out_S0_C2_IM, _MM_DOWNCONV_PS_NONE, _MM_HINT_NONE);

_mm512_mask_extpackstorelo_ps((void*)((*oBase)[0][1][0] + offs[0]), 0xffff, out_S1_C0_RE, _MM_DOWNCONV_PS_NONE, _MM_HINT_NONE);

_mm512_mask_extpackstorelo_ps((void*)((*oBase)[0][1][1] + offs[0]), 0xffff, out_S1_C0_IM, _MM_DOWNCONV_PS_NONE, _MM_HINT_NONE);

_mm512_mask_extpackstorelo_ps((void*)((*oBase)[1][1][0] + offs[0]), 0xffff, out_S1_C1_RE, _MM_DOWNCONV_PS_NONE, _MM_HINT_NONE);

_mm512_mask_extpackstorelo_ps((void*)((*oBase)[1][1][1] + offs[0]), 0xffff, out_S1_C1_IM, _MM_DOWNCONV_PS_NONE, _MM_HINT_NONE);

_mm512_mask_extpackstorelo_ps((void*)((*oBase)[2][1][0] + offs[0]), 0xffff, out_S1_C2_RE, _MM_DOWNCONV_PS_NONE, _MM_HINT_NONE);

_mm512_mask_extpackstorelo_ps((void*)((*oBase)[2][1][1] + offs[0]), 0xffff, out_S1_C2_IM, _MM_DOWNCONV_PS_NONE, _MM_HINT_NONE);

_mm512_mask_extpackstorelo_ps((void*)((*oBase)[0][2][0] + offs[0]), 0xffff, out_S2_C0_RE, _MM_DOWNCONV_PS_NONE, _MM_HINT_NONE);

_mm512_mask_extpackstorelo_ps((void*)((*oBase)[0][2][1] + offs[0]), 0xffff, out_S2_C0_IM, _MM_DOWNCONV_PS_NONE, _MM_HINT_NONE);

_mm512_mask_extpackstorelo_ps((void*)((*oBase)[1][2][0] + offs[0]), 0xffff, out_S2_C1_RE, _MM_DOWNCONV_PS_NONE, _MM_HINT_NONE);

_mm512_mask_extpackstorelo_ps((void*)((*oBase)[1][2][1] + offs[0]), 0xffff, out_S2_C1_IM, _MM_DOWNCONV_PS_NONE, _MM_HINT_NONE);

_mm512_mask_extpackstorelo_ps((void*)((*oBase)[2][2][0] + offs[0]), 0xffff, out_S2_C2_RE, _MM_DOWNCONV_PS_NONE, _MM_HINT_NONE);

_mm512_mask_extpackstorelo_ps((void*)((*oBase)[2][2][1] + offs[0]), 0xffff, out_S2_C2_IM, _MM_DOWNCONV_PS_NONE, _MM_HINT_NONE);

_mm512_mask_extpackstorelo_ps((void*)((*oBase)[0][3][0] + offs[0]), 0xffff, out_S3_C0_RE, _MM_DOWNCONV_PS_NONE, _MM_HINT_NONE);

_mm512_mask_extpackstorelo_ps((void*)((*oBase)[0][3][1] + offs[0]), 0xffff, out_S3_C0_IM, _MM_DOWNCONV_PS_NONE, _MM_HINT_NONE);

_mm512_mask_extpackstorelo_ps((void*)((*oBase)[1][3][0] + offs[0]), 0xffff, out_S3_C1_RE, _MM_DOWNCONV_PS_NONE, _MM_HINT_NONE);

_mm512_mask_extpackstorelo_ps((void*)((*oBase)[1][3][1] + offs[0]), 0xffff, out_S3_C1_IM, _MM_DOWNCONV_PS_NONE, _MM_HINT_NONE);

_mm512_mask_extpackstorelo_ps((void*)((*oBase)[2][3][0] + offs[0]), 0xffff, out_S3_C2_RE, _MM_DOWNCONV_PS_NONE, _MM_HINT_NONE);

_mm512_mask_extpackstorelo_ps((void*)((*oBase)[2][3][1] + offs[0]), 0xffff, out_S3_C2_IM, _MM_DOWNCONV_PS_NONE, _MM_HINT_NONE);


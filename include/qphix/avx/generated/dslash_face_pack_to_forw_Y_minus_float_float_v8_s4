__m256 b_S0_C0_RE = _mm256_setzero_ps();
__m256 b_S0_C0_IM = _mm256_setzero_ps();
__m256 b_S0_C1_RE = _mm256_setzero_ps();
__m256 b_S0_C1_IM = _mm256_setzero_ps();
__m256 b_S0_C2_RE = _mm256_setzero_ps();
__m256 b_S0_C2_IM = _mm256_setzero_ps();
__m256 b_S1_C0_RE = _mm256_setzero_ps();
__m256 b_S1_C0_IM = _mm256_setzero_ps();
__m256 b_S1_C1_RE = _mm256_setzero_ps();
__m256 b_S1_C1_IM = _mm256_setzero_ps();
__m256 b_S1_C2_RE = _mm256_setzero_ps();
__m256 b_S1_C2_IM = _mm256_setzero_ps();
__m256 psi_S0_RE = _mm256_setzero_ps();
__m256 psi_S0_IM = _mm256_setzero_ps();
__m256 psi_S1_RE = _mm256_setzero_ps();
__m256 psi_S1_IM = _mm256_setzero_ps();
__m256 tmp_1_re = _mm256_setzero_ps();
__m256 tmp_1_im = _mm256_setzero_ps();
__m256 tmp_2_re = _mm256_setzero_ps();
__m256 tmp_2_im = _mm256_setzero_ps();
__m256 tmp_3_re = _mm256_setzero_ps();
__m256 tmp_3_im = _mm256_setzero_ps();
__m256 tmp_4_re = _mm256_setzero_ps();
__m256 tmp_4_im = _mm256_setzero_ps();
__m256 zero = _mm256_setzero_ps();
zero = _mm256_setzero_ps(); 
__m256 accMask;

accMask = _mm256_int2mask_ps(mask);

psi_S0_RE = _mm256_setzero_ps();
psi_S0_RE =  _mm256_insertf128_ps(psi_S0_RE, _mm_load_ps(((*xyBase)[0][0][0] + offs[0])), 0);

psi_S0_RE =  _mm256_insertf128_ps(psi_S0_RE, _mm_load_ps(((*xyBase)[0][0][0] + offs[4])), 1);

psi_S0_IM = _mm256_setzero_ps();
psi_S0_IM =  _mm256_insertf128_ps(psi_S0_IM, _mm_load_ps(((*xyBase)[0][0][1] + offs[0])), 0);

psi_S0_IM =  _mm256_insertf128_ps(psi_S0_IM, _mm_load_ps(((*xyBase)[0][0][1] + offs[4])), 1);

psi_S1_RE = _mm256_setzero_ps();
psi_S1_RE =  _mm256_insertf128_ps(psi_S1_RE, _mm_load_ps(((*xyBase)[0][3][0] + offs[0])), 0);

psi_S1_RE =  _mm256_insertf128_ps(psi_S1_RE, _mm_load_ps(((*xyBase)[0][3][0] + offs[4])), 1);

psi_S1_IM = _mm256_setzero_ps();
psi_S1_IM =  _mm256_insertf128_ps(psi_S1_IM, _mm_load_ps(((*xyBase)[0][3][1] + offs[0])), 0);

psi_S1_IM =  _mm256_insertf128_ps(psi_S1_IM, _mm_load_ps(((*xyBase)[0][3][1] + offs[4])), 1);

b_S0_C0_RE = _mm256_add_ps( psi_S0_RE , psi_S1_RE );
b_S0_C0_IM = _mm256_add_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm256_setzero_ps();
psi_S0_RE =  _mm256_insertf128_ps(psi_S0_RE, _mm_load_ps(((*xyBase)[1][0][0] + offs[0])), 0);

psi_S0_RE =  _mm256_insertf128_ps(psi_S0_RE, _mm_load_ps(((*xyBase)[1][0][0] + offs[4])), 1);

psi_S0_IM = _mm256_setzero_ps();
psi_S0_IM =  _mm256_insertf128_ps(psi_S0_IM, _mm_load_ps(((*xyBase)[1][0][1] + offs[0])), 0);

psi_S0_IM =  _mm256_insertf128_ps(psi_S0_IM, _mm_load_ps(((*xyBase)[1][0][1] + offs[4])), 1);

psi_S1_RE = _mm256_setzero_ps();
psi_S1_RE =  _mm256_insertf128_ps(psi_S1_RE, _mm_load_ps(((*xyBase)[1][3][0] + offs[0])), 0);

psi_S1_RE =  _mm256_insertf128_ps(psi_S1_RE, _mm_load_ps(((*xyBase)[1][3][0] + offs[4])), 1);

psi_S1_IM = _mm256_setzero_ps();
psi_S1_IM =  _mm256_insertf128_ps(psi_S1_IM, _mm_load_ps(((*xyBase)[1][3][1] + offs[0])), 0);

psi_S1_IM =  _mm256_insertf128_ps(psi_S1_IM, _mm_load_ps(((*xyBase)[1][3][1] + offs[4])), 1);

b_S0_C1_RE = _mm256_add_ps( psi_S0_RE , psi_S1_RE );
b_S0_C1_IM = _mm256_add_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm256_setzero_ps();
psi_S0_RE =  _mm256_insertf128_ps(psi_S0_RE, _mm_load_ps(((*xyBase)[2][0][0] + offs[0])), 0);

psi_S0_RE =  _mm256_insertf128_ps(psi_S0_RE, _mm_load_ps(((*xyBase)[2][0][0] + offs[4])), 1);

psi_S0_IM = _mm256_setzero_ps();
psi_S0_IM =  _mm256_insertf128_ps(psi_S0_IM, _mm_load_ps(((*xyBase)[2][0][1] + offs[0])), 0);

psi_S0_IM =  _mm256_insertf128_ps(psi_S0_IM, _mm_load_ps(((*xyBase)[2][0][1] + offs[4])), 1);

psi_S1_RE = _mm256_setzero_ps();
psi_S1_RE =  _mm256_insertf128_ps(psi_S1_RE, _mm_load_ps(((*xyBase)[2][3][0] + offs[0])), 0);

psi_S1_RE =  _mm256_insertf128_ps(psi_S1_RE, _mm_load_ps(((*xyBase)[2][3][0] + offs[4])), 1);

psi_S1_IM = _mm256_setzero_ps();
psi_S1_IM =  _mm256_insertf128_ps(psi_S1_IM, _mm_load_ps(((*xyBase)[2][3][1] + offs[0])), 0);

psi_S1_IM =  _mm256_insertf128_ps(psi_S1_IM, _mm_load_ps(((*xyBase)[2][3][1] + offs[4])), 1);

b_S0_C2_RE = _mm256_add_ps( psi_S0_RE , psi_S1_RE );
b_S0_C2_IM = _mm256_add_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm256_setzero_ps();
psi_S0_RE =  _mm256_insertf128_ps(psi_S0_RE, _mm_load_ps(((*xyBase)[0][1][0] + offs[0])), 0);

psi_S0_RE =  _mm256_insertf128_ps(psi_S0_RE, _mm_load_ps(((*xyBase)[0][1][0] + offs[4])), 1);

psi_S0_IM = _mm256_setzero_ps();
psi_S0_IM =  _mm256_insertf128_ps(psi_S0_IM, _mm_load_ps(((*xyBase)[0][1][1] + offs[0])), 0);

psi_S0_IM =  _mm256_insertf128_ps(psi_S0_IM, _mm_load_ps(((*xyBase)[0][1][1] + offs[4])), 1);

psi_S1_RE = _mm256_setzero_ps();
psi_S1_RE =  _mm256_insertf128_ps(psi_S1_RE, _mm_load_ps(((*xyBase)[0][2][0] + offs[0])), 0);

psi_S1_RE =  _mm256_insertf128_ps(psi_S1_RE, _mm_load_ps(((*xyBase)[0][2][0] + offs[4])), 1);

psi_S1_IM = _mm256_setzero_ps();
psi_S1_IM =  _mm256_insertf128_ps(psi_S1_IM, _mm_load_ps(((*xyBase)[0][2][1] + offs[0])), 0);

psi_S1_IM =  _mm256_insertf128_ps(psi_S1_IM, _mm_load_ps(((*xyBase)[0][2][1] + offs[4])), 1);

b_S1_C0_RE = _mm256_sub_ps( psi_S0_RE , psi_S1_RE );
b_S1_C0_IM = _mm256_sub_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm256_setzero_ps();
psi_S0_RE =  _mm256_insertf128_ps(psi_S0_RE, _mm_load_ps(((*xyBase)[1][1][0] + offs[0])), 0);

psi_S0_RE =  _mm256_insertf128_ps(psi_S0_RE, _mm_load_ps(((*xyBase)[1][1][0] + offs[4])), 1);

psi_S0_IM = _mm256_setzero_ps();
psi_S0_IM =  _mm256_insertf128_ps(psi_S0_IM, _mm_load_ps(((*xyBase)[1][1][1] + offs[0])), 0);

psi_S0_IM =  _mm256_insertf128_ps(psi_S0_IM, _mm_load_ps(((*xyBase)[1][1][1] + offs[4])), 1);

psi_S1_RE = _mm256_setzero_ps();
psi_S1_RE =  _mm256_insertf128_ps(psi_S1_RE, _mm_load_ps(((*xyBase)[1][2][0] + offs[0])), 0);

psi_S1_RE =  _mm256_insertf128_ps(psi_S1_RE, _mm_load_ps(((*xyBase)[1][2][0] + offs[4])), 1);

psi_S1_IM = _mm256_setzero_ps();
psi_S1_IM =  _mm256_insertf128_ps(psi_S1_IM, _mm_load_ps(((*xyBase)[1][2][1] + offs[0])), 0);

psi_S1_IM =  _mm256_insertf128_ps(psi_S1_IM, _mm_load_ps(((*xyBase)[1][2][1] + offs[4])), 1);

b_S1_C1_RE = _mm256_sub_ps( psi_S0_RE , psi_S1_RE );
b_S1_C1_IM = _mm256_sub_ps( psi_S0_IM , psi_S1_IM );
psi_S0_RE = _mm256_setzero_ps();
psi_S0_RE =  _mm256_insertf128_ps(psi_S0_RE, _mm_load_ps(((*xyBase)[2][1][0] + offs[0])), 0);

psi_S0_RE =  _mm256_insertf128_ps(psi_S0_RE, _mm_load_ps(((*xyBase)[2][1][0] + offs[4])), 1);

psi_S0_IM = _mm256_setzero_ps();
psi_S0_IM =  _mm256_insertf128_ps(psi_S0_IM, _mm_load_ps(((*xyBase)[2][1][1] + offs[0])), 0);

psi_S0_IM =  _mm256_insertf128_ps(psi_S0_IM, _mm_load_ps(((*xyBase)[2][1][1] + offs[4])), 1);

psi_S1_RE = _mm256_setzero_ps();
psi_S1_RE =  _mm256_insertf128_ps(psi_S1_RE, _mm_load_ps(((*xyBase)[2][2][0] + offs[0])), 0);

psi_S1_RE =  _mm256_insertf128_ps(psi_S1_RE, _mm_load_ps(((*xyBase)[2][2][0] + offs[4])), 1);

psi_S1_IM = _mm256_setzero_ps();
psi_S1_IM =  _mm256_insertf128_ps(psi_S1_IM, _mm_load_ps(((*xyBase)[2][2][1] + offs[0])), 0);

psi_S1_IM =  _mm256_insertf128_ps(psi_S1_IM, _mm_load_ps(((*xyBase)[2][2][1] + offs[4])), 1);

b_S1_C2_RE = _mm256_sub_ps( psi_S0_RE , psi_S1_RE );
b_S1_C2_IM = _mm256_sub_ps( psi_S0_IM , psi_S1_IM );
_mm_store_ps(((outbuf)+0), _mm256_extractf128_ps(b_S0_C0_RE, 1));

_mm_store_ps(((outbuf)+4), _mm256_extractf128_ps(b_S0_C0_IM, 1));

_mm_store_ps(((outbuf)+8), _mm256_extractf128_ps(b_S0_C1_RE, 1));

_mm_store_ps(((outbuf)+12), _mm256_extractf128_ps(b_S0_C1_IM, 1));

_mm_store_ps(((outbuf)+16), _mm256_extractf128_ps(b_S0_C2_RE, 1));

_mm_store_ps(((outbuf)+20), _mm256_extractf128_ps(b_S0_C2_IM, 1));

_mm_store_ps(((outbuf)+24), _mm256_extractf128_ps(b_S1_C0_RE, 1));

_mm_store_ps(((outbuf)+28), _mm256_extractf128_ps(b_S1_C0_IM, 1));

_mm_store_ps(((outbuf)+32), _mm256_extractf128_ps(b_S1_C1_RE, 1));

_mm_store_ps(((outbuf)+36), _mm256_extractf128_ps(b_S1_C1_IM, 1));

_mm_store_ps(((outbuf)+40), _mm256_extractf128_ps(b_S1_C2_RE, 1));

_mm_store_ps(((outbuf)+44), _mm256_extractf128_ps(b_S1_C2_IM, 1));


__m256 b_S0_C0_RE = _mm256_setzero_ps();
__m256 b_S0_C0_IM = _mm256_setzero_ps();
__m256 b_S0_C1_RE = _mm256_setzero_ps();
__m256 b_S0_C1_IM = _mm256_setzero_ps();
__m256 b_S0_C2_RE = _mm256_setzero_ps();
__m256 b_S0_C2_IM = _mm256_setzero_ps();
__m256 b_S1_C0_RE = _mm256_setzero_ps();
__m256 b_S1_C0_IM = _mm256_setzero_ps();
__m256 b_S1_C1_RE = _mm256_setzero_ps();
__m256 b_S1_C1_IM = _mm256_setzero_ps();
__m256 b_S1_C2_RE = _mm256_setzero_ps();
__m256 b_S1_C2_IM = _mm256_setzero_ps();
__m256 ub_S0_C0_RE = _mm256_setzero_ps();
__m256 ub_S0_C0_IM = _mm256_setzero_ps();
__m256 ub_S0_C1_RE = _mm256_setzero_ps();
__m256 ub_S0_C1_IM = _mm256_setzero_ps();
__m256 ub_S0_C2_RE = _mm256_setzero_ps();
__m256 ub_S0_C2_IM = _mm256_setzero_ps();
__m256 ub_S1_C0_RE = _mm256_setzero_ps();
__m256 ub_S1_C0_IM = _mm256_setzero_ps();
__m256 ub_S1_C1_RE = _mm256_setzero_ps();
__m256 ub_S1_C1_IM = _mm256_setzero_ps();
__m256 ub_S1_C2_RE = _mm256_setzero_ps();
__m256 ub_S1_C2_IM = _mm256_setzero_ps();
__m256 out_S0_C0_RE = _mm256_setzero_ps();
__m256 out_S0_C0_IM = _mm256_setzero_ps();
__m256 out_S0_C1_RE = _mm256_setzero_ps();
__m256 out_S0_C1_IM = _mm256_setzero_ps();
__m256 out_S0_C2_RE = _mm256_setzero_ps();
__m256 out_S0_C2_IM = _mm256_setzero_ps();
__m256 out_S1_C0_RE = _mm256_setzero_ps();
__m256 out_S1_C0_IM = _mm256_setzero_ps();
__m256 out_S1_C1_RE = _mm256_setzero_ps();
__m256 out_S1_C1_IM = _mm256_setzero_ps();
__m256 out_S1_C2_RE = _mm256_setzero_ps();
__m256 out_S1_C2_IM = _mm256_setzero_ps();
__m256 out_S2_C0_RE = _mm256_setzero_ps();
__m256 out_S2_C0_IM = _mm256_setzero_ps();
__m256 out_S2_C1_RE = _mm256_setzero_ps();
__m256 out_S2_C1_IM = _mm256_setzero_ps();
__m256 out_S2_C2_RE = _mm256_setzero_ps();
__m256 out_S2_C2_IM = _mm256_setzero_ps();
__m256 out_S3_C0_RE = _mm256_setzero_ps();
__m256 out_S3_C0_IM = _mm256_setzero_ps();
__m256 out_S3_C1_RE = _mm256_setzero_ps();
__m256 out_S3_C1_IM = _mm256_setzero_ps();
__m256 out_S3_C2_RE = _mm256_setzero_ps();
__m256 out_S3_C2_IM = _mm256_setzero_ps();
__m256 u_00_re = _mm256_setzero_ps();
__m256 u_00_im = _mm256_setzero_ps();
__m256 u_01_re = _mm256_setzero_ps();
__m256 u_01_im = _mm256_setzero_ps();
__m256 u_02_re = _mm256_setzero_ps();
__m256 u_02_im = _mm256_setzero_ps();
__m256 u_10_re = _mm256_setzero_ps();
__m256 u_10_im = _mm256_setzero_ps();
__m256 u_11_re = _mm256_setzero_ps();
__m256 u_11_im = _mm256_setzero_ps();
__m256 u_12_re = _mm256_setzero_ps();
__m256 u_12_im = _mm256_setzero_ps();
__m256 u_20_re = _mm256_setzero_ps();
__m256 u_20_im = _mm256_setzero_ps();
__m256 u_21_re = _mm256_setzero_ps();
__m256 u_21_im = _mm256_setzero_ps();
__m256 u_22_re = _mm256_setzero_ps();
__m256 u_22_im = _mm256_setzero_ps();
__m256 psi_S0_RE = _mm256_setzero_ps();
__m256 psi_S0_IM = _mm256_setzero_ps();
__m256 psi_S1_RE = _mm256_setzero_ps();
__m256 psi_S1_IM = _mm256_setzero_ps();
__m256 tmp_1_re = _mm256_setzero_ps();
__m256 tmp_1_im = _mm256_setzero_ps();
__m256 tmp_2_re = _mm256_setzero_ps();
__m256 tmp_2_im = _mm256_setzero_ps();
__m256 tmp_3_re = _mm256_setzero_ps();
__m256 tmp_3_im = _mm256_setzero_ps();
__m256 tmp_4_re = _mm256_setzero_ps();
__m256 tmp_4_im = _mm256_setzero_ps();
__m256 zero = _mm256_setzero_ps();
zero = _mm256_setzero_ps(); 
__m256 accMask;

accMask = _mm256_int2mask_ps(mask);

__m256 beta_vec = _mm256_setzero_ps();
beta_vec = _mm256_cvtph_ps(_mm_set1_epi16(*(&beta)));

out_S0_C0_RE = _mm256_setzero_ps();
out_S0_C0_RE =  _mm256_insertf128_ps(out_S0_C0_RE, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[0][0][0] + offs[0])))), 0);

out_S0_C0_RE =  _mm256_insertf128_ps(out_S0_C0_RE, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[0][0][0] + offs[4])))), 1);

out_S0_C0_IM = _mm256_setzero_ps();
out_S0_C0_IM =  _mm256_insertf128_ps(out_S0_C0_IM, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[0][0][1] + offs[0])))), 0);

out_S0_C0_IM =  _mm256_insertf128_ps(out_S0_C0_IM, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[0][0][1] + offs[4])))), 1);

out_S1_C0_RE = _mm256_setzero_ps();
out_S1_C0_RE =  _mm256_insertf128_ps(out_S1_C0_RE, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[0][1][0] + offs[0])))), 0);

out_S1_C0_RE =  _mm256_insertf128_ps(out_S1_C0_RE, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[0][1][0] + offs[4])))), 1);

out_S1_C0_IM = _mm256_setzero_ps();
out_S1_C0_IM =  _mm256_insertf128_ps(out_S1_C0_IM, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[0][1][1] + offs[0])))), 0);

out_S1_C0_IM =  _mm256_insertf128_ps(out_S1_C0_IM, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[0][1][1] + offs[4])))), 1);

out_S2_C0_RE = _mm256_setzero_ps();
out_S2_C0_RE =  _mm256_insertf128_ps(out_S2_C0_RE, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[0][2][0] + offs[0])))), 0);

out_S2_C0_RE =  _mm256_insertf128_ps(out_S2_C0_RE, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[0][2][0] + offs[4])))), 1);

out_S2_C0_IM = _mm256_setzero_ps();
out_S2_C0_IM =  _mm256_insertf128_ps(out_S2_C0_IM, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[0][2][1] + offs[0])))), 0);

out_S2_C0_IM =  _mm256_insertf128_ps(out_S2_C0_IM, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[0][2][1] + offs[4])))), 1);

out_S3_C0_RE = _mm256_setzero_ps();
out_S3_C0_RE =  _mm256_insertf128_ps(out_S3_C0_RE, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[0][3][0] + offs[0])))), 0);

out_S3_C0_RE =  _mm256_insertf128_ps(out_S3_C0_RE, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[0][3][0] + offs[4])))), 1);

out_S3_C0_IM = _mm256_setzero_ps();
out_S3_C0_IM =  _mm256_insertf128_ps(out_S3_C0_IM, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[0][3][1] + offs[0])))), 0);

out_S3_C0_IM =  _mm256_insertf128_ps(out_S3_C0_IM, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[0][3][1] + offs[4])))), 1);

out_S0_C1_RE = _mm256_setzero_ps();
out_S0_C1_RE =  _mm256_insertf128_ps(out_S0_C1_RE, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[1][0][0] + offs[0])))), 0);

out_S0_C1_RE =  _mm256_insertf128_ps(out_S0_C1_RE, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[1][0][0] + offs[4])))), 1);

out_S0_C1_IM = _mm256_setzero_ps();
out_S0_C1_IM =  _mm256_insertf128_ps(out_S0_C1_IM, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[1][0][1] + offs[0])))), 0);

out_S0_C1_IM =  _mm256_insertf128_ps(out_S0_C1_IM, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[1][0][1] + offs[4])))), 1);

out_S1_C1_RE = _mm256_setzero_ps();
out_S1_C1_RE =  _mm256_insertf128_ps(out_S1_C1_RE, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[1][1][0] + offs[0])))), 0);

out_S1_C1_RE =  _mm256_insertf128_ps(out_S1_C1_RE, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[1][1][0] + offs[4])))), 1);

out_S1_C1_IM = _mm256_setzero_ps();
out_S1_C1_IM =  _mm256_insertf128_ps(out_S1_C1_IM, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[1][1][1] + offs[0])))), 0);

out_S1_C1_IM =  _mm256_insertf128_ps(out_S1_C1_IM, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[1][1][1] + offs[4])))), 1);

out_S2_C1_RE = _mm256_setzero_ps();
out_S2_C1_RE =  _mm256_insertf128_ps(out_S2_C1_RE, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[1][2][0] + offs[0])))), 0);

out_S2_C1_RE =  _mm256_insertf128_ps(out_S2_C1_RE, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[1][2][0] + offs[4])))), 1);

out_S2_C1_IM = _mm256_setzero_ps();
out_S2_C1_IM =  _mm256_insertf128_ps(out_S2_C1_IM, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[1][2][1] + offs[0])))), 0);

out_S2_C1_IM =  _mm256_insertf128_ps(out_S2_C1_IM, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[1][2][1] + offs[4])))), 1);

out_S3_C1_RE = _mm256_setzero_ps();
out_S3_C1_RE =  _mm256_insertf128_ps(out_S3_C1_RE, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[1][3][0] + offs[0])))), 0);

out_S3_C1_RE =  _mm256_insertf128_ps(out_S3_C1_RE, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[1][3][0] + offs[4])))), 1);

out_S3_C1_IM = _mm256_setzero_ps();
out_S3_C1_IM =  _mm256_insertf128_ps(out_S3_C1_IM, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[1][3][1] + offs[0])))), 0);

out_S3_C1_IM =  _mm256_insertf128_ps(out_S3_C1_IM, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[1][3][1] + offs[4])))), 1);

out_S0_C2_RE = _mm256_setzero_ps();
out_S0_C2_RE =  _mm256_insertf128_ps(out_S0_C2_RE, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[2][0][0] + offs[0])))), 0);

out_S0_C2_RE =  _mm256_insertf128_ps(out_S0_C2_RE, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[2][0][0] + offs[4])))), 1);

out_S0_C2_IM = _mm256_setzero_ps();
out_S0_C2_IM =  _mm256_insertf128_ps(out_S0_C2_IM, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[2][0][1] + offs[0])))), 0);

out_S0_C2_IM =  _mm256_insertf128_ps(out_S0_C2_IM, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[2][0][1] + offs[4])))), 1);

out_S1_C2_RE = _mm256_setzero_ps();
out_S1_C2_RE =  _mm256_insertf128_ps(out_S1_C2_RE, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[2][1][0] + offs[0])))), 0);

out_S1_C2_RE =  _mm256_insertf128_ps(out_S1_C2_RE, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[2][1][0] + offs[4])))), 1);

out_S1_C2_IM = _mm256_setzero_ps();
out_S1_C2_IM =  _mm256_insertf128_ps(out_S1_C2_IM, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[2][1][1] + offs[0])))), 0);

out_S1_C2_IM =  _mm256_insertf128_ps(out_S1_C2_IM, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[2][1][1] + offs[4])))), 1);

out_S2_C2_RE = _mm256_setzero_ps();
out_S2_C2_RE =  _mm256_insertf128_ps(out_S2_C2_RE, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[2][2][0] + offs[0])))), 0);

out_S2_C2_RE =  _mm256_insertf128_ps(out_S2_C2_RE, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[2][2][0] + offs[4])))), 1);

out_S2_C2_IM = _mm256_setzero_ps();
out_S2_C2_IM =  _mm256_insertf128_ps(out_S2_C2_IM, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[2][2][1] + offs[0])))), 0);

out_S2_C2_IM =  _mm256_insertf128_ps(out_S2_C2_IM, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[2][2][1] + offs[4])))), 1);

out_S3_C2_RE = _mm256_setzero_ps();
out_S3_C2_RE =  _mm256_insertf128_ps(out_S3_C2_RE, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[2][3][0] + offs[0])))), 0);

out_S3_C2_RE =  _mm256_insertf128_ps(out_S3_C2_RE, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[2][3][0] + offs[4])))), 1);

out_S3_C2_IM = _mm256_setzero_ps();
out_S3_C2_IM =  _mm256_insertf128_ps(out_S3_C2_IM, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[2][3][1] + offs[0])))), 0);

out_S3_C2_IM =  _mm256_insertf128_ps(out_S3_C2_IM, _mm_cvtph_ps(_mm_castpd_si128(_mm_load_sd((double*)((*oBase)[2][3][1] + offs[4])))), 1);

if(mask & 8) b_S0_C0_RE = _mm256_blend_ps(b_S0_C0_RE, _mm256_cvtph_ps(_mm_set1_epi16(*(((inbuf)+0)+0))), 8);

if(mask & 128) b_S0_C0_RE = _mm256_blend_ps(b_S0_C0_RE, _mm256_cvtph_ps(_mm_set1_epi16(*(((inbuf)+0)+0))), 128);

if(mask & 8) b_S0_C0_IM = _mm256_blend_ps(b_S0_C0_IM, _mm256_cvtph_ps(_mm_set1_epi16(*(((inbuf)+1)+0))), 8);

if(mask & 128) b_S0_C0_IM = _mm256_blend_ps(b_S0_C0_IM, _mm256_cvtph_ps(_mm_set1_epi16(*(((inbuf)+1)+0))), 128);

if(mask & 8) b_S0_C1_RE = _mm256_blend_ps(b_S0_C1_RE, _mm256_cvtph_ps(_mm_set1_epi16(*(((inbuf)+2)+0))), 8);

if(mask & 128) b_S0_C1_RE = _mm256_blend_ps(b_S0_C1_RE, _mm256_cvtph_ps(_mm_set1_epi16(*(((inbuf)+2)+0))), 128);

if(mask & 8) b_S0_C1_IM = _mm256_blend_ps(b_S0_C1_IM, _mm256_cvtph_ps(_mm_set1_epi16(*(((inbuf)+3)+0))), 8);

if(mask & 128) b_S0_C1_IM = _mm256_blend_ps(b_S0_C1_IM, _mm256_cvtph_ps(_mm_set1_epi16(*(((inbuf)+3)+0))), 128);

if(mask & 8) b_S0_C2_RE = _mm256_blend_ps(b_S0_C2_RE, _mm256_cvtph_ps(_mm_set1_epi16(*(((inbuf)+4)+0))), 8);

if(mask & 128) b_S0_C2_RE = _mm256_blend_ps(b_S0_C2_RE, _mm256_cvtph_ps(_mm_set1_epi16(*(((inbuf)+4)+0))), 128);

if(mask & 8) b_S0_C2_IM = _mm256_blend_ps(b_S0_C2_IM, _mm256_cvtph_ps(_mm_set1_epi16(*(((inbuf)+5)+0))), 8);

if(mask & 128) b_S0_C2_IM = _mm256_blend_ps(b_S0_C2_IM, _mm256_cvtph_ps(_mm_set1_epi16(*(((inbuf)+5)+0))), 128);

if(mask & 8) b_S1_C0_RE = _mm256_blend_ps(b_S1_C0_RE, _mm256_cvtph_ps(_mm_set1_epi16(*(((inbuf)+6)+0))), 8);

if(mask & 128) b_S1_C0_RE = _mm256_blend_ps(b_S1_C0_RE, _mm256_cvtph_ps(_mm_set1_epi16(*(((inbuf)+6)+0))), 128);

if(mask & 8) b_S1_C0_IM = _mm256_blend_ps(b_S1_C0_IM, _mm256_cvtph_ps(_mm_set1_epi16(*(((inbuf)+7)+0))), 8);

if(mask & 128) b_S1_C0_IM = _mm256_blend_ps(b_S1_C0_IM, _mm256_cvtph_ps(_mm_set1_epi16(*(((inbuf)+7)+0))), 128);

if(mask & 8) b_S1_C1_RE = _mm256_blend_ps(b_S1_C1_RE, _mm256_cvtph_ps(_mm_set1_epi16(*(((inbuf)+8)+0))), 8);

if(mask & 128) b_S1_C1_RE = _mm256_blend_ps(b_S1_C1_RE, _mm256_cvtph_ps(_mm_set1_epi16(*(((inbuf)+8)+0))), 128);

if(mask & 8) b_S1_C1_IM = _mm256_blend_ps(b_S1_C1_IM, _mm256_cvtph_ps(_mm_set1_epi16(*(((inbuf)+9)+0))), 8);

if(mask & 128) b_S1_C1_IM = _mm256_blend_ps(b_S1_C1_IM, _mm256_cvtph_ps(_mm_set1_epi16(*(((inbuf)+9)+0))), 128);

if(mask & 8) b_S1_C2_RE = _mm256_blend_ps(b_S1_C2_RE, _mm256_cvtph_ps(_mm_set1_epi16(*(((inbuf)+10)+0))), 8);

if(mask & 128) b_S1_C2_RE = _mm256_blend_ps(b_S1_C2_RE, _mm256_cvtph_ps(_mm_set1_epi16(*(((inbuf)+10)+0))), 128);

if(mask & 8) b_S1_C2_IM = _mm256_blend_ps(b_S1_C2_IM, _mm256_cvtph_ps(_mm_set1_epi16(*(((inbuf)+11)+0))), 8);

if(mask & 128) b_S1_C2_IM = _mm256_blend_ps(b_S1_C2_IM, _mm256_cvtph_ps(_mm_set1_epi16(*(((inbuf)+11)+0))), 128);

u_00_re = _mm256_cvtph_ps(_mm_load_si128((__m128i*)(*gBase)[1][0][0][0]));

u_00_im = _mm256_cvtph_ps(_mm_load_si128((__m128i*)(*gBase)[1][0][0][1]));

u_01_re = _mm256_cvtph_ps(_mm_load_si128((__m128i*)(*gBase)[1][0][1][0]));

u_01_im = _mm256_cvtph_ps(_mm_load_si128((__m128i*)(*gBase)[1][0][1][1]));

u_02_re = _mm256_cvtph_ps(_mm_load_si128((__m128i*)(*gBase)[1][0][2][0]));

u_02_im = _mm256_cvtph_ps(_mm_load_si128((__m128i*)(*gBase)[1][0][2][1]));

u_10_re = _mm256_cvtph_ps(_mm_load_si128((__m128i*)(*gBase)[1][1][0][0]));

u_10_im = _mm256_cvtph_ps(_mm_load_si128((__m128i*)(*gBase)[1][1][0][1]));

u_11_re = _mm256_cvtph_ps(_mm_load_si128((__m128i*)(*gBase)[1][1][1][0]));

u_11_im = _mm256_cvtph_ps(_mm_load_si128((__m128i*)(*gBase)[1][1][1][1]));

u_12_re = _mm256_cvtph_ps(_mm_load_si128((__m128i*)(*gBase)[1][1][2][0]));

u_12_im = _mm256_cvtph_ps(_mm_load_si128((__m128i*)(*gBase)[1][1][2][1]));

u_20_re = _mm256_cvtph_ps(_mm_load_si128((__m128i*)(*gBase)[1][2][0][0]));

u_20_im = _mm256_cvtph_ps(_mm_load_si128((__m128i*)(*gBase)[1][2][0][1]));

u_21_re = _mm256_cvtph_ps(_mm_load_si128((__m128i*)(*gBase)[1][2][1][0]));

u_21_im = _mm256_cvtph_ps(_mm_load_si128((__m128i*)(*gBase)[1][2][1][1]));

u_22_re = _mm256_cvtph_ps(_mm_load_si128((__m128i*)(*gBase)[1][2][2][0]));

u_22_im = _mm256_cvtph_ps(_mm_load_si128((__m128i*)(*gBase)[1][2][2][1]));

ub_S0_C0_RE = _mm256_mul_ps( u_00_re , b_S0_C0_RE );
ub_S0_C0_RE = _mm256_fnmadd_ps( u_00_im , b_S0_C0_IM , ub_S0_C0_RE );
ub_S0_C0_IM = _mm256_mul_ps( u_00_re , b_S0_C0_IM );
ub_S0_C0_IM = _mm256_fmadd_ps( u_00_im , b_S0_C0_RE , ub_S0_C0_IM );
ub_S0_C0_RE = _mm256_fmadd_ps( u_10_re , b_S0_C1_RE , ub_S0_C0_RE );
ub_S0_C0_RE = _mm256_fnmadd_ps( u_10_im , b_S0_C1_IM , ub_S0_C0_RE );
ub_S0_C0_IM = _mm256_fmadd_ps( u_10_re , b_S0_C1_IM , ub_S0_C0_IM );
ub_S0_C0_IM = _mm256_fmadd_ps( u_10_im , b_S0_C1_RE , ub_S0_C0_IM );
ub_S0_C0_RE = _mm256_fmadd_ps( u_20_re , b_S0_C2_RE , ub_S0_C0_RE );
ub_S0_C0_RE = _mm256_fnmadd_ps( u_20_im , b_S0_C2_IM , ub_S0_C0_RE );
ub_S0_C0_IM = _mm256_fmadd_ps( u_20_re , b_S0_C2_IM , ub_S0_C0_IM );
ub_S0_C0_IM = _mm256_fmadd_ps( u_20_im , b_S0_C2_RE , ub_S0_C0_IM );
ub_S0_C1_RE = _mm256_mul_ps( u_01_re , b_S0_C0_RE );
ub_S0_C1_RE = _mm256_fnmadd_ps( u_01_im , b_S0_C0_IM , ub_S0_C1_RE );
ub_S0_C1_IM = _mm256_mul_ps( u_01_re , b_S0_C0_IM );
ub_S0_C1_IM = _mm256_fmadd_ps( u_01_im , b_S0_C0_RE , ub_S0_C1_IM );
ub_S0_C1_RE = _mm256_fmadd_ps( u_11_re , b_S0_C1_RE , ub_S0_C1_RE );
ub_S0_C1_RE = _mm256_fnmadd_ps( u_11_im , b_S0_C1_IM , ub_S0_C1_RE );
ub_S0_C1_IM = _mm256_fmadd_ps( u_11_re , b_S0_C1_IM , ub_S0_C1_IM );
ub_S0_C1_IM = _mm256_fmadd_ps( u_11_im , b_S0_C1_RE , ub_S0_C1_IM );
ub_S0_C1_RE = _mm256_fmadd_ps( u_21_re , b_S0_C2_RE , ub_S0_C1_RE );
ub_S0_C1_RE = _mm256_fnmadd_ps( u_21_im , b_S0_C2_IM , ub_S0_C1_RE );
ub_S0_C1_IM = _mm256_fmadd_ps( u_21_re , b_S0_C2_IM , ub_S0_C1_IM );
ub_S0_C1_IM = _mm256_fmadd_ps( u_21_im , b_S0_C2_RE , ub_S0_C1_IM );
ub_S0_C2_RE = _mm256_mul_ps( u_02_re , b_S0_C0_RE );
ub_S0_C2_RE = _mm256_fnmadd_ps( u_02_im , b_S0_C0_IM , ub_S0_C2_RE );
ub_S0_C2_IM = _mm256_mul_ps( u_02_re , b_S0_C0_IM );
ub_S0_C2_IM = _mm256_fmadd_ps( u_02_im , b_S0_C0_RE , ub_S0_C2_IM );
ub_S0_C2_RE = _mm256_fmadd_ps( u_12_re , b_S0_C1_RE , ub_S0_C2_RE );
ub_S0_C2_RE = _mm256_fnmadd_ps( u_12_im , b_S0_C1_IM , ub_S0_C2_RE );
ub_S0_C2_IM = _mm256_fmadd_ps( u_12_re , b_S0_C1_IM , ub_S0_C2_IM );
ub_S0_C2_IM = _mm256_fmadd_ps( u_12_im , b_S0_C1_RE , ub_S0_C2_IM );
ub_S0_C2_RE = _mm256_fmadd_ps( u_22_re , b_S0_C2_RE , ub_S0_C2_RE );
ub_S0_C2_RE = _mm256_fnmadd_ps( u_22_im , b_S0_C2_IM , ub_S0_C2_RE );
ub_S0_C2_IM = _mm256_fmadd_ps( u_22_re , b_S0_C2_IM , ub_S0_C2_IM );
ub_S0_C2_IM = _mm256_fmadd_ps( u_22_im , b_S0_C2_RE , ub_S0_C2_IM );
ub_S1_C0_RE = _mm256_mul_ps( u_00_re , b_S1_C0_RE );
ub_S1_C0_RE = _mm256_fnmadd_ps( u_00_im , b_S1_C0_IM , ub_S1_C0_RE );
ub_S1_C0_IM = _mm256_mul_ps( u_00_re , b_S1_C0_IM );
ub_S1_C0_IM = _mm256_fmadd_ps( u_00_im , b_S1_C0_RE , ub_S1_C0_IM );
ub_S1_C0_RE = _mm256_fmadd_ps( u_10_re , b_S1_C1_RE , ub_S1_C0_RE );
ub_S1_C0_RE = _mm256_fnmadd_ps( u_10_im , b_S1_C1_IM , ub_S1_C0_RE );
ub_S1_C0_IM = _mm256_fmadd_ps( u_10_re , b_S1_C1_IM , ub_S1_C0_IM );
ub_S1_C0_IM = _mm256_fmadd_ps( u_10_im , b_S1_C1_RE , ub_S1_C0_IM );
ub_S1_C0_RE = _mm256_fmadd_ps( u_20_re , b_S1_C2_RE , ub_S1_C0_RE );
ub_S1_C0_RE = _mm256_fnmadd_ps( u_20_im , b_S1_C2_IM , ub_S1_C0_RE );
ub_S1_C0_IM = _mm256_fmadd_ps( u_20_re , b_S1_C2_IM , ub_S1_C0_IM );
ub_S1_C0_IM = _mm256_fmadd_ps( u_20_im , b_S1_C2_RE , ub_S1_C0_IM );
ub_S1_C1_RE = _mm256_mul_ps( u_01_re , b_S1_C0_RE );
ub_S1_C1_RE = _mm256_fnmadd_ps( u_01_im , b_S1_C0_IM , ub_S1_C1_RE );
ub_S1_C1_IM = _mm256_mul_ps( u_01_re , b_S1_C0_IM );
ub_S1_C1_IM = _mm256_fmadd_ps( u_01_im , b_S1_C0_RE , ub_S1_C1_IM );
ub_S1_C1_RE = _mm256_fmadd_ps( u_11_re , b_S1_C1_RE , ub_S1_C1_RE );
ub_S1_C1_RE = _mm256_fnmadd_ps( u_11_im , b_S1_C1_IM , ub_S1_C1_RE );
ub_S1_C1_IM = _mm256_fmadd_ps( u_11_re , b_S1_C1_IM , ub_S1_C1_IM );
ub_S1_C1_IM = _mm256_fmadd_ps( u_11_im , b_S1_C1_RE , ub_S1_C1_IM );
ub_S1_C1_RE = _mm256_fmadd_ps( u_21_re , b_S1_C2_RE , ub_S1_C1_RE );
ub_S1_C1_RE = _mm256_fnmadd_ps( u_21_im , b_S1_C2_IM , ub_S1_C1_RE );
ub_S1_C1_IM = _mm256_fmadd_ps( u_21_re , b_S1_C2_IM , ub_S1_C1_IM );
ub_S1_C1_IM = _mm256_fmadd_ps( u_21_im , b_S1_C2_RE , ub_S1_C1_IM );
ub_S1_C2_RE = _mm256_mul_ps( u_02_re , b_S1_C0_RE );
ub_S1_C2_RE = _mm256_fnmadd_ps( u_02_im , b_S1_C0_IM , ub_S1_C2_RE );
ub_S1_C2_IM = _mm256_mul_ps( u_02_re , b_S1_C0_IM );
ub_S1_C2_IM = _mm256_fmadd_ps( u_02_im , b_S1_C0_RE , ub_S1_C2_IM );
ub_S1_C2_RE = _mm256_fmadd_ps( u_12_re , b_S1_C1_RE , ub_S1_C2_RE );
ub_S1_C2_RE = _mm256_fnmadd_ps( u_12_im , b_S1_C1_IM , ub_S1_C2_RE );
ub_S1_C2_IM = _mm256_fmadd_ps( u_12_re , b_S1_C1_IM , ub_S1_C2_IM );
ub_S1_C2_IM = _mm256_fmadd_ps( u_12_im , b_S1_C1_RE , ub_S1_C2_IM );
ub_S1_C2_RE = _mm256_fmadd_ps( u_22_re , b_S1_C2_RE , ub_S1_C2_RE );
ub_S1_C2_RE = _mm256_fnmadd_ps( u_22_im , b_S1_C2_IM , ub_S1_C2_RE );
ub_S1_C2_IM = _mm256_fmadd_ps( u_22_re , b_S1_C2_IM , ub_S1_C2_IM );
ub_S1_C2_IM = _mm256_fmadd_ps( u_22_im , b_S1_C2_RE , ub_S1_C2_IM );
out_S0_C0_RE = _mm256_blendv_ps(out_S0_C0_RE, _mm256_fnmadd_ps( beta_vec , ub_S0_C0_RE , out_S0_C0_RE ), accMask);
out_S0_C0_IM = _mm256_blendv_ps(out_S0_C0_IM, _mm256_fnmadd_ps( beta_vec , ub_S0_C0_IM , out_S0_C0_IM ), accMask);
out_S0_C1_RE = _mm256_blendv_ps(out_S0_C1_RE, _mm256_fnmadd_ps( beta_vec , ub_S0_C1_RE , out_S0_C1_RE ), accMask);
out_S0_C1_IM = _mm256_blendv_ps(out_S0_C1_IM, _mm256_fnmadd_ps( beta_vec , ub_S0_C1_IM , out_S0_C1_IM ), accMask);
out_S0_C2_RE = _mm256_blendv_ps(out_S0_C2_RE, _mm256_fnmadd_ps( beta_vec , ub_S0_C2_RE , out_S0_C2_RE ), accMask);
out_S0_C2_IM = _mm256_blendv_ps(out_S0_C2_IM, _mm256_fnmadd_ps( beta_vec , ub_S0_C2_IM , out_S0_C2_IM ), accMask);
out_S3_C0_RE = _mm256_blendv_ps(out_S3_C0_RE, _mm256_fnmadd_ps( beta_vec , ub_S0_C0_IM , out_S3_C0_RE ), accMask);
out_S3_C0_IM =_mm256_blendv_ps(out_S3_C0_IM, _mm256_fmadd_ps( beta_vec , ub_S0_C0_RE , out_S3_C0_IM ), accMask);
out_S3_C1_RE = _mm256_blendv_ps(out_S3_C1_RE, _mm256_fnmadd_ps( beta_vec , ub_S0_C1_IM , out_S3_C1_RE ), accMask);
out_S3_C1_IM =_mm256_blendv_ps(out_S3_C1_IM, _mm256_fmadd_ps( beta_vec , ub_S0_C1_RE , out_S3_C1_IM ), accMask);
out_S3_C2_RE = _mm256_blendv_ps(out_S3_C2_RE, _mm256_fnmadd_ps( beta_vec , ub_S0_C2_IM , out_S3_C2_RE ), accMask);
out_S3_C2_IM =_mm256_blendv_ps(out_S3_C2_IM, _mm256_fmadd_ps( beta_vec , ub_S0_C2_RE , out_S3_C2_IM ), accMask);
out_S1_C0_RE = _mm256_blendv_ps(out_S1_C0_RE, _mm256_fnmadd_ps( beta_vec , ub_S1_C0_RE , out_S1_C0_RE ), accMask);
out_S1_C0_IM = _mm256_blendv_ps(out_S1_C0_IM, _mm256_fnmadd_ps( beta_vec , ub_S1_C0_IM , out_S1_C0_IM ), accMask);
out_S1_C1_RE = _mm256_blendv_ps(out_S1_C1_RE, _mm256_fnmadd_ps( beta_vec , ub_S1_C1_RE , out_S1_C1_RE ), accMask);
out_S1_C1_IM = _mm256_blendv_ps(out_S1_C1_IM, _mm256_fnmadd_ps( beta_vec , ub_S1_C1_IM , out_S1_C1_IM ), accMask);
out_S1_C2_RE = _mm256_blendv_ps(out_S1_C2_RE, _mm256_fnmadd_ps( beta_vec , ub_S1_C2_RE , out_S1_C2_RE ), accMask);
out_S1_C2_IM = _mm256_blendv_ps(out_S1_C2_IM, _mm256_fnmadd_ps( beta_vec , ub_S1_C2_IM , out_S1_C2_IM ), accMask);
out_S2_C0_RE = _mm256_blendv_ps(out_S2_C0_RE, _mm256_fnmadd_ps( beta_vec , ub_S1_C0_IM , out_S2_C0_RE ), accMask);
out_S2_C0_IM =_mm256_blendv_ps(out_S2_C0_IM, _mm256_fmadd_ps( beta_vec , ub_S1_C0_RE , out_S2_C0_IM ), accMask);
out_S2_C1_RE = _mm256_blendv_ps(out_S2_C1_RE, _mm256_fnmadd_ps( beta_vec , ub_S1_C1_IM , out_S2_C1_RE ), accMask);
out_S2_C1_IM =_mm256_blendv_ps(out_S2_C1_IM, _mm256_fmadd_ps( beta_vec , ub_S1_C1_RE , out_S2_C1_IM ), accMask);
out_S2_C2_RE = _mm256_blendv_ps(out_S2_C2_RE, _mm256_fnmadd_ps( beta_vec , ub_S1_C2_IM , out_S2_C2_RE ), accMask);
out_S2_C2_IM =_mm256_blendv_ps(out_S2_C2_IM, _mm256_fmadd_ps( beta_vec , ub_S1_C2_RE , out_S2_C2_IM ), accMask);
_mm_store_sd((double*)((*oBase)[0][0][0] + offs[0]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S0_C0_RE, 0), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[0][0][0] + offs[4]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S0_C0_RE, 1), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[0][0][1] + offs[0]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S0_C0_IM, 0), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[0][0][1] + offs[4]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S0_C0_IM, 1), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[1][0][0] + offs[0]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S0_C1_RE, 0), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[1][0][0] + offs[4]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S0_C1_RE, 1), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[1][0][1] + offs[0]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S0_C1_IM, 0), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[1][0][1] + offs[4]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S0_C1_IM, 1), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[2][0][0] + offs[0]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S0_C2_RE, 0), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[2][0][0] + offs[4]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S0_C2_RE, 1), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[2][0][1] + offs[0]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S0_C2_IM, 0), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[2][0][1] + offs[4]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S0_C2_IM, 1), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[0][1][0] + offs[0]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S1_C0_RE, 0), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[0][1][0] + offs[4]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S1_C0_RE, 1), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[0][1][1] + offs[0]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S1_C0_IM, 0), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[0][1][1] + offs[4]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S1_C0_IM, 1), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[1][1][0] + offs[0]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S1_C1_RE, 0), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[1][1][0] + offs[4]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S1_C1_RE, 1), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[1][1][1] + offs[0]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S1_C1_IM, 0), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[1][1][1] + offs[4]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S1_C1_IM, 1), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[2][1][0] + offs[0]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S1_C2_RE, 0), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[2][1][0] + offs[4]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S1_C2_RE, 1), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[2][1][1] + offs[0]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S1_C2_IM, 0), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[2][1][1] + offs[4]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S1_C2_IM, 1), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[0][2][0] + offs[0]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S2_C0_RE, 0), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[0][2][0] + offs[4]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S2_C0_RE, 1), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[0][2][1] + offs[0]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S2_C0_IM, 0), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[0][2][1] + offs[4]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S2_C0_IM, 1), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[1][2][0] + offs[0]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S2_C1_RE, 0), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[1][2][0] + offs[4]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S2_C1_RE, 1), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[1][2][1] + offs[0]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S2_C1_IM, 0), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[1][2][1] + offs[4]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S2_C1_IM, 1), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[2][2][0] + offs[0]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S2_C2_RE, 0), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[2][2][0] + offs[4]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S2_C2_RE, 1), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[2][2][1] + offs[0]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S2_C2_IM, 0), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[2][2][1] + offs[4]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S2_C2_IM, 1), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[0][3][0] + offs[0]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S3_C0_RE, 0), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[0][3][0] + offs[4]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S3_C0_RE, 1), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[0][3][1] + offs[0]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S3_C0_IM, 0), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[0][3][1] + offs[4]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S3_C0_IM, 1), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[1][3][0] + offs[0]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S3_C1_RE, 0), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[1][3][0] + offs[4]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S3_C1_RE, 1), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[1][3][1] + offs[0]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S3_C1_IM, 0), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[1][3][1] + offs[4]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S3_C1_IM, 1), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[2][3][0] + offs[0]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S3_C2_RE, 0), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[2][3][0] + offs[4]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S3_C2_RE, 1), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[2][3][1] + offs[0]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S3_C2_IM, 0), _MM_FROUND_TO_NEAREST_INT)));

_mm_store_sd((double*)((*oBase)[2][3][1] + offs[4]), _mm_castsi128_pd(_mm_cvtps_ph(_mm256_extractf128_ps(out_S3_C2_IM, 1), _MM_FROUND_TO_NEAREST_INT)));


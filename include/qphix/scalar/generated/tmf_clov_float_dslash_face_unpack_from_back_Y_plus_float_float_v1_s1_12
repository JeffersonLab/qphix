float b_S0_C0_RE = 0.0f;
float b_S0_C0_IM = 0.0f;
float b_S0_C1_RE = 0.0f;
float b_S0_C1_IM = 0.0f;
float b_S0_C2_RE = 0.0f;
float b_S0_C2_IM = 0.0f;
float b_S1_C0_RE = 0.0f;
float b_S1_C0_IM = 0.0f;
float b_S1_C1_RE = 0.0f;
float b_S1_C1_IM = 0.0f;
float b_S1_C2_RE = 0.0f;
float b_S1_C2_IM = 0.0f;
float ub_S0_C0_RE = 0.0f;
float ub_S0_C0_IM = 0.0f;
float ub_S0_C1_RE = 0.0f;
float ub_S0_C1_IM = 0.0f;
float ub_S0_C2_RE = 0.0f;
float ub_S0_C2_IM = 0.0f;
float ub_S1_C0_RE = 0.0f;
float ub_S1_C0_IM = 0.0f;
float ub_S1_C1_RE = 0.0f;
float ub_S1_C1_IM = 0.0f;
float ub_S1_C2_RE = 0.0f;
float ub_S1_C2_IM = 0.0f;
float out_S0_C0_RE = 0.0f;
float out_S0_C0_IM = 0.0f;
float out_S0_C1_RE = 0.0f;
float out_S0_C1_IM = 0.0f;
float out_S0_C2_RE = 0.0f;
float out_S0_C2_IM = 0.0f;
float out_S1_C0_RE = 0.0f;
float out_S1_C0_IM = 0.0f;
float out_S1_C1_RE = 0.0f;
float out_S1_C1_IM = 0.0f;
float out_S1_C2_RE = 0.0f;
float out_S1_C2_IM = 0.0f;
float out_S2_C0_RE = 0.0f;
float out_S2_C0_IM = 0.0f;
float out_S2_C1_RE = 0.0f;
float out_S2_C1_IM = 0.0f;
float out_S2_C2_RE = 0.0f;
float out_S2_C2_IM = 0.0f;
float out_S3_C0_RE = 0.0f;
float out_S3_C0_IM = 0.0f;
float out_S3_C1_RE = 0.0f;
float out_S3_C1_IM = 0.0f;
float out_S3_C2_RE = 0.0f;
float out_S3_C2_IM = 0.0f;
float u_00_re = 0.0f;
float u_00_im = 0.0f;
float u_01_re = 0.0f;
float u_01_im = 0.0f;
float u_02_re = 0.0f;
float u_02_im = 0.0f;
float u_10_re = 0.0f;
float u_10_im = 0.0f;
float u_11_re = 0.0f;
float u_11_im = 0.0f;
float u_12_re = 0.0f;
float u_12_im = 0.0f;
float u_20_re = 0.0f;
float u_20_im = 0.0f;
float u_21_re = 0.0f;
float u_21_im = 0.0f;
float u_22_re = 0.0f;
float u_22_im = 0.0f;
float psi_S0_RE = 0.0f;
float psi_S0_IM = 0.0f;
float psi_S1_RE = 0.0f;
float psi_S1_IM = 0.0f;
float tmp_1_re = 0.0f;
float tmp_1_im = 0.0f;
float tmp_2_re = 0.0f;
float tmp_2_im = 0.0f;
float tmp_3_re = 0.0f;
float tmp_3_im = 0.0f;
float tmp_4_re = 0.0f;
float tmp_4_im = 0.0f;
float zero = 0.0f;
 _mm_prefetch((const char *)( (((inbuf) + hsprefdist)+0) ), _MM_HINT_T1);

zero = 0.0f;
float dout_S0_C0_RE = 0.0f;
float dout_S0_C0_IM = 0.0f;
float dout_S0_C1_RE = 0.0f;
float dout_S0_C1_IM = 0.0f;
float dout_S0_C2_RE = 0.0f;
float dout_S0_C2_IM = 0.0f;
float dout_S1_C0_RE = 0.0f;
float dout_S1_C0_IM = 0.0f;
float dout_S1_C1_RE = 0.0f;
float dout_S1_C1_IM = 0.0f;
float dout_S1_C2_RE = 0.0f;
float dout_S1_C2_IM = 0.0f;
float dout_S2_C0_RE = 0.0f;
float dout_S2_C0_IM = 0.0f;
float dout_S2_C1_RE = 0.0f;
float dout_S2_C1_IM = 0.0f;
float dout_S2_C2_RE = 0.0f;
float dout_S2_C2_IM = 0.0f;
float dout_S3_C0_RE = 0.0f;
float dout_S3_C0_IM = 0.0f;
float dout_S3_C1_RE = 0.0f;
float dout_S3_C1_IM = 0.0f;
float dout_S3_C2_RE = 0.0f;
float dout_S3_C2_IM = 0.0f;
float cl_full_00_RE = 0.0f;
float cl_full_00_IM = 0.0f;
float cl_full_01_RE = 0.0f;
float cl_full_01_IM = 0.0f;
float cl_full_02_RE = 0.0f;
float cl_full_02_IM = 0.0f;
float cl_full_03_RE = 0.0f;
float cl_full_03_IM = 0.0f;
float cl_full_04_RE = 0.0f;
float cl_full_04_IM = 0.0f;
float cl_full_05_RE = 0.0f;
float cl_full_05_IM = 0.0f;
float cl_full_10_RE = 0.0f;
float cl_full_10_IM = 0.0f;
float cl_full_11_RE = 0.0f;
float cl_full_11_IM = 0.0f;
float cl_full_12_RE = 0.0f;
float cl_full_12_IM = 0.0f;
float cl_full_13_RE = 0.0f;
float cl_full_13_IM = 0.0f;
float cl_full_14_RE = 0.0f;
float cl_full_14_IM = 0.0f;
float cl_full_15_RE = 0.0f;
float cl_full_15_IM = 0.0f;
float cl_full_20_RE = 0.0f;
float cl_full_20_IM = 0.0f;
float cl_full_21_RE = 0.0f;
float cl_full_21_IM = 0.0f;
float cl_full_22_RE = 0.0f;
float cl_full_22_IM = 0.0f;
float cl_full_23_RE = 0.0f;
float cl_full_23_IM = 0.0f;
float cl_full_24_RE = 0.0f;
float cl_full_24_IM = 0.0f;
float cl_full_25_RE = 0.0f;
float cl_full_25_IM = 0.0f;
float cl_full_30_RE = 0.0f;
float cl_full_30_IM = 0.0f;
float cl_full_31_RE = 0.0f;
float cl_full_31_IM = 0.0f;
float cl_full_32_RE = 0.0f;
float cl_full_32_IM = 0.0f;
float cl_full_33_RE = 0.0f;
float cl_full_33_IM = 0.0f;
float cl_full_34_RE = 0.0f;
float cl_full_34_IM = 0.0f;
float cl_full_35_RE = 0.0f;
float cl_full_35_IM = 0.0f;
float cl_full_40_RE = 0.0f;
float cl_full_40_IM = 0.0f;
float cl_full_41_RE = 0.0f;
float cl_full_41_IM = 0.0f;
float cl_full_42_RE = 0.0f;
float cl_full_42_IM = 0.0f;
float cl_full_43_RE = 0.0f;
float cl_full_43_IM = 0.0f;
float cl_full_44_RE = 0.0f;
float cl_full_44_IM = 0.0f;
float cl_full_45_RE = 0.0f;
float cl_full_45_IM = 0.0f;
float cl_full_50_RE = 0.0f;
float cl_full_50_IM = 0.0f;
float cl_full_51_RE = 0.0f;
float cl_full_51_IM = 0.0f;
float cl_full_52_RE = 0.0f;
float cl_full_52_IM = 0.0f;
float cl_full_53_RE = 0.0f;
float cl_full_53_IM = 0.0f;
float cl_full_54_RE = 0.0f;
float cl_full_54_IM = 0.0f;
float cl_full_55_RE = 0.0f;
float cl_full_55_IM = 0.0f;
float beta_vec = 0.0f;
beta_vec = (*(&beta));

dout_S0_C0_RE = 0.0f;
dout_S0_C0_IM = 0.0f;
dout_S0_C1_RE = 0.0f;
dout_S0_C1_IM = 0.0f;
dout_S0_C2_RE = 0.0f;
dout_S0_C2_IM = 0.0f;
dout_S1_C0_RE = 0.0f;
dout_S1_C0_IM = 0.0f;
dout_S1_C1_RE = 0.0f;
dout_S1_C1_IM = 0.0f;
dout_S1_C2_RE = 0.0f;
dout_S1_C2_IM = 0.0f;
dout_S2_C0_RE = 0.0f;
dout_S2_C0_IM = 0.0f;
dout_S2_C1_RE = 0.0f;
dout_S2_C1_IM = 0.0f;
dout_S2_C2_RE = 0.0f;
dout_S2_C2_IM = 0.0f;
dout_S3_C0_RE = 0.0f;
dout_S3_C0_IM = 0.0f;
dout_S3_C1_RE = 0.0f;
dout_S3_C1_IM = 0.0f;
dout_S3_C2_RE = 0.0f;
dout_S3_C2_IM = 0.0f;
 _mm_prefetch((const char *)( ((inbuf)+0) ), _MM_HINT_T0);


out_S0_C0_RE = *(((*oBase)[0][0][0] + offs[0]));


out_S0_C0_IM = *(((*oBase)[0][0][1] + offs[0]));


out_S1_C0_RE = *(((*oBase)[0][1][0] + offs[0]));


out_S1_C0_IM = *(((*oBase)[0][1][1] + offs[0]));


out_S2_C0_RE = *(((*oBase)[0][2][0] + offs[0]));


out_S2_C0_IM = *(((*oBase)[0][2][1] + offs[0]));


out_S3_C0_RE = *(((*oBase)[0][3][0] + offs[0]));


out_S3_C0_IM = *(((*oBase)[0][3][1] + offs[0]));


out_S0_C1_RE = *(((*oBase)[1][0][0] + offs[0]));


out_S0_C1_IM = *(((*oBase)[1][0][1] + offs[0]));


out_S1_C1_RE = *(((*oBase)[1][1][0] + offs[0]));


out_S1_C1_IM = *(((*oBase)[1][1][1] + offs[0]));


out_S2_C1_RE = *(((*oBase)[1][2][0] + offs[0]));


out_S2_C1_IM = *(((*oBase)[1][2][1] + offs[0]));


out_S3_C1_RE = *(((*oBase)[1][3][0] + offs[0]));


out_S3_C1_IM = *(((*oBase)[1][3][1] + offs[0]));


out_S0_C2_RE = *(((*oBase)[2][0][0] + offs[0]));


out_S0_C2_IM = *(((*oBase)[2][0][1] + offs[0]));


out_S1_C2_RE = *(((*oBase)[2][1][0] + offs[0]));


out_S1_C2_IM = *(((*oBase)[2][1][1] + offs[0]));


out_S2_C2_RE = *(((*oBase)[2][2][0] + offs[0]));


out_S2_C2_IM = *(((*oBase)[2][2][1] + offs[0]));


out_S3_C2_RE = *(((*oBase)[2][3][0] + offs[0]));


out_S3_C2_IM = *(((*oBase)[2][3][1] + offs[0]));

b_S0_C0_RE = *(((inbuf)+0));

b_S0_C0_IM = *(((inbuf)+1));

b_S0_C1_RE = *(((inbuf)+2));

b_S0_C1_IM = *(((inbuf)+3));

b_S0_C2_RE = *(((inbuf)+4));

b_S0_C2_IM = *(((inbuf)+5));

b_S1_C0_RE = *(((inbuf)+6));

b_S1_C0_IM = *(((inbuf)+7));

b_S1_C1_RE = *(((inbuf)+8));

b_S1_C1_IM = *(((inbuf)+9));

b_S1_C2_RE = *(((inbuf)+10));

b_S1_C2_IM = *(((inbuf)+11));

u_00_re = *((*gBase)[2][0][0][0]);

u_00_im = *((*gBase)[2][0][0][1]);

u_01_re = *((*gBase)[2][0][1][0]);

u_01_im = *((*gBase)[2][0][1][1]);

u_02_re = *((*gBase)[2][0][2][0]);

u_02_im = *((*gBase)[2][0][2][1]);

u_10_re = *((*gBase)[2][1][0][0]);

u_10_im = *((*gBase)[2][1][0][1]);

u_11_re = *((*gBase)[2][1][1][0]);

u_11_im = *((*gBase)[2][1][1][1]);

u_12_re = *((*gBase)[2][1][2][0]);

u_12_im = *((*gBase)[2][1][2][1]);

u_20_re = u_01_re * u_12_re;
u_20_re = u_20_re - (u_01_im * u_12_im);
u_20_re = u_20_re - (u_02_re * u_11_re);
u_20_re = ((u_02_im * u_11_im) + u_20_re);
u_20_im = u_02_re * u_11_im;
u_20_im = ((u_02_im * u_11_re) + u_20_im);
u_20_im = u_20_im - (u_01_re * u_12_im);
u_20_im = u_20_im - (u_01_im * u_12_re);
u_21_re = u_02_re * u_10_re;
u_21_re = u_21_re - (u_02_im * u_10_im);
u_21_re = u_21_re - (u_00_re * u_12_re);
u_21_re = ((u_00_im * u_12_im) + u_21_re);
u_21_im = u_00_re * u_12_im;
u_21_im = ((u_00_im * u_12_re) + u_21_im);
u_21_im = u_21_im - (u_02_re * u_10_im);
u_21_im = u_21_im - (u_02_im * u_10_re);
u_22_re = u_00_re * u_11_re;
u_22_re = u_22_re - (u_00_im * u_11_im);
u_22_re = u_22_re - (u_01_re * u_10_re);
u_22_re = ((u_01_im * u_10_im) + u_22_re);
u_22_im = u_01_re * u_10_im;
u_22_im = ((u_01_im * u_10_re) + u_22_im);
u_22_im = u_22_im - (u_00_re * u_11_im);
u_22_im = u_22_im - (u_00_im * u_11_re);
ub_S0_C0_RE = u_00_re * b_S0_C0_RE;
ub_S0_C0_RE = ((u_00_im * b_S0_C0_IM) + ub_S0_C0_RE);
ub_S0_C0_IM = u_00_re * b_S0_C0_IM;
ub_S0_C0_IM = ub_S0_C0_IM - (u_00_im * b_S0_C0_RE);
ub_S0_C0_RE = ((u_01_re * b_S0_C1_RE) + ub_S0_C0_RE);
ub_S0_C0_RE = ((u_01_im * b_S0_C1_IM) + ub_S0_C0_RE);
ub_S0_C0_IM = ((u_01_re * b_S0_C1_IM) + ub_S0_C0_IM);
ub_S0_C0_IM = ub_S0_C0_IM - (u_01_im * b_S0_C1_RE);
ub_S0_C0_RE = ((u_02_re * b_S0_C2_RE) + ub_S0_C0_RE);
ub_S0_C0_RE = ((u_02_im * b_S0_C2_IM) + ub_S0_C0_RE);
ub_S0_C0_IM = ((u_02_re * b_S0_C2_IM) + ub_S0_C0_IM);
ub_S0_C0_IM = ub_S0_C0_IM - (u_02_im * b_S0_C2_RE);
ub_S0_C1_RE = u_10_re * b_S0_C0_RE;
ub_S0_C1_RE = ((u_10_im * b_S0_C0_IM) + ub_S0_C1_RE);
ub_S0_C1_IM = u_10_re * b_S0_C0_IM;
ub_S0_C1_IM = ub_S0_C1_IM - (u_10_im * b_S0_C0_RE);
ub_S0_C1_RE = ((u_11_re * b_S0_C1_RE) + ub_S0_C1_RE);
ub_S0_C1_RE = ((u_11_im * b_S0_C1_IM) + ub_S0_C1_RE);
ub_S0_C1_IM = ((u_11_re * b_S0_C1_IM) + ub_S0_C1_IM);
ub_S0_C1_IM = ub_S0_C1_IM - (u_11_im * b_S0_C1_RE);
ub_S0_C1_RE = ((u_12_re * b_S0_C2_RE) + ub_S0_C1_RE);
ub_S0_C1_RE = ((u_12_im * b_S0_C2_IM) + ub_S0_C1_RE);
ub_S0_C1_IM = ((u_12_re * b_S0_C2_IM) + ub_S0_C1_IM);
ub_S0_C1_IM = ub_S0_C1_IM - (u_12_im * b_S0_C2_RE);
ub_S0_C2_RE = u_20_re * b_S0_C0_RE;
ub_S0_C2_RE = ((u_20_im * b_S0_C0_IM) + ub_S0_C2_RE);
ub_S0_C2_IM = u_20_re * b_S0_C0_IM;
ub_S0_C2_IM = ub_S0_C2_IM - (u_20_im * b_S0_C0_RE);
ub_S0_C2_RE = ((u_21_re * b_S0_C1_RE) + ub_S0_C2_RE);
ub_S0_C2_RE = ((u_21_im * b_S0_C1_IM) + ub_S0_C2_RE);
ub_S0_C2_IM = ((u_21_re * b_S0_C1_IM) + ub_S0_C2_IM);
ub_S0_C2_IM = ub_S0_C2_IM - (u_21_im * b_S0_C1_RE);
ub_S0_C2_RE = ((u_22_re * b_S0_C2_RE) + ub_S0_C2_RE);
ub_S0_C2_RE = ((u_22_im * b_S0_C2_IM) + ub_S0_C2_RE);
ub_S0_C2_IM = ((u_22_re * b_S0_C2_IM) + ub_S0_C2_IM);
ub_S0_C2_IM = ub_S0_C2_IM - (u_22_im * b_S0_C2_RE);
ub_S1_C0_RE = u_00_re * b_S1_C0_RE;
ub_S1_C0_RE = ((u_00_im * b_S1_C0_IM) + ub_S1_C0_RE);
ub_S1_C0_IM = u_00_re * b_S1_C0_IM;
ub_S1_C0_IM = ub_S1_C0_IM - (u_00_im * b_S1_C0_RE);
ub_S1_C0_RE = ((u_01_re * b_S1_C1_RE) + ub_S1_C0_RE);
ub_S1_C0_RE = ((u_01_im * b_S1_C1_IM) + ub_S1_C0_RE);
ub_S1_C0_IM = ((u_01_re * b_S1_C1_IM) + ub_S1_C0_IM);
ub_S1_C0_IM = ub_S1_C0_IM - (u_01_im * b_S1_C1_RE);
ub_S1_C0_RE = ((u_02_re * b_S1_C2_RE) + ub_S1_C0_RE);
ub_S1_C0_RE = ((u_02_im * b_S1_C2_IM) + ub_S1_C0_RE);
ub_S1_C0_IM = ((u_02_re * b_S1_C2_IM) + ub_S1_C0_IM);
ub_S1_C0_IM = ub_S1_C0_IM - (u_02_im * b_S1_C2_RE);
ub_S1_C1_RE = u_10_re * b_S1_C0_RE;
ub_S1_C1_RE = ((u_10_im * b_S1_C0_IM) + ub_S1_C1_RE);
ub_S1_C1_IM = u_10_re * b_S1_C0_IM;
ub_S1_C1_IM = ub_S1_C1_IM - (u_10_im * b_S1_C0_RE);
ub_S1_C1_RE = ((u_11_re * b_S1_C1_RE) + ub_S1_C1_RE);
ub_S1_C1_RE = ((u_11_im * b_S1_C1_IM) + ub_S1_C1_RE);
ub_S1_C1_IM = ((u_11_re * b_S1_C1_IM) + ub_S1_C1_IM);
ub_S1_C1_IM = ub_S1_C1_IM - (u_11_im * b_S1_C1_RE);
ub_S1_C1_RE = ((u_12_re * b_S1_C2_RE) + ub_S1_C1_RE);
ub_S1_C1_RE = ((u_12_im * b_S1_C2_IM) + ub_S1_C1_RE);
ub_S1_C1_IM = ((u_12_re * b_S1_C2_IM) + ub_S1_C1_IM);
ub_S1_C1_IM = ub_S1_C1_IM - (u_12_im * b_S1_C2_RE);
ub_S1_C2_RE = u_20_re * b_S1_C0_RE;
ub_S1_C2_RE = ((u_20_im * b_S1_C0_IM) + ub_S1_C2_RE);
ub_S1_C2_IM = u_20_re * b_S1_C0_IM;
ub_S1_C2_IM = ub_S1_C2_IM - (u_20_im * b_S1_C0_RE);
ub_S1_C2_RE = ((u_21_re * b_S1_C1_RE) + ub_S1_C2_RE);
ub_S1_C2_RE = ((u_21_im * b_S1_C1_IM) + ub_S1_C2_RE);
ub_S1_C2_IM = ((u_21_re * b_S1_C1_IM) + ub_S1_C2_IM);
ub_S1_C2_IM = ub_S1_C2_IM - (u_21_im * b_S1_C1_RE);
ub_S1_C2_RE = ((u_22_re * b_S1_C2_RE) + ub_S1_C2_RE);
ub_S1_C2_RE = ((u_22_im * b_S1_C2_IM) + ub_S1_C2_RE);
ub_S1_C2_IM = ((u_22_re * b_S1_C2_IM) + ub_S1_C2_IM);
ub_S1_C2_IM = ub_S1_C2_IM - (u_22_im * b_S1_C2_RE);
dout_S0_C0_RE = ((beta_vec * ub_S0_C0_RE) + dout_S0_C0_RE);
dout_S0_C0_IM = ((beta_vec * ub_S0_C0_IM) + dout_S0_C0_IM);
dout_S0_C1_RE = ((beta_vec * ub_S0_C1_RE) + dout_S0_C1_RE);
dout_S0_C1_IM = ((beta_vec * ub_S0_C1_IM) + dout_S0_C1_IM);
dout_S0_C2_RE = ((beta_vec * ub_S0_C2_RE) + dout_S0_C2_RE);
dout_S0_C2_IM = ((beta_vec * ub_S0_C2_IM) + dout_S0_C2_IM);
dout_S3_C0_RE = dout_S3_C0_RE - (beta_vec * ub_S0_C0_RE);
dout_S3_C0_IM = dout_S3_C0_IM - (beta_vec * ub_S0_C0_IM);
dout_S3_C1_RE = dout_S3_C1_RE - (beta_vec * ub_S0_C1_RE);
dout_S3_C1_IM = dout_S3_C1_IM - (beta_vec * ub_S0_C1_IM);
dout_S3_C2_RE = dout_S3_C2_RE - (beta_vec * ub_S0_C2_RE);
dout_S3_C2_IM = dout_S3_C2_IM - (beta_vec * ub_S0_C2_IM);
dout_S1_C0_RE = ((beta_vec * ub_S1_C0_RE) + dout_S1_C0_RE);
dout_S1_C0_IM = ((beta_vec * ub_S1_C0_IM) + dout_S1_C0_IM);
dout_S1_C1_RE = ((beta_vec * ub_S1_C1_RE) + dout_S1_C1_RE);
dout_S1_C1_IM = ((beta_vec * ub_S1_C1_IM) + dout_S1_C1_IM);
dout_S1_C2_RE = ((beta_vec * ub_S1_C2_RE) + dout_S1_C2_RE);
dout_S1_C2_IM = ((beta_vec * ub_S1_C2_IM) + dout_S1_C2_IM);
dout_S2_C0_RE = ((beta_vec * ub_S1_C0_RE) + dout_S2_C0_RE);
dout_S2_C0_IM = ((beta_vec * ub_S1_C0_IM) + dout_S2_C0_IM);
dout_S2_C1_RE = ((beta_vec * ub_S1_C1_RE) + dout_S2_C1_RE);
dout_S2_C1_IM = ((beta_vec * ub_S1_C1_IM) + dout_S2_C1_IM);
dout_S2_C2_RE = ((beta_vec * ub_S1_C2_RE) + dout_S2_C2_RE);
dout_S2_C2_IM = ((beta_vec * ub_S1_C2_IM) + dout_S2_C2_IM);
cl_full_00_RE = *((*clBase).block1[0][0][0]);

cl_full_00_IM = *((*clBase).block1[0][0][1]);

cl_full_01_RE = *((*clBase).block1[0][1][0]);

cl_full_01_IM = *((*clBase).block1[0][1][1]);

cl_full_02_RE = *((*clBase).block1[0][2][0]);

cl_full_02_IM = *((*clBase).block1[0][2][1]);

cl_full_03_RE = *((*clBase).block1[0][3][0]);

cl_full_03_IM = *((*clBase).block1[0][3][1]);

cl_full_04_RE = *((*clBase).block1[0][4][0]);

cl_full_04_IM = *((*clBase).block1[0][4][1]);

cl_full_05_RE = *((*clBase).block1[0][5][0]);

cl_full_05_IM = *((*clBase).block1[0][5][1]);

cl_full_10_RE = *((*clBase).block1[1][0][0]);

cl_full_10_IM = *((*clBase).block1[1][0][1]);

cl_full_11_RE = *((*clBase).block1[1][1][0]);

cl_full_11_IM = *((*clBase).block1[1][1][1]);

cl_full_12_RE = *((*clBase).block1[1][2][0]);

cl_full_12_IM = *((*clBase).block1[1][2][1]);

cl_full_13_RE = *((*clBase).block1[1][3][0]);

cl_full_13_IM = *((*clBase).block1[1][3][1]);

cl_full_14_RE = *((*clBase).block1[1][4][0]);

cl_full_14_IM = *((*clBase).block1[1][4][1]);

cl_full_15_RE = *((*clBase).block1[1][5][0]);

cl_full_15_IM = *((*clBase).block1[1][5][1]);

cl_full_20_RE = *((*clBase).block1[2][0][0]);

cl_full_20_IM = *((*clBase).block1[2][0][1]);

cl_full_21_RE = *((*clBase).block1[2][1][0]);

cl_full_21_IM = *((*clBase).block1[2][1][1]);

cl_full_22_RE = *((*clBase).block1[2][2][0]);

cl_full_22_IM = *((*clBase).block1[2][2][1]);

cl_full_23_RE = *((*clBase).block1[2][3][0]);

cl_full_23_IM = *((*clBase).block1[2][3][1]);

cl_full_24_RE = *((*clBase).block1[2][4][0]);

cl_full_24_IM = *((*clBase).block1[2][4][1]);

cl_full_25_RE = *((*clBase).block1[2][5][0]);

cl_full_25_IM = *((*clBase).block1[2][5][1]);

cl_full_30_RE = *((*clBase).block1[3][0][0]);

cl_full_30_IM = *((*clBase).block1[3][0][1]);

cl_full_31_RE = *((*clBase).block1[3][1][0]);

cl_full_31_IM = *((*clBase).block1[3][1][1]);

cl_full_32_RE = *((*clBase).block1[3][2][0]);

cl_full_32_IM = *((*clBase).block1[3][2][1]);

cl_full_33_RE = *((*clBase).block1[3][3][0]);

cl_full_33_IM = *((*clBase).block1[3][3][1]);

cl_full_34_RE = *((*clBase).block1[3][4][0]);

cl_full_34_IM = *((*clBase).block1[3][4][1]);

cl_full_35_RE = *((*clBase).block1[3][5][0]);

cl_full_35_IM = *((*clBase).block1[3][5][1]);

cl_full_40_RE = *((*clBase).block1[4][0][0]);

cl_full_40_IM = *((*clBase).block1[4][0][1]);

cl_full_41_RE = *((*clBase).block1[4][1][0]);

cl_full_41_IM = *((*clBase).block1[4][1][1]);

cl_full_42_RE = *((*clBase).block1[4][2][0]);

cl_full_42_IM = *((*clBase).block1[4][2][1]);

cl_full_43_RE = *((*clBase).block1[4][3][0]);

cl_full_43_IM = *((*clBase).block1[4][3][1]);

cl_full_44_RE = *((*clBase).block1[4][4][0]);

cl_full_44_IM = *((*clBase).block1[4][4][1]);

cl_full_45_RE = *((*clBase).block1[4][5][0]);

cl_full_45_IM = *((*clBase).block1[4][5][1]);

cl_full_50_RE = *((*clBase).block1[5][0][0]);

cl_full_50_IM = *((*clBase).block1[5][0][1]);

cl_full_51_RE = *((*clBase).block1[5][1][0]);

cl_full_51_IM = *((*clBase).block1[5][1][1]);

cl_full_52_RE = *((*clBase).block1[5][2][0]);

cl_full_52_IM = *((*clBase).block1[5][2][1]);

cl_full_53_RE = *((*clBase).block1[5][3][0]);

cl_full_53_IM = *((*clBase).block1[5][3][1]);

cl_full_54_RE = *((*clBase).block1[5][4][0]);

cl_full_54_IM = *((*clBase).block1[5][4][1]);

cl_full_55_RE = *((*clBase).block1[5][5][0]);

cl_full_55_IM = *((*clBase).block1[5][5][1]);

out_S0_C0_RE = ((cl_full_00_RE * dout_S0_C0_RE) + out_S0_C0_RE);
out_S0_C0_RE = out_S0_C0_RE - (cl_full_00_IM * dout_S0_C0_IM);
out_S0_C0_IM = ((cl_full_00_RE * dout_S0_C0_IM) + out_S0_C0_IM);
out_S0_C0_IM = ((cl_full_00_IM * dout_S0_C0_RE) + out_S0_C0_IM);
out_S0_C0_RE = ((cl_full_01_RE * dout_S0_C1_RE) + out_S0_C0_RE);
out_S0_C0_RE = out_S0_C0_RE - (cl_full_01_IM * dout_S0_C1_IM);
out_S0_C0_IM = ((cl_full_01_RE * dout_S0_C1_IM) + out_S0_C0_IM);
out_S0_C0_IM = ((cl_full_01_IM * dout_S0_C1_RE) + out_S0_C0_IM);
out_S0_C0_RE = ((cl_full_02_RE * dout_S0_C2_RE) + out_S0_C0_RE);
out_S0_C0_RE = out_S0_C0_RE - (cl_full_02_IM * dout_S0_C2_IM);
out_S0_C0_IM = ((cl_full_02_RE * dout_S0_C2_IM) + out_S0_C0_IM);
out_S0_C0_IM = ((cl_full_02_IM * dout_S0_C2_RE) + out_S0_C0_IM);
out_S0_C0_RE = ((cl_full_03_RE * dout_S1_C0_RE) + out_S0_C0_RE);
out_S0_C0_RE = out_S0_C0_RE - (cl_full_03_IM * dout_S1_C0_IM);
out_S0_C0_IM = ((cl_full_03_RE * dout_S1_C0_IM) + out_S0_C0_IM);
out_S0_C0_IM = ((cl_full_03_IM * dout_S1_C0_RE) + out_S0_C0_IM);
out_S0_C0_RE = ((cl_full_04_RE * dout_S1_C1_RE) + out_S0_C0_RE);
out_S0_C0_RE = out_S0_C0_RE - (cl_full_04_IM * dout_S1_C1_IM);
out_S0_C0_IM = ((cl_full_04_RE * dout_S1_C1_IM) + out_S0_C0_IM);
out_S0_C0_IM = ((cl_full_04_IM * dout_S1_C1_RE) + out_S0_C0_IM);
out_S0_C0_RE = ((cl_full_05_RE * dout_S1_C2_RE) + out_S0_C0_RE);
out_S0_C0_RE = out_S0_C0_RE - (cl_full_05_IM * dout_S1_C2_IM);
out_S0_C0_IM = ((cl_full_05_RE * dout_S1_C2_IM) + out_S0_C0_IM);
out_S0_C0_IM = ((cl_full_05_IM * dout_S1_C2_RE) + out_S0_C0_IM);
out_S0_C1_RE = ((cl_full_10_RE * dout_S0_C0_RE) + out_S0_C1_RE);
out_S0_C1_RE = out_S0_C1_RE - (cl_full_10_IM * dout_S0_C0_IM);
out_S0_C1_IM = ((cl_full_10_RE * dout_S0_C0_IM) + out_S0_C1_IM);
out_S0_C1_IM = ((cl_full_10_IM * dout_S0_C0_RE) + out_S0_C1_IM);
out_S0_C1_RE = ((cl_full_11_RE * dout_S0_C1_RE) + out_S0_C1_RE);
out_S0_C1_RE = out_S0_C1_RE - (cl_full_11_IM * dout_S0_C1_IM);
out_S0_C1_IM = ((cl_full_11_RE * dout_S0_C1_IM) + out_S0_C1_IM);
out_S0_C1_IM = ((cl_full_11_IM * dout_S0_C1_RE) + out_S0_C1_IM);
out_S0_C1_RE = ((cl_full_12_RE * dout_S0_C2_RE) + out_S0_C1_RE);
out_S0_C1_RE = out_S0_C1_RE - (cl_full_12_IM * dout_S0_C2_IM);
out_S0_C1_IM = ((cl_full_12_RE * dout_S0_C2_IM) + out_S0_C1_IM);
out_S0_C1_IM = ((cl_full_12_IM * dout_S0_C2_RE) + out_S0_C1_IM);
out_S0_C1_RE = ((cl_full_13_RE * dout_S1_C0_RE) + out_S0_C1_RE);
out_S0_C1_RE = out_S0_C1_RE - (cl_full_13_IM * dout_S1_C0_IM);
out_S0_C1_IM = ((cl_full_13_RE * dout_S1_C0_IM) + out_S0_C1_IM);
out_S0_C1_IM = ((cl_full_13_IM * dout_S1_C0_RE) + out_S0_C1_IM);
out_S0_C1_RE = ((cl_full_14_RE * dout_S1_C1_RE) + out_S0_C1_RE);
out_S0_C1_RE = out_S0_C1_RE - (cl_full_14_IM * dout_S1_C1_IM);
out_S0_C1_IM = ((cl_full_14_RE * dout_S1_C1_IM) + out_S0_C1_IM);
out_S0_C1_IM = ((cl_full_14_IM * dout_S1_C1_RE) + out_S0_C1_IM);
out_S0_C1_RE = ((cl_full_15_RE * dout_S1_C2_RE) + out_S0_C1_RE);
out_S0_C1_RE = out_S0_C1_RE - (cl_full_15_IM * dout_S1_C2_IM);
out_S0_C1_IM = ((cl_full_15_RE * dout_S1_C2_IM) + out_S0_C1_IM);
out_S0_C1_IM = ((cl_full_15_IM * dout_S1_C2_RE) + out_S0_C1_IM);
out_S0_C2_RE = ((cl_full_20_RE * dout_S0_C0_RE) + out_S0_C2_RE);
out_S0_C2_RE = out_S0_C2_RE - (cl_full_20_IM * dout_S0_C0_IM);
out_S0_C2_IM = ((cl_full_20_RE * dout_S0_C0_IM) + out_S0_C2_IM);
out_S0_C2_IM = ((cl_full_20_IM * dout_S0_C0_RE) + out_S0_C2_IM);
out_S0_C2_RE = ((cl_full_21_RE * dout_S0_C1_RE) + out_S0_C2_RE);
out_S0_C2_RE = out_S0_C2_RE - (cl_full_21_IM * dout_S0_C1_IM);
out_S0_C2_IM = ((cl_full_21_RE * dout_S0_C1_IM) + out_S0_C2_IM);
out_S0_C2_IM = ((cl_full_21_IM * dout_S0_C1_RE) + out_S0_C2_IM);
out_S0_C2_RE = ((cl_full_22_RE * dout_S0_C2_RE) + out_S0_C2_RE);
out_S0_C2_RE = out_S0_C2_RE - (cl_full_22_IM * dout_S0_C2_IM);
out_S0_C2_IM = ((cl_full_22_RE * dout_S0_C2_IM) + out_S0_C2_IM);
out_S0_C2_IM = ((cl_full_22_IM * dout_S0_C2_RE) + out_S0_C2_IM);
out_S0_C2_RE = ((cl_full_23_RE * dout_S1_C0_RE) + out_S0_C2_RE);
out_S0_C2_RE = out_S0_C2_RE - (cl_full_23_IM * dout_S1_C0_IM);
out_S0_C2_IM = ((cl_full_23_RE * dout_S1_C0_IM) + out_S0_C2_IM);
out_S0_C2_IM = ((cl_full_23_IM * dout_S1_C0_RE) + out_S0_C2_IM);
out_S0_C2_RE = ((cl_full_24_RE * dout_S1_C1_RE) + out_S0_C2_RE);
out_S0_C2_RE = out_S0_C2_RE - (cl_full_24_IM * dout_S1_C1_IM);
out_S0_C2_IM = ((cl_full_24_RE * dout_S1_C1_IM) + out_S0_C2_IM);
out_S0_C2_IM = ((cl_full_24_IM * dout_S1_C1_RE) + out_S0_C2_IM);
out_S0_C2_RE = ((cl_full_25_RE * dout_S1_C2_RE) + out_S0_C2_RE);
out_S0_C2_RE = out_S0_C2_RE - (cl_full_25_IM * dout_S1_C2_IM);
out_S0_C2_IM = ((cl_full_25_RE * dout_S1_C2_IM) + out_S0_C2_IM);
out_S0_C2_IM = ((cl_full_25_IM * dout_S1_C2_RE) + out_S0_C2_IM);
out_S1_C0_RE = ((cl_full_30_RE * dout_S0_C0_RE) + out_S1_C0_RE);
out_S1_C0_RE = out_S1_C0_RE - (cl_full_30_IM * dout_S0_C0_IM);
out_S1_C0_IM = ((cl_full_30_RE * dout_S0_C0_IM) + out_S1_C0_IM);
out_S1_C0_IM = ((cl_full_30_IM * dout_S0_C0_RE) + out_S1_C0_IM);
out_S1_C0_RE = ((cl_full_31_RE * dout_S0_C1_RE) + out_S1_C0_RE);
out_S1_C0_RE = out_S1_C0_RE - (cl_full_31_IM * dout_S0_C1_IM);
out_S1_C0_IM = ((cl_full_31_RE * dout_S0_C1_IM) + out_S1_C0_IM);
out_S1_C0_IM = ((cl_full_31_IM * dout_S0_C1_RE) + out_S1_C0_IM);
out_S1_C0_RE = ((cl_full_32_RE * dout_S0_C2_RE) + out_S1_C0_RE);
out_S1_C0_RE = out_S1_C0_RE - (cl_full_32_IM * dout_S0_C2_IM);
out_S1_C0_IM = ((cl_full_32_RE * dout_S0_C2_IM) + out_S1_C0_IM);
out_S1_C0_IM = ((cl_full_32_IM * dout_S0_C2_RE) + out_S1_C0_IM);
out_S1_C0_RE = ((cl_full_33_RE * dout_S1_C0_RE) + out_S1_C0_RE);
out_S1_C0_RE = out_S1_C0_RE - (cl_full_33_IM * dout_S1_C0_IM);
out_S1_C0_IM = ((cl_full_33_RE * dout_S1_C0_IM) + out_S1_C0_IM);
out_S1_C0_IM = ((cl_full_33_IM * dout_S1_C0_RE) + out_S1_C0_IM);
out_S1_C0_RE = ((cl_full_34_RE * dout_S1_C1_RE) + out_S1_C0_RE);
out_S1_C0_RE = out_S1_C0_RE - (cl_full_34_IM * dout_S1_C1_IM);
out_S1_C0_IM = ((cl_full_34_RE * dout_S1_C1_IM) + out_S1_C0_IM);
out_S1_C0_IM = ((cl_full_34_IM * dout_S1_C1_RE) + out_S1_C0_IM);
out_S1_C0_RE = ((cl_full_35_RE * dout_S1_C2_RE) + out_S1_C0_RE);
out_S1_C0_RE = out_S1_C0_RE - (cl_full_35_IM * dout_S1_C2_IM);
out_S1_C0_IM = ((cl_full_35_RE * dout_S1_C2_IM) + out_S1_C0_IM);
out_S1_C0_IM = ((cl_full_35_IM * dout_S1_C2_RE) + out_S1_C0_IM);
out_S1_C1_RE = ((cl_full_40_RE * dout_S0_C0_RE) + out_S1_C1_RE);
out_S1_C1_RE = out_S1_C1_RE - (cl_full_40_IM * dout_S0_C0_IM);
out_S1_C1_IM = ((cl_full_40_RE * dout_S0_C0_IM) + out_S1_C1_IM);
out_S1_C1_IM = ((cl_full_40_IM * dout_S0_C0_RE) + out_S1_C1_IM);
out_S1_C1_RE = ((cl_full_41_RE * dout_S0_C1_RE) + out_S1_C1_RE);
out_S1_C1_RE = out_S1_C1_RE - (cl_full_41_IM * dout_S0_C1_IM);
out_S1_C1_IM = ((cl_full_41_RE * dout_S0_C1_IM) + out_S1_C1_IM);
out_S1_C1_IM = ((cl_full_41_IM * dout_S0_C1_RE) + out_S1_C1_IM);
out_S1_C1_RE = ((cl_full_42_RE * dout_S0_C2_RE) + out_S1_C1_RE);
out_S1_C1_RE = out_S1_C1_RE - (cl_full_42_IM * dout_S0_C2_IM);
out_S1_C1_IM = ((cl_full_42_RE * dout_S0_C2_IM) + out_S1_C1_IM);
out_S1_C1_IM = ((cl_full_42_IM * dout_S0_C2_RE) + out_S1_C1_IM);
out_S1_C1_RE = ((cl_full_43_RE * dout_S1_C0_RE) + out_S1_C1_RE);
out_S1_C1_RE = out_S1_C1_RE - (cl_full_43_IM * dout_S1_C0_IM);
out_S1_C1_IM = ((cl_full_43_RE * dout_S1_C0_IM) + out_S1_C1_IM);
out_S1_C1_IM = ((cl_full_43_IM * dout_S1_C0_RE) + out_S1_C1_IM);
out_S1_C1_RE = ((cl_full_44_RE * dout_S1_C1_RE) + out_S1_C1_RE);
out_S1_C1_RE = out_S1_C1_RE - (cl_full_44_IM * dout_S1_C1_IM);
out_S1_C1_IM = ((cl_full_44_RE * dout_S1_C1_IM) + out_S1_C1_IM);
out_S1_C1_IM = ((cl_full_44_IM * dout_S1_C1_RE) + out_S1_C1_IM);
out_S1_C1_RE = ((cl_full_45_RE * dout_S1_C2_RE) + out_S1_C1_RE);
out_S1_C1_RE = out_S1_C1_RE - (cl_full_45_IM * dout_S1_C2_IM);
out_S1_C1_IM = ((cl_full_45_RE * dout_S1_C2_IM) + out_S1_C1_IM);
out_S1_C1_IM = ((cl_full_45_IM * dout_S1_C2_RE) + out_S1_C1_IM);
out_S1_C2_RE = ((cl_full_50_RE * dout_S0_C0_RE) + out_S1_C2_RE);
out_S1_C2_RE = out_S1_C2_RE - (cl_full_50_IM * dout_S0_C0_IM);
out_S1_C2_IM = ((cl_full_50_RE * dout_S0_C0_IM) + out_S1_C2_IM);
out_S1_C2_IM = ((cl_full_50_IM * dout_S0_C0_RE) + out_S1_C2_IM);
out_S1_C2_RE = ((cl_full_51_RE * dout_S0_C1_RE) + out_S1_C2_RE);
out_S1_C2_RE = out_S1_C2_RE - (cl_full_51_IM * dout_S0_C1_IM);
out_S1_C2_IM = ((cl_full_51_RE * dout_S0_C1_IM) + out_S1_C2_IM);
out_S1_C2_IM = ((cl_full_51_IM * dout_S0_C1_RE) + out_S1_C2_IM);
out_S1_C2_RE = ((cl_full_52_RE * dout_S0_C2_RE) + out_S1_C2_RE);
out_S1_C2_RE = out_S1_C2_RE - (cl_full_52_IM * dout_S0_C2_IM);
out_S1_C2_IM = ((cl_full_52_RE * dout_S0_C2_IM) + out_S1_C2_IM);
out_S1_C2_IM = ((cl_full_52_IM * dout_S0_C2_RE) + out_S1_C2_IM);
out_S1_C2_RE = ((cl_full_53_RE * dout_S1_C0_RE) + out_S1_C2_RE);
out_S1_C2_RE = out_S1_C2_RE - (cl_full_53_IM * dout_S1_C0_IM);
out_S1_C2_IM = ((cl_full_53_RE * dout_S1_C0_IM) + out_S1_C2_IM);
out_S1_C2_IM = ((cl_full_53_IM * dout_S1_C0_RE) + out_S1_C2_IM);
out_S1_C2_RE = ((cl_full_54_RE * dout_S1_C1_RE) + out_S1_C2_RE);
out_S1_C2_RE = out_S1_C2_RE - (cl_full_54_IM * dout_S1_C1_IM);
out_S1_C2_IM = ((cl_full_54_RE * dout_S1_C1_IM) + out_S1_C2_IM);
out_S1_C2_IM = ((cl_full_54_IM * dout_S1_C1_RE) + out_S1_C2_IM);
out_S1_C2_RE = ((cl_full_55_RE * dout_S1_C2_RE) + out_S1_C2_RE);
out_S1_C2_RE = out_S1_C2_RE - (cl_full_55_IM * dout_S1_C2_IM);
out_S1_C2_IM = ((cl_full_55_RE * dout_S1_C2_IM) + out_S1_C2_IM);
out_S1_C2_IM = ((cl_full_55_IM * dout_S1_C2_RE) + out_S1_C2_IM);
cl_full_00_RE = *((*clBase).block2[0][0][0]);

cl_full_00_IM = *((*clBase).block2[0][0][1]);

cl_full_01_RE = *((*clBase).block2[0][1][0]);

cl_full_01_IM = *((*clBase).block2[0][1][1]);

cl_full_02_RE = *((*clBase).block2[0][2][0]);

cl_full_02_IM = *((*clBase).block2[0][2][1]);

cl_full_03_RE = *((*clBase).block2[0][3][0]);

cl_full_03_IM = *((*clBase).block2[0][3][1]);

cl_full_04_RE = *((*clBase).block2[0][4][0]);

cl_full_04_IM = *((*clBase).block2[0][4][1]);

cl_full_05_RE = *((*clBase).block2[0][5][0]);

cl_full_05_IM = *((*clBase).block2[0][5][1]);

cl_full_10_RE = *((*clBase).block2[1][0][0]);

cl_full_10_IM = *((*clBase).block2[1][0][1]);

cl_full_11_RE = *((*clBase).block2[1][1][0]);

cl_full_11_IM = *((*clBase).block2[1][1][1]);

cl_full_12_RE = *((*clBase).block2[1][2][0]);

cl_full_12_IM = *((*clBase).block2[1][2][1]);

cl_full_13_RE = *((*clBase).block2[1][3][0]);

cl_full_13_IM = *((*clBase).block2[1][3][1]);

cl_full_14_RE = *((*clBase).block2[1][4][0]);

cl_full_14_IM = *((*clBase).block2[1][4][1]);

cl_full_15_RE = *((*clBase).block2[1][5][0]);

cl_full_15_IM = *((*clBase).block2[1][5][1]);

cl_full_20_RE = *((*clBase).block2[2][0][0]);

cl_full_20_IM = *((*clBase).block2[2][0][1]);

cl_full_21_RE = *((*clBase).block2[2][1][0]);

cl_full_21_IM = *((*clBase).block2[2][1][1]);

cl_full_22_RE = *((*clBase).block2[2][2][0]);

cl_full_22_IM = *((*clBase).block2[2][2][1]);

cl_full_23_RE = *((*clBase).block2[2][3][0]);

cl_full_23_IM = *((*clBase).block2[2][3][1]);

cl_full_24_RE = *((*clBase).block2[2][4][0]);

cl_full_24_IM = *((*clBase).block2[2][4][1]);

cl_full_25_RE = *((*clBase).block2[2][5][0]);

cl_full_25_IM = *((*clBase).block2[2][5][1]);

cl_full_30_RE = *((*clBase).block2[3][0][0]);

cl_full_30_IM = *((*clBase).block2[3][0][1]);

cl_full_31_RE = *((*clBase).block2[3][1][0]);

cl_full_31_IM = *((*clBase).block2[3][1][1]);

cl_full_32_RE = *((*clBase).block2[3][2][0]);

cl_full_32_IM = *((*clBase).block2[3][2][1]);

cl_full_33_RE = *((*clBase).block2[3][3][0]);

cl_full_33_IM = *((*clBase).block2[3][3][1]);

cl_full_34_RE = *((*clBase).block2[3][4][0]);

cl_full_34_IM = *((*clBase).block2[3][4][1]);

cl_full_35_RE = *((*clBase).block2[3][5][0]);

cl_full_35_IM = *((*clBase).block2[3][5][1]);

cl_full_40_RE = *((*clBase).block2[4][0][0]);

cl_full_40_IM = *((*clBase).block2[4][0][1]);

cl_full_41_RE = *((*clBase).block2[4][1][0]);

cl_full_41_IM = *((*clBase).block2[4][1][1]);

cl_full_42_RE = *((*clBase).block2[4][2][0]);

cl_full_42_IM = *((*clBase).block2[4][2][1]);

cl_full_43_RE = *((*clBase).block2[4][3][0]);

cl_full_43_IM = *((*clBase).block2[4][3][1]);

cl_full_44_RE = *((*clBase).block2[4][4][0]);

cl_full_44_IM = *((*clBase).block2[4][4][1]);

cl_full_45_RE = *((*clBase).block2[4][5][0]);

cl_full_45_IM = *((*clBase).block2[4][5][1]);

cl_full_50_RE = *((*clBase).block2[5][0][0]);

cl_full_50_IM = *((*clBase).block2[5][0][1]);

cl_full_51_RE = *((*clBase).block2[5][1][0]);

cl_full_51_IM = *((*clBase).block2[5][1][1]);

cl_full_52_RE = *((*clBase).block2[5][2][0]);

cl_full_52_IM = *((*clBase).block2[5][2][1]);

cl_full_53_RE = *((*clBase).block2[5][3][0]);

cl_full_53_IM = *((*clBase).block2[5][3][1]);

cl_full_54_RE = *((*clBase).block2[5][4][0]);

cl_full_54_IM = *((*clBase).block2[5][4][1]);

cl_full_55_RE = *((*clBase).block2[5][5][0]);

cl_full_55_IM = *((*clBase).block2[5][5][1]);

out_S2_C0_RE = ((cl_full_00_RE * dout_S2_C0_RE) + out_S2_C0_RE);
out_S2_C0_RE = out_S2_C0_RE - (cl_full_00_IM * dout_S2_C0_IM);
out_S2_C0_IM = ((cl_full_00_RE * dout_S2_C0_IM) + out_S2_C0_IM);
out_S2_C0_IM = ((cl_full_00_IM * dout_S2_C0_RE) + out_S2_C0_IM);
out_S2_C0_RE = ((cl_full_01_RE * dout_S2_C1_RE) + out_S2_C0_RE);
out_S2_C0_RE = out_S2_C0_RE - (cl_full_01_IM * dout_S2_C1_IM);
out_S2_C0_IM = ((cl_full_01_RE * dout_S2_C1_IM) + out_S2_C0_IM);
out_S2_C0_IM = ((cl_full_01_IM * dout_S2_C1_RE) + out_S2_C0_IM);
out_S2_C0_RE = ((cl_full_02_RE * dout_S2_C2_RE) + out_S2_C0_RE);
out_S2_C0_RE = out_S2_C0_RE - (cl_full_02_IM * dout_S2_C2_IM);
out_S2_C0_IM = ((cl_full_02_RE * dout_S2_C2_IM) + out_S2_C0_IM);
out_S2_C0_IM = ((cl_full_02_IM * dout_S2_C2_RE) + out_S2_C0_IM);
out_S2_C0_RE = ((cl_full_03_RE * dout_S3_C0_RE) + out_S2_C0_RE);
out_S2_C0_RE = out_S2_C0_RE - (cl_full_03_IM * dout_S3_C0_IM);
out_S2_C0_IM = ((cl_full_03_RE * dout_S3_C0_IM) + out_S2_C0_IM);
out_S2_C0_IM = ((cl_full_03_IM * dout_S3_C0_RE) + out_S2_C0_IM);
out_S2_C0_RE = ((cl_full_04_RE * dout_S3_C1_RE) + out_S2_C0_RE);
out_S2_C0_RE = out_S2_C0_RE - (cl_full_04_IM * dout_S3_C1_IM);
out_S2_C0_IM = ((cl_full_04_RE * dout_S3_C1_IM) + out_S2_C0_IM);
out_S2_C0_IM = ((cl_full_04_IM * dout_S3_C1_RE) + out_S2_C0_IM);
out_S2_C0_RE = ((cl_full_05_RE * dout_S3_C2_RE) + out_S2_C0_RE);
out_S2_C0_RE = out_S2_C0_RE - (cl_full_05_IM * dout_S3_C2_IM);
out_S2_C0_IM = ((cl_full_05_RE * dout_S3_C2_IM) + out_S2_C0_IM);
out_S2_C0_IM = ((cl_full_05_IM * dout_S3_C2_RE) + out_S2_C0_IM);
out_S2_C1_RE = ((cl_full_10_RE * dout_S2_C0_RE) + out_S2_C1_RE);
out_S2_C1_RE = out_S2_C1_RE - (cl_full_10_IM * dout_S2_C0_IM);
out_S2_C1_IM = ((cl_full_10_RE * dout_S2_C0_IM) + out_S2_C1_IM);
out_S2_C1_IM = ((cl_full_10_IM * dout_S2_C0_RE) + out_S2_C1_IM);
out_S2_C1_RE = ((cl_full_11_RE * dout_S2_C1_RE) + out_S2_C1_RE);
out_S2_C1_RE = out_S2_C1_RE - (cl_full_11_IM * dout_S2_C1_IM);
out_S2_C1_IM = ((cl_full_11_RE * dout_S2_C1_IM) + out_S2_C1_IM);
out_S2_C1_IM = ((cl_full_11_IM * dout_S2_C1_RE) + out_S2_C1_IM);
out_S2_C1_RE = ((cl_full_12_RE * dout_S2_C2_RE) + out_S2_C1_RE);
out_S2_C1_RE = out_S2_C1_RE - (cl_full_12_IM * dout_S2_C2_IM);
out_S2_C1_IM = ((cl_full_12_RE * dout_S2_C2_IM) + out_S2_C1_IM);
out_S2_C1_IM = ((cl_full_12_IM * dout_S2_C2_RE) + out_S2_C1_IM);
out_S2_C1_RE = ((cl_full_13_RE * dout_S3_C0_RE) + out_S2_C1_RE);
out_S2_C1_RE = out_S2_C1_RE - (cl_full_13_IM * dout_S3_C0_IM);
out_S2_C1_IM = ((cl_full_13_RE * dout_S3_C0_IM) + out_S2_C1_IM);
out_S2_C1_IM = ((cl_full_13_IM * dout_S3_C0_RE) + out_S2_C1_IM);
out_S2_C1_RE = ((cl_full_14_RE * dout_S3_C1_RE) + out_S2_C1_RE);
out_S2_C1_RE = out_S2_C1_RE - (cl_full_14_IM * dout_S3_C1_IM);
out_S2_C1_IM = ((cl_full_14_RE * dout_S3_C1_IM) + out_S2_C1_IM);
out_S2_C1_IM = ((cl_full_14_IM * dout_S3_C1_RE) + out_S2_C1_IM);
out_S2_C1_RE = ((cl_full_15_RE * dout_S3_C2_RE) + out_S2_C1_RE);
out_S2_C1_RE = out_S2_C1_RE - (cl_full_15_IM * dout_S3_C2_IM);
out_S2_C1_IM = ((cl_full_15_RE * dout_S3_C2_IM) + out_S2_C1_IM);
out_S2_C1_IM = ((cl_full_15_IM * dout_S3_C2_RE) + out_S2_C1_IM);
out_S2_C2_RE = ((cl_full_20_RE * dout_S2_C0_RE) + out_S2_C2_RE);
out_S2_C2_RE = out_S2_C2_RE - (cl_full_20_IM * dout_S2_C0_IM);
out_S2_C2_IM = ((cl_full_20_RE * dout_S2_C0_IM) + out_S2_C2_IM);
out_S2_C2_IM = ((cl_full_20_IM * dout_S2_C0_RE) + out_S2_C2_IM);
out_S2_C2_RE = ((cl_full_21_RE * dout_S2_C1_RE) + out_S2_C2_RE);
out_S2_C2_RE = out_S2_C2_RE - (cl_full_21_IM * dout_S2_C1_IM);
out_S2_C2_IM = ((cl_full_21_RE * dout_S2_C1_IM) + out_S2_C2_IM);
out_S2_C2_IM = ((cl_full_21_IM * dout_S2_C1_RE) + out_S2_C2_IM);
out_S2_C2_RE = ((cl_full_22_RE * dout_S2_C2_RE) + out_S2_C2_RE);
out_S2_C2_RE = out_S2_C2_RE - (cl_full_22_IM * dout_S2_C2_IM);
out_S2_C2_IM = ((cl_full_22_RE * dout_S2_C2_IM) + out_S2_C2_IM);
out_S2_C2_IM = ((cl_full_22_IM * dout_S2_C2_RE) + out_S2_C2_IM);
out_S2_C2_RE = ((cl_full_23_RE * dout_S3_C0_RE) + out_S2_C2_RE);
out_S2_C2_RE = out_S2_C2_RE - (cl_full_23_IM * dout_S3_C0_IM);
out_S2_C2_IM = ((cl_full_23_RE * dout_S3_C0_IM) + out_S2_C2_IM);
out_S2_C2_IM = ((cl_full_23_IM * dout_S3_C0_RE) + out_S2_C2_IM);
out_S2_C2_RE = ((cl_full_24_RE * dout_S3_C1_RE) + out_S2_C2_RE);
out_S2_C2_RE = out_S2_C2_RE - (cl_full_24_IM * dout_S3_C1_IM);
out_S2_C2_IM = ((cl_full_24_RE * dout_S3_C1_IM) + out_S2_C2_IM);
out_S2_C2_IM = ((cl_full_24_IM * dout_S3_C1_RE) + out_S2_C2_IM);
out_S2_C2_RE = ((cl_full_25_RE * dout_S3_C2_RE) + out_S2_C2_RE);
out_S2_C2_RE = out_S2_C2_RE - (cl_full_25_IM * dout_S3_C2_IM);
out_S2_C2_IM = ((cl_full_25_RE * dout_S3_C2_IM) + out_S2_C2_IM);
out_S2_C2_IM = ((cl_full_25_IM * dout_S3_C2_RE) + out_S2_C2_IM);
out_S3_C0_RE = ((cl_full_30_RE * dout_S2_C0_RE) + out_S3_C0_RE);
out_S3_C0_RE = out_S3_C0_RE - (cl_full_30_IM * dout_S2_C0_IM);
out_S3_C0_IM = ((cl_full_30_RE * dout_S2_C0_IM) + out_S3_C0_IM);
out_S3_C0_IM = ((cl_full_30_IM * dout_S2_C0_RE) + out_S3_C0_IM);
out_S3_C0_RE = ((cl_full_31_RE * dout_S2_C1_RE) + out_S3_C0_RE);
out_S3_C0_RE = out_S3_C0_RE - (cl_full_31_IM * dout_S2_C1_IM);
out_S3_C0_IM = ((cl_full_31_RE * dout_S2_C1_IM) + out_S3_C0_IM);
out_S3_C0_IM = ((cl_full_31_IM * dout_S2_C1_RE) + out_S3_C0_IM);
out_S3_C0_RE = ((cl_full_32_RE * dout_S2_C2_RE) + out_S3_C0_RE);
out_S3_C0_RE = out_S3_C0_RE - (cl_full_32_IM * dout_S2_C2_IM);
out_S3_C0_IM = ((cl_full_32_RE * dout_S2_C2_IM) + out_S3_C0_IM);
out_S3_C0_IM = ((cl_full_32_IM * dout_S2_C2_RE) + out_S3_C0_IM);
out_S3_C0_RE = ((cl_full_33_RE * dout_S3_C0_RE) + out_S3_C0_RE);
out_S3_C0_RE = out_S3_C0_RE - (cl_full_33_IM * dout_S3_C0_IM);
out_S3_C0_IM = ((cl_full_33_RE * dout_S3_C0_IM) + out_S3_C0_IM);
out_S3_C0_IM = ((cl_full_33_IM * dout_S3_C0_RE) + out_S3_C0_IM);
out_S3_C0_RE = ((cl_full_34_RE * dout_S3_C1_RE) + out_S3_C0_RE);
out_S3_C0_RE = out_S3_C0_RE - (cl_full_34_IM * dout_S3_C1_IM);
out_S3_C0_IM = ((cl_full_34_RE * dout_S3_C1_IM) + out_S3_C0_IM);
out_S3_C0_IM = ((cl_full_34_IM * dout_S3_C1_RE) + out_S3_C0_IM);
out_S3_C0_RE = ((cl_full_35_RE * dout_S3_C2_RE) + out_S3_C0_RE);
out_S3_C0_RE = out_S3_C0_RE - (cl_full_35_IM * dout_S3_C2_IM);
out_S3_C0_IM = ((cl_full_35_RE * dout_S3_C2_IM) + out_S3_C0_IM);
out_S3_C0_IM = ((cl_full_35_IM * dout_S3_C2_RE) + out_S3_C0_IM);
out_S3_C1_RE = ((cl_full_40_RE * dout_S2_C0_RE) + out_S3_C1_RE);
out_S3_C1_RE = out_S3_C1_RE - (cl_full_40_IM * dout_S2_C0_IM);
out_S3_C1_IM = ((cl_full_40_RE * dout_S2_C0_IM) + out_S3_C1_IM);
out_S3_C1_IM = ((cl_full_40_IM * dout_S2_C0_RE) + out_S3_C1_IM);
out_S3_C1_RE = ((cl_full_41_RE * dout_S2_C1_RE) + out_S3_C1_RE);
out_S3_C1_RE = out_S3_C1_RE - (cl_full_41_IM * dout_S2_C1_IM);
out_S3_C1_IM = ((cl_full_41_RE * dout_S2_C1_IM) + out_S3_C1_IM);
out_S3_C1_IM = ((cl_full_41_IM * dout_S2_C1_RE) + out_S3_C1_IM);
out_S3_C1_RE = ((cl_full_42_RE * dout_S2_C2_RE) + out_S3_C1_RE);
out_S3_C1_RE = out_S3_C1_RE - (cl_full_42_IM * dout_S2_C2_IM);
out_S3_C1_IM = ((cl_full_42_RE * dout_S2_C2_IM) + out_S3_C1_IM);
out_S3_C1_IM = ((cl_full_42_IM * dout_S2_C2_RE) + out_S3_C1_IM);
out_S3_C1_RE = ((cl_full_43_RE * dout_S3_C0_RE) + out_S3_C1_RE);
out_S3_C1_RE = out_S3_C1_RE - (cl_full_43_IM * dout_S3_C0_IM);
out_S3_C1_IM = ((cl_full_43_RE * dout_S3_C0_IM) + out_S3_C1_IM);
out_S3_C1_IM = ((cl_full_43_IM * dout_S3_C0_RE) + out_S3_C1_IM);
out_S3_C1_RE = ((cl_full_44_RE * dout_S3_C1_RE) + out_S3_C1_RE);
out_S3_C1_RE = out_S3_C1_RE - (cl_full_44_IM * dout_S3_C1_IM);
out_S3_C1_IM = ((cl_full_44_RE * dout_S3_C1_IM) + out_S3_C1_IM);
out_S3_C1_IM = ((cl_full_44_IM * dout_S3_C1_RE) + out_S3_C1_IM);
out_S3_C1_RE = ((cl_full_45_RE * dout_S3_C2_RE) + out_S3_C1_RE);
out_S3_C1_RE = out_S3_C1_RE - (cl_full_45_IM * dout_S3_C2_IM);
out_S3_C1_IM = ((cl_full_45_RE * dout_S3_C2_IM) + out_S3_C1_IM);
out_S3_C1_IM = ((cl_full_45_IM * dout_S3_C2_RE) + out_S3_C1_IM);
out_S3_C2_RE = ((cl_full_50_RE * dout_S2_C0_RE) + out_S3_C2_RE);
out_S3_C2_RE = out_S3_C2_RE - (cl_full_50_IM * dout_S2_C0_IM);
out_S3_C2_IM = ((cl_full_50_RE * dout_S2_C0_IM) + out_S3_C2_IM);
out_S3_C2_IM = ((cl_full_50_IM * dout_S2_C0_RE) + out_S3_C2_IM);
out_S3_C2_RE = ((cl_full_51_RE * dout_S2_C1_RE) + out_S3_C2_RE);
out_S3_C2_RE = out_S3_C2_RE - (cl_full_51_IM * dout_S2_C1_IM);
out_S3_C2_IM = ((cl_full_51_RE * dout_S2_C1_IM) + out_S3_C2_IM);
out_S3_C2_IM = ((cl_full_51_IM * dout_S2_C1_RE) + out_S3_C2_IM);
out_S3_C2_RE = ((cl_full_52_RE * dout_S2_C2_RE) + out_S3_C2_RE);
out_S3_C2_RE = out_S3_C2_RE - (cl_full_52_IM * dout_S2_C2_IM);
out_S3_C2_IM = ((cl_full_52_RE * dout_S2_C2_IM) + out_S3_C2_IM);
out_S3_C2_IM = ((cl_full_52_IM * dout_S2_C2_RE) + out_S3_C2_IM);
out_S3_C2_RE = ((cl_full_53_RE * dout_S3_C0_RE) + out_S3_C2_RE);
out_S3_C2_RE = out_S3_C2_RE - (cl_full_53_IM * dout_S3_C0_IM);
out_S3_C2_IM = ((cl_full_53_RE * dout_S3_C0_IM) + out_S3_C2_IM);
out_S3_C2_IM = ((cl_full_53_IM * dout_S3_C0_RE) + out_S3_C2_IM);
out_S3_C2_RE = ((cl_full_54_RE * dout_S3_C1_RE) + out_S3_C2_RE);
out_S3_C2_RE = out_S3_C2_RE - (cl_full_54_IM * dout_S3_C1_IM);
out_S3_C2_IM = ((cl_full_54_RE * dout_S3_C1_IM) + out_S3_C2_IM);
out_S3_C2_IM = ((cl_full_54_IM * dout_S3_C1_RE) + out_S3_C2_IM);
out_S3_C2_RE = ((cl_full_55_RE * dout_S3_C2_RE) + out_S3_C2_RE);
out_S3_C2_RE = out_S3_C2_RE - (cl_full_55_IM * dout_S3_C2_IM);
out_S3_C2_IM = ((cl_full_55_RE * dout_S3_C2_IM) + out_S3_C2_IM);
out_S3_C2_IM = ((cl_full_55_IM * dout_S3_C2_RE) + out_S3_C2_IM);
*(((*oBase)[0][0][0] + offs[0])) = out_S0_C0_RE;

*(((*oBase)[0][0][1] + offs[0])) = out_S0_C0_IM;

*(((*oBase)[1][0][0] + offs[0])) = out_S0_C1_RE;

*(((*oBase)[1][0][1] + offs[0])) = out_S0_C1_IM;

*(((*oBase)[2][0][0] + offs[0])) = out_S0_C2_RE;

*(((*oBase)[2][0][1] + offs[0])) = out_S0_C2_IM;

*(((*oBase)[0][1][0] + offs[0])) = out_S1_C0_RE;

*(((*oBase)[0][1][1] + offs[0])) = out_S1_C0_IM;

*(((*oBase)[1][1][0] + offs[0])) = out_S1_C1_RE;

*(((*oBase)[1][1][1] + offs[0])) = out_S1_C1_IM;

*(((*oBase)[2][1][0] + offs[0])) = out_S1_C2_RE;

*(((*oBase)[2][1][1] + offs[0])) = out_S1_C2_IM;

*(((*oBase)[0][2][0] + offs[0])) = out_S2_C0_RE;

*(((*oBase)[0][2][1] + offs[0])) = out_S2_C0_IM;

*(((*oBase)[1][2][0] + offs[0])) = out_S2_C1_RE;

*(((*oBase)[1][2][1] + offs[0])) = out_S2_C1_IM;

*(((*oBase)[2][2][0] + offs[0])) = out_S2_C2_RE;

*(((*oBase)[2][2][1] + offs[0])) = out_S2_C2_IM;

*(((*oBase)[0][3][0] + offs[0])) = out_S3_C0_RE;

*(((*oBase)[0][3][1] + offs[0])) = out_S3_C0_IM;

*(((*oBase)[1][3][0] + offs[0])) = out_S3_C1_RE;

*(((*oBase)[1][3][1] + offs[0])) = out_S3_C1_IM;

*(((*oBase)[2][3][0] + offs[0])) = out_S3_C2_RE;

*(((*oBase)[2][3][1] + offs[0])) = out_S3_C2_IM;


double b_S0_C0_RE = 0.0;
double b_S0_C0_IM = 0.0;
double b_S0_C1_RE = 0.0;
double b_S0_C1_IM = 0.0;
double b_S0_C2_RE = 0.0;
double b_S0_C2_IM = 0.0;
double b_S1_C0_RE = 0.0;
double b_S1_C0_IM = 0.0;
double b_S1_C1_RE = 0.0;
double b_S1_C1_IM = 0.0;
double b_S1_C2_RE = 0.0;
double b_S1_C2_IM = 0.0;
double ub_S0_C0_RE = 0.0;
double ub_S0_C0_IM = 0.0;
double ub_S0_C1_RE = 0.0;
double ub_S0_C1_IM = 0.0;
double ub_S0_C2_RE = 0.0;
double ub_S0_C2_IM = 0.0;
double ub_S1_C0_RE = 0.0;
double ub_S1_C0_IM = 0.0;
double ub_S1_C1_RE = 0.0;
double ub_S1_C1_IM = 0.0;
double ub_S1_C2_RE = 0.0;
double ub_S1_C2_IM = 0.0;
double u_00_re = 0.0;
double u_00_im = 0.0;
double u_01_re = 0.0;
double u_01_im = 0.0;
double u_02_re = 0.0;
double u_02_im = 0.0;
double u_10_re = 0.0;
double u_10_im = 0.0;
double u_11_re = 0.0;
double u_11_im = 0.0;
double u_12_re = 0.0;
double u_12_im = 0.0;
double u_20_re = 0.0;
double u_20_im = 0.0;
double u_21_re = 0.0;
double u_21_im = 0.0;
double u_22_re = 0.0;
double u_22_im = 0.0;
double psi_S0_RE = 0.0;
double psi_S0_IM = 0.0;
double psi_S1_RE = 0.0;
double psi_S1_IM = 0.0;
double tmp_1_re = 0.0;
double tmp_1_im = 0.0;
double tmp_2_re = 0.0;
double tmp_2_im = 0.0;
double tmp_3_re = 0.0;
double tmp_3_im = 0.0;
double tmp_4_re = 0.0;
double tmp_4_im = 0.0;
double zero = 0.0;
zero = 0.0;
double out_S0_C0_RE = 0.0;
double out_S0_C0_IM = 0.0;
double out_S0_C1_RE = 0.0;
double out_S0_C1_IM = 0.0;
double out_S0_C2_RE = 0.0;
double out_S0_C2_IM = 0.0;
double out_S1_C0_RE = 0.0;
double out_S1_C0_IM = 0.0;
double out_S1_C1_RE = 0.0;
double out_S1_C1_IM = 0.0;
double out_S1_C2_RE = 0.0;
double out_S1_C2_IM = 0.0;
double out_S2_C0_RE = 0.0;
double out_S2_C0_IM = 0.0;
double out_S2_C1_RE = 0.0;
double out_S2_C1_IM = 0.0;
double out_S2_C2_RE = 0.0;
double out_S2_C2_IM = 0.0;
double out_S3_C0_RE = 0.0;
double out_S3_C0_IM = 0.0;
double out_S3_C1_RE = 0.0;
double out_S3_C1_IM = 0.0;
double out_S3_C2_RE = 0.0;
double out_S3_C2_IM = 0.0;
double chi_S0_C0_RE = 0.0;
double chi_S0_C0_IM = 0.0;
double chi_S0_C1_RE = 0.0;
double chi_S0_C1_IM = 0.0;
double chi_S0_C2_RE = 0.0;
double chi_S0_C2_IM = 0.0;
double chi_S1_C0_RE = 0.0;
double chi_S1_C0_IM = 0.0;
double chi_S1_C1_RE = 0.0;
double chi_S1_C1_IM = 0.0;
double chi_S1_C2_RE = 0.0;
double chi_S1_C2_IM = 0.0;
double chi_S2_C0_RE = 0.0;
double chi_S2_C0_IM = 0.0;
double chi_S2_C1_RE = 0.0;
double chi_S2_C1_IM = 0.0;
double chi_S2_C2_RE = 0.0;
double chi_S2_C2_IM = 0.0;
double chi_S3_C0_RE = 0.0;
double chi_S3_C0_IM = 0.0;
double chi_S3_C1_RE = 0.0;
double chi_S3_C1_IM = 0.0;
double chi_S3_C2_RE = 0.0;
double chi_S3_C2_IM = 0.0;
double alpha_vec = 0.0;
alpha_vec = (*(&alpha));


tmp_1_re = *(((*chiBase)[0][0][0] + offs[0]));


tmp_1_im = *(((*chiBase)[0][0][1] + offs[0]));

out_S0_C0_RE = tmp_1_re - (alpha_vec * tmp_1_im);
out_S0_C0_IM = ((alpha_vec * tmp_1_re) + tmp_1_im);

tmp_1_re = *(((*chiBase)[0][1][0] + offs[0]));


tmp_1_im = *(((*chiBase)[0][1][1] + offs[0]));

out_S1_C0_RE = tmp_1_re - (alpha_vec * tmp_1_im);
out_S1_C0_IM = ((alpha_vec * tmp_1_re) + tmp_1_im);

tmp_1_re = *(((*chiBase)[0][2][0] + offs[0]));


tmp_1_im = *(((*chiBase)[0][2][1] + offs[0]));

out_S2_C0_RE = ((alpha_vec * tmp_1_im) + tmp_1_re);
out_S2_C0_IM = tmp_1_im - (alpha_vec * tmp_1_re);

tmp_1_re = *(((*chiBase)[0][3][0] + offs[0]));


tmp_1_im = *(((*chiBase)[0][3][1] + offs[0]));

out_S3_C0_RE = ((alpha_vec * tmp_1_im) + tmp_1_re);
out_S3_C0_IM = tmp_1_im - (alpha_vec * tmp_1_re);

tmp_1_re = *(((*chiBase)[1][0][0] + offs[0]));


tmp_1_im = *(((*chiBase)[1][0][1] + offs[0]));

out_S0_C1_RE = tmp_1_re - (alpha_vec * tmp_1_im);
out_S0_C1_IM = ((alpha_vec * tmp_1_re) + tmp_1_im);

tmp_1_re = *(((*chiBase)[1][1][0] + offs[0]));


tmp_1_im = *(((*chiBase)[1][1][1] + offs[0]));

out_S1_C1_RE = tmp_1_re - (alpha_vec * tmp_1_im);
out_S1_C1_IM = ((alpha_vec * tmp_1_re) + tmp_1_im);

tmp_1_re = *(((*chiBase)[1][2][0] + offs[0]));


tmp_1_im = *(((*chiBase)[1][2][1] + offs[0]));

out_S2_C1_RE = ((alpha_vec * tmp_1_im) + tmp_1_re);
out_S2_C1_IM = tmp_1_im - (alpha_vec * tmp_1_re);

tmp_1_re = *(((*chiBase)[1][3][0] + offs[0]));


tmp_1_im = *(((*chiBase)[1][3][1] + offs[0]));

out_S3_C1_RE = ((alpha_vec * tmp_1_im) + tmp_1_re);
out_S3_C1_IM = tmp_1_im - (alpha_vec * tmp_1_re);

tmp_1_re = *(((*chiBase)[2][0][0] + offs[0]));


tmp_1_im = *(((*chiBase)[2][0][1] + offs[0]));

out_S0_C2_RE = tmp_1_re - (alpha_vec * tmp_1_im);
out_S0_C2_IM = ((alpha_vec * tmp_1_re) + tmp_1_im);

tmp_1_re = *(((*chiBase)[2][1][0] + offs[0]));


tmp_1_im = *(((*chiBase)[2][1][1] + offs[0]));

out_S1_C2_RE = tmp_1_re - (alpha_vec * tmp_1_im);
out_S1_C2_IM = ((alpha_vec * tmp_1_re) + tmp_1_im);

tmp_1_re = *(((*chiBase)[2][2][0] + offs[0]));


tmp_1_im = *(((*chiBase)[2][2][1] + offs[0]));

out_S2_C2_RE = ((alpha_vec * tmp_1_im) + tmp_1_re);
out_S2_C2_IM = tmp_1_im - (alpha_vec * tmp_1_re);

tmp_1_re = *(((*chiBase)[2][3][0] + offs[0]));


tmp_1_im = *(((*chiBase)[2][3][1] + offs[0]));

out_S3_C2_RE = ((alpha_vec * tmp_1_im) + tmp_1_re);
out_S3_C2_IM = tmp_1_im - (alpha_vec * tmp_1_re);
 if ( accumulate[0] ) { 
double beta_vec = 0.0;
beta_vec = (*(&coeff_s));


psi_S0_RE = *(((*xyBase)[0][0][0] + xbOffs[0]));


psi_S0_IM = *(((*xyBase)[0][0][1] + xbOffs[0]));


psi_S1_RE = *(((*xyBase)[0][3][0] + xbOffs[0]));


psi_S1_IM = *(((*xyBase)[0][3][1] + xbOffs[0]));

b_S0_C0_RE = (psi_S0_RE - psi_S1_IM);
b_S0_C0_IM = (psi_S0_IM + psi_S1_RE);

psi_S0_RE = *(((*xyBase)[1][0][0] + xbOffs[0]));


psi_S0_IM = *(((*xyBase)[1][0][1] + xbOffs[0]));


psi_S1_RE = *(((*xyBase)[1][3][0] + xbOffs[0]));


psi_S1_IM = *(((*xyBase)[1][3][1] + xbOffs[0]));

b_S0_C1_RE = (psi_S0_RE - psi_S1_IM);
b_S0_C1_IM = (psi_S0_IM + psi_S1_RE);

psi_S0_RE = *(((*xyBase)[2][0][0] + xbOffs[0]));


psi_S0_IM = *(((*xyBase)[2][0][1] + xbOffs[0]));


psi_S1_RE = *(((*xyBase)[2][3][0] + xbOffs[0]));


psi_S1_IM = *(((*xyBase)[2][3][1] + xbOffs[0]));

b_S0_C2_RE = (psi_S0_RE - psi_S1_IM);
b_S0_C2_IM = (psi_S0_IM + psi_S1_RE);
u_00_re = *((*gBase)[0][0][0][0]);

u_00_im = *((*gBase)[0][0][0][1]);

u_01_re = *((*gBase)[0][0][1][0]);

u_01_im = *((*gBase)[0][0][1][1]);

u_02_re = *((*gBase)[0][0][2][0]);

u_02_im = *((*gBase)[0][0][2][1]);

u_10_re = *((*gBase)[0][1][0][0]);

u_10_im = *((*gBase)[0][1][0][1]);

u_11_re = *((*gBase)[0][1][1][0]);

u_11_im = *((*gBase)[0][1][1][1]);

u_12_re = *((*gBase)[0][1][2][0]);

u_12_im = *((*gBase)[0][1][2][1]);

u_20_re = *((*gBase)[0][2][0][0]);

u_20_im = *((*gBase)[0][2][0][1]);

u_21_re = *((*gBase)[0][2][1][0]);

u_21_im = *((*gBase)[0][2][1][1]);

u_22_re = *((*gBase)[0][2][2][0]);

u_22_im = *((*gBase)[0][2][2][1]);

ub_S0_C0_RE = u_00_re * b_S0_C0_RE;
ub_S0_C0_RE = ((u_00_im * b_S0_C0_IM) + ub_S0_C0_RE);
ub_S0_C0_IM = u_00_re * b_S0_C0_IM;
ub_S0_C0_IM = ub_S0_C0_IM - (u_00_im * b_S0_C0_RE);
ub_S0_C0_RE = ((u_01_re * b_S0_C1_RE) + ub_S0_C0_RE);
ub_S0_C0_RE = ((u_01_im * b_S0_C1_IM) + ub_S0_C0_RE);
ub_S0_C0_IM = ((u_01_re * b_S0_C1_IM) + ub_S0_C0_IM);
ub_S0_C0_IM = ub_S0_C0_IM - (u_01_im * b_S0_C1_RE);
ub_S0_C0_RE = ((u_02_re * b_S0_C2_RE) + ub_S0_C0_RE);
ub_S0_C0_RE = ((u_02_im * b_S0_C2_IM) + ub_S0_C0_RE);
ub_S0_C0_IM = ((u_02_re * b_S0_C2_IM) + ub_S0_C0_IM);
ub_S0_C0_IM = ub_S0_C0_IM - (u_02_im * b_S0_C2_RE);
ub_S0_C1_RE = u_10_re * b_S0_C0_RE;
ub_S0_C1_RE = ((u_10_im * b_S0_C0_IM) + ub_S0_C1_RE);
ub_S0_C1_IM = u_10_re * b_S0_C0_IM;
ub_S0_C1_IM = ub_S0_C1_IM - (u_10_im * b_S0_C0_RE);
ub_S0_C1_RE = ((u_11_re * b_S0_C1_RE) + ub_S0_C1_RE);
ub_S0_C1_RE = ((u_11_im * b_S0_C1_IM) + ub_S0_C1_RE);
ub_S0_C1_IM = ((u_11_re * b_S0_C1_IM) + ub_S0_C1_IM);
ub_S0_C1_IM = ub_S0_C1_IM - (u_11_im * b_S0_C1_RE);
ub_S0_C1_RE = ((u_12_re * b_S0_C2_RE) + ub_S0_C1_RE);
ub_S0_C1_RE = ((u_12_im * b_S0_C2_IM) + ub_S0_C1_RE);
ub_S0_C1_IM = ((u_12_re * b_S0_C2_IM) + ub_S0_C1_IM);
ub_S0_C1_IM = ub_S0_C1_IM - (u_12_im * b_S0_C2_RE);
ub_S0_C2_RE = u_20_re * b_S0_C0_RE;
ub_S0_C2_RE = ((u_20_im * b_S0_C0_IM) + ub_S0_C2_RE);
ub_S0_C2_IM = u_20_re * b_S0_C0_IM;
ub_S0_C2_IM = ub_S0_C2_IM - (u_20_im * b_S0_C0_RE);
ub_S0_C2_RE = ((u_21_re * b_S0_C1_RE) + ub_S0_C2_RE);
ub_S0_C2_RE = ((u_21_im * b_S0_C1_IM) + ub_S0_C2_RE);
ub_S0_C2_IM = ((u_21_re * b_S0_C1_IM) + ub_S0_C2_IM);
ub_S0_C2_IM = ub_S0_C2_IM - (u_21_im * b_S0_C1_RE);
ub_S0_C2_RE = ((u_22_re * b_S0_C2_RE) + ub_S0_C2_RE);
ub_S0_C2_RE = ((u_22_im * b_S0_C2_IM) + ub_S0_C2_RE);
ub_S0_C2_IM = ((u_22_re * b_S0_C2_IM) + ub_S0_C2_IM);
ub_S0_C2_IM = ub_S0_C2_IM - (u_22_im * b_S0_C2_RE);
out_S0_C0_RE = out_S0_C0_RE - (beta_vec * ub_S0_C0_RE);
out_S0_C0_IM = out_S0_C0_IM - (beta_vec * ub_S0_C0_IM);
out_S0_C1_RE = out_S0_C1_RE - (beta_vec * ub_S0_C1_RE);
out_S0_C1_IM = out_S0_C1_IM - (beta_vec * ub_S0_C1_IM);
out_S0_C2_RE = out_S0_C2_RE - (beta_vec * ub_S0_C2_RE);
out_S0_C2_IM = out_S0_C2_IM - (beta_vec * ub_S0_C2_IM);
out_S3_C0_RE = out_S3_C0_RE - (beta_vec * ub_S0_C0_IM);
out_S3_C0_IM = ((beta_vec * ub_S0_C0_RE) + out_S3_C0_IM);
out_S3_C1_RE = out_S3_C1_RE - (beta_vec * ub_S0_C1_IM);
out_S3_C1_IM = ((beta_vec * ub_S0_C1_RE) + out_S3_C1_IM);
out_S3_C2_RE = out_S3_C2_RE - (beta_vec * ub_S0_C2_IM);
out_S3_C2_IM = ((beta_vec * ub_S0_C2_RE) + out_S3_C2_IM);

psi_S0_RE = *(((*xyBase)[0][1][0] + xbOffs[0]));


psi_S0_IM = *(((*xyBase)[0][1][1] + xbOffs[0]));


psi_S1_RE = *(((*xyBase)[0][2][0] + xbOffs[0]));


psi_S1_IM = *(((*xyBase)[0][2][1] + xbOffs[0]));

b_S1_C0_RE = (psi_S0_RE - psi_S1_IM);
b_S1_C0_IM = (psi_S0_IM + psi_S1_RE);

psi_S0_RE = *(((*xyBase)[1][1][0] + xbOffs[0]));


psi_S0_IM = *(((*xyBase)[1][1][1] + xbOffs[0]));


psi_S1_RE = *(((*xyBase)[1][2][0] + xbOffs[0]));


psi_S1_IM = *(((*xyBase)[1][2][1] + xbOffs[0]));

b_S1_C1_RE = (psi_S0_RE - psi_S1_IM);
b_S1_C1_IM = (psi_S0_IM + psi_S1_RE);

psi_S0_RE = *(((*xyBase)[2][1][0] + xbOffs[0]));


psi_S0_IM = *(((*xyBase)[2][1][1] + xbOffs[0]));


psi_S1_RE = *(((*xyBase)[2][2][0] + xbOffs[0]));


psi_S1_IM = *(((*xyBase)[2][2][1] + xbOffs[0]));

b_S1_C2_RE = (psi_S0_RE - psi_S1_IM);
b_S1_C2_IM = (psi_S0_IM + psi_S1_RE);
ub_S1_C0_RE = u_00_re * b_S1_C0_RE;
ub_S1_C0_RE = ((u_00_im * b_S1_C0_IM) + ub_S1_C0_RE);
ub_S1_C0_IM = u_00_re * b_S1_C0_IM;
ub_S1_C0_IM = ub_S1_C0_IM - (u_00_im * b_S1_C0_RE);
ub_S1_C0_RE = ((u_01_re * b_S1_C1_RE) + ub_S1_C0_RE);
ub_S1_C0_RE = ((u_01_im * b_S1_C1_IM) + ub_S1_C0_RE);
ub_S1_C0_IM = ((u_01_re * b_S1_C1_IM) + ub_S1_C0_IM);
ub_S1_C0_IM = ub_S1_C0_IM - (u_01_im * b_S1_C1_RE);
ub_S1_C0_RE = ((u_02_re * b_S1_C2_RE) + ub_S1_C0_RE);
ub_S1_C0_RE = ((u_02_im * b_S1_C2_IM) + ub_S1_C0_RE);
ub_S1_C0_IM = ((u_02_re * b_S1_C2_IM) + ub_S1_C0_IM);
ub_S1_C0_IM = ub_S1_C0_IM - (u_02_im * b_S1_C2_RE);
ub_S1_C1_RE = u_10_re * b_S1_C0_RE;
ub_S1_C1_RE = ((u_10_im * b_S1_C0_IM) + ub_S1_C1_RE);
ub_S1_C1_IM = u_10_re * b_S1_C0_IM;
ub_S1_C1_IM = ub_S1_C1_IM - (u_10_im * b_S1_C0_RE);
ub_S1_C1_RE = ((u_11_re * b_S1_C1_RE) + ub_S1_C1_RE);
ub_S1_C1_RE = ((u_11_im * b_S1_C1_IM) + ub_S1_C1_RE);
ub_S1_C1_IM = ((u_11_re * b_S1_C1_IM) + ub_S1_C1_IM);
ub_S1_C1_IM = ub_S1_C1_IM - (u_11_im * b_S1_C1_RE);
ub_S1_C1_RE = ((u_12_re * b_S1_C2_RE) + ub_S1_C1_RE);
ub_S1_C1_RE = ((u_12_im * b_S1_C2_IM) + ub_S1_C1_RE);
ub_S1_C1_IM = ((u_12_re * b_S1_C2_IM) + ub_S1_C1_IM);
ub_S1_C1_IM = ub_S1_C1_IM - (u_12_im * b_S1_C2_RE);
ub_S1_C2_RE = u_20_re * b_S1_C0_RE;
ub_S1_C2_RE = ((u_20_im * b_S1_C0_IM) + ub_S1_C2_RE);
ub_S1_C2_IM = u_20_re * b_S1_C0_IM;
ub_S1_C2_IM = ub_S1_C2_IM - (u_20_im * b_S1_C0_RE);
ub_S1_C2_RE = ((u_21_re * b_S1_C1_RE) + ub_S1_C2_RE);
ub_S1_C2_RE = ((u_21_im * b_S1_C1_IM) + ub_S1_C2_RE);
ub_S1_C2_IM = ((u_21_re * b_S1_C1_IM) + ub_S1_C2_IM);
ub_S1_C2_IM = ub_S1_C2_IM - (u_21_im * b_S1_C1_RE);
ub_S1_C2_RE = ((u_22_re * b_S1_C2_RE) + ub_S1_C2_RE);
ub_S1_C2_RE = ((u_22_im * b_S1_C2_IM) + ub_S1_C2_RE);
ub_S1_C2_IM = ((u_22_re * b_S1_C2_IM) + ub_S1_C2_IM);
ub_S1_C2_IM = ub_S1_C2_IM - (u_22_im * b_S1_C2_RE);
out_S1_C0_RE = out_S1_C0_RE - (beta_vec * ub_S1_C0_RE);
out_S1_C0_IM = out_S1_C0_IM - (beta_vec * ub_S1_C0_IM);
out_S1_C1_RE = out_S1_C1_RE - (beta_vec * ub_S1_C1_RE);
out_S1_C1_IM = out_S1_C1_IM - (beta_vec * ub_S1_C1_IM);
out_S1_C2_RE = out_S1_C2_RE - (beta_vec * ub_S1_C2_RE);
out_S1_C2_IM = out_S1_C2_IM - (beta_vec * ub_S1_C2_IM);
out_S2_C0_RE = out_S2_C0_RE - (beta_vec * ub_S1_C0_IM);
out_S2_C0_IM = ((beta_vec * ub_S1_C0_RE) + out_S2_C0_IM);
out_S2_C1_RE = out_S2_C1_RE - (beta_vec * ub_S1_C1_IM);
out_S2_C1_IM = ((beta_vec * ub_S1_C1_RE) + out_S2_C1_IM);
out_S2_C2_RE = out_S2_C2_RE - (beta_vec * ub_S1_C2_IM);
out_S2_C2_IM = ((beta_vec * ub_S1_C2_RE) + out_S2_C2_IM);
}
 if ( accumulate[1] ) { 
double beta_vec = 0.0;
beta_vec = (*(&coeff_s));


psi_S0_RE = *(((*xyBase)[0][0][0] + xfOffs[0]));


psi_S0_IM = *(((*xyBase)[0][0][1] + xfOffs[0]));


psi_S1_RE = *(((*xyBase)[0][3][0] + xfOffs[0]));


psi_S1_IM = *(((*xyBase)[0][3][1] + xfOffs[0]));

b_S0_C0_RE = (psi_S0_RE + psi_S1_IM);
b_S0_C0_IM = (psi_S0_IM - psi_S1_RE);

psi_S0_RE = *(((*xyBase)[1][0][0] + xfOffs[0]));


psi_S0_IM = *(((*xyBase)[1][0][1] + xfOffs[0]));


psi_S1_RE = *(((*xyBase)[1][3][0] + xfOffs[0]));


psi_S1_IM = *(((*xyBase)[1][3][1] + xfOffs[0]));

b_S0_C1_RE = (psi_S0_RE + psi_S1_IM);
b_S0_C1_IM = (psi_S0_IM - psi_S1_RE);

psi_S0_RE = *(((*xyBase)[2][0][0] + xfOffs[0]));


psi_S0_IM = *(((*xyBase)[2][0][1] + xfOffs[0]));


psi_S1_RE = *(((*xyBase)[2][3][0] + xfOffs[0]));


psi_S1_IM = *(((*xyBase)[2][3][1] + xfOffs[0]));

b_S0_C2_RE = (psi_S0_RE + psi_S1_IM);
b_S0_C2_IM = (psi_S0_IM - psi_S1_RE);
u_00_re = *((*gBase)[1][0][0][0]);

u_00_im = *((*gBase)[1][0][0][1]);

u_01_re = *((*gBase)[1][0][1][0]);

u_01_im = *((*gBase)[1][0][1][1]);

u_02_re = *((*gBase)[1][0][2][0]);

u_02_im = *((*gBase)[1][0][2][1]);

u_10_re = *((*gBase)[1][1][0][0]);

u_10_im = *((*gBase)[1][1][0][1]);

u_11_re = *((*gBase)[1][1][1][0]);

u_11_im = *((*gBase)[1][1][1][1]);

u_12_re = *((*gBase)[1][1][2][0]);

u_12_im = *((*gBase)[1][1][2][1]);

u_20_re = *((*gBase)[1][2][0][0]);

u_20_im = *((*gBase)[1][2][0][1]);

u_21_re = *((*gBase)[1][2][1][0]);

u_21_im = *((*gBase)[1][2][1][1]);

u_22_re = *((*gBase)[1][2][2][0]);

u_22_im = *((*gBase)[1][2][2][1]);

ub_S0_C0_RE = u_00_re * b_S0_C0_RE;
ub_S0_C0_RE = ub_S0_C0_RE - (u_00_im * b_S0_C0_IM);
ub_S0_C0_IM = u_00_re * b_S0_C0_IM;
ub_S0_C0_IM = ((u_00_im * b_S0_C0_RE) + ub_S0_C0_IM);
ub_S0_C0_RE = ((u_10_re * b_S0_C1_RE) + ub_S0_C0_RE);
ub_S0_C0_RE = ub_S0_C0_RE - (u_10_im * b_S0_C1_IM);
ub_S0_C0_IM = ((u_10_re * b_S0_C1_IM) + ub_S0_C0_IM);
ub_S0_C0_IM = ((u_10_im * b_S0_C1_RE) + ub_S0_C0_IM);
ub_S0_C0_RE = ((u_20_re * b_S0_C2_RE) + ub_S0_C0_RE);
ub_S0_C0_RE = ub_S0_C0_RE - (u_20_im * b_S0_C2_IM);
ub_S0_C0_IM = ((u_20_re * b_S0_C2_IM) + ub_S0_C0_IM);
ub_S0_C0_IM = ((u_20_im * b_S0_C2_RE) + ub_S0_C0_IM);
ub_S0_C1_RE = u_01_re * b_S0_C0_RE;
ub_S0_C1_RE = ub_S0_C1_RE - (u_01_im * b_S0_C0_IM);
ub_S0_C1_IM = u_01_re * b_S0_C0_IM;
ub_S0_C1_IM = ((u_01_im * b_S0_C0_RE) + ub_S0_C1_IM);
ub_S0_C1_RE = ((u_11_re * b_S0_C1_RE) + ub_S0_C1_RE);
ub_S0_C1_RE = ub_S0_C1_RE - (u_11_im * b_S0_C1_IM);
ub_S0_C1_IM = ((u_11_re * b_S0_C1_IM) + ub_S0_C1_IM);
ub_S0_C1_IM = ((u_11_im * b_S0_C1_RE) + ub_S0_C1_IM);
ub_S0_C1_RE = ((u_21_re * b_S0_C2_RE) + ub_S0_C1_RE);
ub_S0_C1_RE = ub_S0_C1_RE - (u_21_im * b_S0_C2_IM);
ub_S0_C1_IM = ((u_21_re * b_S0_C2_IM) + ub_S0_C1_IM);
ub_S0_C1_IM = ((u_21_im * b_S0_C2_RE) + ub_S0_C1_IM);
ub_S0_C2_RE = u_02_re * b_S0_C0_RE;
ub_S0_C2_RE = ub_S0_C2_RE - (u_02_im * b_S0_C0_IM);
ub_S0_C2_IM = u_02_re * b_S0_C0_IM;
ub_S0_C2_IM = ((u_02_im * b_S0_C0_RE) + ub_S0_C2_IM);
ub_S0_C2_RE = ((u_12_re * b_S0_C1_RE) + ub_S0_C2_RE);
ub_S0_C2_RE = ub_S0_C2_RE - (u_12_im * b_S0_C1_IM);
ub_S0_C2_IM = ((u_12_re * b_S0_C1_IM) + ub_S0_C2_IM);
ub_S0_C2_IM = ((u_12_im * b_S0_C1_RE) + ub_S0_C2_IM);
ub_S0_C2_RE = ((u_22_re * b_S0_C2_RE) + ub_S0_C2_RE);
ub_S0_C2_RE = ub_S0_C2_RE - (u_22_im * b_S0_C2_IM);
ub_S0_C2_IM = ((u_22_re * b_S0_C2_IM) + ub_S0_C2_IM);
ub_S0_C2_IM = ((u_22_im * b_S0_C2_RE) + ub_S0_C2_IM);
out_S0_C0_RE = out_S0_C0_RE - (beta_vec * ub_S0_C0_RE);
out_S0_C0_IM = out_S0_C0_IM - (beta_vec * ub_S0_C0_IM);
out_S0_C1_RE = out_S0_C1_RE - (beta_vec * ub_S0_C1_RE);
out_S0_C1_IM = out_S0_C1_IM - (beta_vec * ub_S0_C1_IM);
out_S0_C2_RE = out_S0_C2_RE - (beta_vec * ub_S0_C2_RE);
out_S0_C2_IM = out_S0_C2_IM - (beta_vec * ub_S0_C2_IM);
out_S3_C0_RE = ((beta_vec * ub_S0_C0_IM) + out_S3_C0_RE);
out_S3_C0_IM = out_S3_C0_IM - (beta_vec * ub_S0_C0_RE);
out_S3_C1_RE = ((beta_vec * ub_S0_C1_IM) + out_S3_C1_RE);
out_S3_C1_IM = out_S3_C1_IM - (beta_vec * ub_S0_C1_RE);
out_S3_C2_RE = ((beta_vec * ub_S0_C2_IM) + out_S3_C2_RE);
out_S3_C2_IM = out_S3_C2_IM - (beta_vec * ub_S0_C2_RE);

psi_S0_RE = *(((*xyBase)[0][1][0] + xfOffs[0]));


psi_S0_IM = *(((*xyBase)[0][1][1] + xfOffs[0]));


psi_S1_RE = *(((*xyBase)[0][2][0] + xfOffs[0]));


psi_S1_IM = *(((*xyBase)[0][2][1] + xfOffs[0]));

b_S1_C0_RE = (psi_S0_RE + psi_S1_IM);
b_S1_C0_IM = (psi_S0_IM - psi_S1_RE);

psi_S0_RE = *(((*xyBase)[1][1][0] + xfOffs[0]));


psi_S0_IM = *(((*xyBase)[1][1][1] + xfOffs[0]));


psi_S1_RE = *(((*xyBase)[1][2][0] + xfOffs[0]));


psi_S1_IM = *(((*xyBase)[1][2][1] + xfOffs[0]));

b_S1_C1_RE = (psi_S0_RE + psi_S1_IM);
b_S1_C1_IM = (psi_S0_IM - psi_S1_RE);

psi_S0_RE = *(((*xyBase)[2][1][0] + xfOffs[0]));


psi_S0_IM = *(((*xyBase)[2][1][1] + xfOffs[0]));


psi_S1_RE = *(((*xyBase)[2][2][0] + xfOffs[0]));


psi_S1_IM = *(((*xyBase)[2][2][1] + xfOffs[0]));

b_S1_C2_RE = (psi_S0_RE + psi_S1_IM);
b_S1_C2_IM = (psi_S0_IM - psi_S1_RE);
ub_S1_C0_RE = u_00_re * b_S1_C0_RE;
ub_S1_C0_RE = ub_S1_C0_RE - (u_00_im * b_S1_C0_IM);
ub_S1_C0_IM = u_00_re * b_S1_C0_IM;
ub_S1_C0_IM = ((u_00_im * b_S1_C0_RE) + ub_S1_C0_IM);
ub_S1_C0_RE = ((u_10_re * b_S1_C1_RE) + ub_S1_C0_RE);
ub_S1_C0_RE = ub_S1_C0_RE - (u_10_im * b_S1_C1_IM);
ub_S1_C0_IM = ((u_10_re * b_S1_C1_IM) + ub_S1_C0_IM);
ub_S1_C0_IM = ((u_10_im * b_S1_C1_RE) + ub_S1_C0_IM);
ub_S1_C0_RE = ((u_20_re * b_S1_C2_RE) + ub_S1_C0_RE);
ub_S1_C0_RE = ub_S1_C0_RE - (u_20_im * b_S1_C2_IM);
ub_S1_C0_IM = ((u_20_re * b_S1_C2_IM) + ub_S1_C0_IM);
ub_S1_C0_IM = ((u_20_im * b_S1_C2_RE) + ub_S1_C0_IM);
ub_S1_C1_RE = u_01_re * b_S1_C0_RE;
ub_S1_C1_RE = ub_S1_C1_RE - (u_01_im * b_S1_C0_IM);
ub_S1_C1_IM = u_01_re * b_S1_C0_IM;
ub_S1_C1_IM = ((u_01_im * b_S1_C0_RE) + ub_S1_C1_IM);
ub_S1_C1_RE = ((u_11_re * b_S1_C1_RE) + ub_S1_C1_RE);
ub_S1_C1_RE = ub_S1_C1_RE - (u_11_im * b_S1_C1_IM);
ub_S1_C1_IM = ((u_11_re * b_S1_C1_IM) + ub_S1_C1_IM);
ub_S1_C1_IM = ((u_11_im * b_S1_C1_RE) + ub_S1_C1_IM);
ub_S1_C1_RE = ((u_21_re * b_S1_C2_RE) + ub_S1_C1_RE);
ub_S1_C1_RE = ub_S1_C1_RE - (u_21_im * b_S1_C2_IM);
ub_S1_C1_IM = ((u_21_re * b_S1_C2_IM) + ub_S1_C1_IM);
ub_S1_C1_IM = ((u_21_im * b_S1_C2_RE) + ub_S1_C1_IM);
ub_S1_C2_RE = u_02_re * b_S1_C0_RE;
ub_S1_C2_RE = ub_S1_C2_RE - (u_02_im * b_S1_C0_IM);
ub_S1_C2_IM = u_02_re * b_S1_C0_IM;
ub_S1_C2_IM = ((u_02_im * b_S1_C0_RE) + ub_S1_C2_IM);
ub_S1_C2_RE = ((u_12_re * b_S1_C1_RE) + ub_S1_C2_RE);
ub_S1_C2_RE = ub_S1_C2_RE - (u_12_im * b_S1_C1_IM);
ub_S1_C2_IM = ((u_12_re * b_S1_C1_IM) + ub_S1_C2_IM);
ub_S1_C2_IM = ((u_12_im * b_S1_C1_RE) + ub_S1_C2_IM);
ub_S1_C2_RE = ((u_22_re * b_S1_C2_RE) + ub_S1_C2_RE);
ub_S1_C2_RE = ub_S1_C2_RE - (u_22_im * b_S1_C2_IM);
ub_S1_C2_IM = ((u_22_re * b_S1_C2_IM) + ub_S1_C2_IM);
ub_S1_C2_IM = ((u_22_im * b_S1_C2_RE) + ub_S1_C2_IM);
out_S1_C0_RE = out_S1_C0_RE - (beta_vec * ub_S1_C0_RE);
out_S1_C0_IM = out_S1_C0_IM - (beta_vec * ub_S1_C0_IM);
out_S1_C1_RE = out_S1_C1_RE - (beta_vec * ub_S1_C1_RE);
out_S1_C1_IM = out_S1_C1_IM - (beta_vec * ub_S1_C1_IM);
out_S1_C2_RE = out_S1_C2_RE - (beta_vec * ub_S1_C2_RE);
out_S1_C2_IM = out_S1_C2_IM - (beta_vec * ub_S1_C2_IM);
out_S2_C0_RE = ((beta_vec * ub_S1_C0_IM) + out_S2_C0_RE);
out_S2_C0_IM = out_S2_C0_IM - (beta_vec * ub_S1_C0_RE);
out_S2_C1_RE = ((beta_vec * ub_S1_C1_IM) + out_S2_C1_RE);
out_S2_C1_IM = out_S2_C1_IM - (beta_vec * ub_S1_C1_RE);
out_S2_C2_RE = ((beta_vec * ub_S1_C2_IM) + out_S2_C2_RE);
out_S2_C2_IM = out_S2_C2_IM - (beta_vec * ub_S1_C2_RE);
}
 if ( accumulate[2] ) { 
double beta_vec = 0.0;
beta_vec = (*(&coeff_s));


psi_S0_RE = *(((*xyBase)[0][0][0] + ybOffs[0]));


psi_S0_IM = *(((*xyBase)[0][0][1] + ybOffs[0]));


psi_S1_RE = *(((*xyBase)[0][3][0] + ybOffs[0]));


psi_S1_IM = *(((*xyBase)[0][3][1] + ybOffs[0]));

b_S0_C0_RE = (psi_S0_RE - psi_S1_RE);
b_S0_C0_IM = (psi_S0_IM - psi_S1_IM);

psi_S0_RE = *(((*xyBase)[1][0][0] + ybOffs[0]));


psi_S0_IM = *(((*xyBase)[1][0][1] + ybOffs[0]));


psi_S1_RE = *(((*xyBase)[1][3][0] + ybOffs[0]));


psi_S1_IM = *(((*xyBase)[1][3][1] + ybOffs[0]));

b_S0_C1_RE = (psi_S0_RE - psi_S1_RE);
b_S0_C1_IM = (psi_S0_IM - psi_S1_IM);

psi_S0_RE = *(((*xyBase)[2][0][0] + ybOffs[0]));


psi_S0_IM = *(((*xyBase)[2][0][1] + ybOffs[0]));


psi_S1_RE = *(((*xyBase)[2][3][0] + ybOffs[0]));


psi_S1_IM = *(((*xyBase)[2][3][1] + ybOffs[0]));

b_S0_C2_RE = (psi_S0_RE - psi_S1_RE);
b_S0_C2_IM = (psi_S0_IM - psi_S1_IM);
u_00_re = *((*gBase)[2][0][0][0]);

u_00_im = *((*gBase)[2][0][0][1]);

u_01_re = *((*gBase)[2][0][1][0]);

u_01_im = *((*gBase)[2][0][1][1]);

u_02_re = *((*gBase)[2][0][2][0]);

u_02_im = *((*gBase)[2][0][2][1]);

u_10_re = *((*gBase)[2][1][0][0]);

u_10_im = *((*gBase)[2][1][0][1]);

u_11_re = *((*gBase)[2][1][1][0]);

u_11_im = *((*gBase)[2][1][1][1]);

u_12_re = *((*gBase)[2][1][2][0]);

u_12_im = *((*gBase)[2][1][2][1]);

u_20_re = *((*gBase)[2][2][0][0]);

u_20_im = *((*gBase)[2][2][0][1]);

u_21_re = *((*gBase)[2][2][1][0]);

u_21_im = *((*gBase)[2][2][1][1]);

u_22_re = *((*gBase)[2][2][2][0]);

u_22_im = *((*gBase)[2][2][2][1]);

ub_S0_C0_RE = u_00_re * b_S0_C0_RE;
ub_S0_C0_RE = ((u_00_im * b_S0_C0_IM) + ub_S0_C0_RE);
ub_S0_C0_IM = u_00_re * b_S0_C0_IM;
ub_S0_C0_IM = ub_S0_C0_IM - (u_00_im * b_S0_C0_RE);
ub_S0_C0_RE = ((u_01_re * b_S0_C1_RE) + ub_S0_C0_RE);
ub_S0_C0_RE = ((u_01_im * b_S0_C1_IM) + ub_S0_C0_RE);
ub_S0_C0_IM = ((u_01_re * b_S0_C1_IM) + ub_S0_C0_IM);
ub_S0_C0_IM = ub_S0_C0_IM - (u_01_im * b_S0_C1_RE);
ub_S0_C0_RE = ((u_02_re * b_S0_C2_RE) + ub_S0_C0_RE);
ub_S0_C0_RE = ((u_02_im * b_S0_C2_IM) + ub_S0_C0_RE);
ub_S0_C0_IM = ((u_02_re * b_S0_C2_IM) + ub_S0_C0_IM);
ub_S0_C0_IM = ub_S0_C0_IM - (u_02_im * b_S0_C2_RE);
ub_S0_C1_RE = u_10_re * b_S0_C0_RE;
ub_S0_C1_RE = ((u_10_im * b_S0_C0_IM) + ub_S0_C1_RE);
ub_S0_C1_IM = u_10_re * b_S0_C0_IM;
ub_S0_C1_IM = ub_S0_C1_IM - (u_10_im * b_S0_C0_RE);
ub_S0_C1_RE = ((u_11_re * b_S0_C1_RE) + ub_S0_C1_RE);
ub_S0_C1_RE = ((u_11_im * b_S0_C1_IM) + ub_S0_C1_RE);
ub_S0_C1_IM = ((u_11_re * b_S0_C1_IM) + ub_S0_C1_IM);
ub_S0_C1_IM = ub_S0_C1_IM - (u_11_im * b_S0_C1_RE);
ub_S0_C1_RE = ((u_12_re * b_S0_C2_RE) + ub_S0_C1_RE);
ub_S0_C1_RE = ((u_12_im * b_S0_C2_IM) + ub_S0_C1_RE);
ub_S0_C1_IM = ((u_12_re * b_S0_C2_IM) + ub_S0_C1_IM);
ub_S0_C1_IM = ub_S0_C1_IM - (u_12_im * b_S0_C2_RE);
ub_S0_C2_RE = u_20_re * b_S0_C0_RE;
ub_S0_C2_RE = ((u_20_im * b_S0_C0_IM) + ub_S0_C2_RE);
ub_S0_C2_IM = u_20_re * b_S0_C0_IM;
ub_S0_C2_IM = ub_S0_C2_IM - (u_20_im * b_S0_C0_RE);
ub_S0_C2_RE = ((u_21_re * b_S0_C1_RE) + ub_S0_C2_RE);
ub_S0_C2_RE = ((u_21_im * b_S0_C1_IM) + ub_S0_C2_RE);
ub_S0_C2_IM = ((u_21_re * b_S0_C1_IM) + ub_S0_C2_IM);
ub_S0_C2_IM = ub_S0_C2_IM - (u_21_im * b_S0_C1_RE);
ub_S0_C2_RE = ((u_22_re * b_S0_C2_RE) + ub_S0_C2_RE);
ub_S0_C2_RE = ((u_22_im * b_S0_C2_IM) + ub_S0_C2_RE);
ub_S0_C2_IM = ((u_22_re * b_S0_C2_IM) + ub_S0_C2_IM);
ub_S0_C2_IM = ub_S0_C2_IM - (u_22_im * b_S0_C2_RE);
out_S0_C0_RE = out_S0_C0_RE - (beta_vec * ub_S0_C0_RE);
out_S0_C0_IM = out_S0_C0_IM - (beta_vec * ub_S0_C0_IM);
out_S0_C1_RE = out_S0_C1_RE - (beta_vec * ub_S0_C1_RE);
out_S0_C1_IM = out_S0_C1_IM - (beta_vec * ub_S0_C1_IM);
out_S0_C2_RE = out_S0_C2_RE - (beta_vec * ub_S0_C2_RE);
out_S0_C2_IM = out_S0_C2_IM - (beta_vec * ub_S0_C2_IM);
out_S3_C0_RE = ((beta_vec * ub_S0_C0_RE) + out_S3_C0_RE);
out_S3_C0_IM = ((beta_vec * ub_S0_C0_IM) + out_S3_C0_IM);
out_S3_C1_RE = ((beta_vec * ub_S0_C1_RE) + out_S3_C1_RE);
out_S3_C1_IM = ((beta_vec * ub_S0_C1_IM) + out_S3_C1_IM);
out_S3_C2_RE = ((beta_vec * ub_S0_C2_RE) + out_S3_C2_RE);
out_S3_C2_IM = ((beta_vec * ub_S0_C2_IM) + out_S3_C2_IM);

psi_S0_RE = *(((*xyBase)[0][1][0] + ybOffs[0]));


psi_S0_IM = *(((*xyBase)[0][1][1] + ybOffs[0]));


psi_S1_RE = *(((*xyBase)[0][2][0] + ybOffs[0]));


psi_S1_IM = *(((*xyBase)[0][2][1] + ybOffs[0]));

b_S1_C0_RE = (psi_S0_RE + psi_S1_RE);
b_S1_C0_IM = (psi_S0_IM + psi_S1_IM);

psi_S0_RE = *(((*xyBase)[1][1][0] + ybOffs[0]));


psi_S0_IM = *(((*xyBase)[1][1][1] + ybOffs[0]));


psi_S1_RE = *(((*xyBase)[1][2][0] + ybOffs[0]));


psi_S1_IM = *(((*xyBase)[1][2][1] + ybOffs[0]));

b_S1_C1_RE = (psi_S0_RE + psi_S1_RE);
b_S1_C1_IM = (psi_S0_IM + psi_S1_IM);

psi_S0_RE = *(((*xyBase)[2][1][0] + ybOffs[0]));


psi_S0_IM = *(((*xyBase)[2][1][1] + ybOffs[0]));


psi_S1_RE = *(((*xyBase)[2][2][0] + ybOffs[0]));


psi_S1_IM = *(((*xyBase)[2][2][1] + ybOffs[0]));

b_S1_C2_RE = (psi_S0_RE + psi_S1_RE);
b_S1_C2_IM = (psi_S0_IM + psi_S1_IM);
ub_S1_C0_RE = u_00_re * b_S1_C0_RE;
ub_S1_C0_RE = ((u_00_im * b_S1_C0_IM) + ub_S1_C0_RE);
ub_S1_C0_IM = u_00_re * b_S1_C0_IM;
ub_S1_C0_IM = ub_S1_C0_IM - (u_00_im * b_S1_C0_RE);
ub_S1_C0_RE = ((u_01_re * b_S1_C1_RE) + ub_S1_C0_RE);
ub_S1_C0_RE = ((u_01_im * b_S1_C1_IM) + ub_S1_C0_RE);
ub_S1_C0_IM = ((u_01_re * b_S1_C1_IM) + ub_S1_C0_IM);
ub_S1_C0_IM = ub_S1_C0_IM - (u_01_im * b_S1_C1_RE);
ub_S1_C0_RE = ((u_02_re * b_S1_C2_RE) + ub_S1_C0_RE);
ub_S1_C0_RE = ((u_02_im * b_S1_C2_IM) + ub_S1_C0_RE);
ub_S1_C0_IM = ((u_02_re * b_S1_C2_IM) + ub_S1_C0_IM);
ub_S1_C0_IM = ub_S1_C0_IM - (u_02_im * b_S1_C2_RE);
ub_S1_C1_RE = u_10_re * b_S1_C0_RE;
ub_S1_C1_RE = ((u_10_im * b_S1_C0_IM) + ub_S1_C1_RE);
ub_S1_C1_IM = u_10_re * b_S1_C0_IM;
ub_S1_C1_IM = ub_S1_C1_IM - (u_10_im * b_S1_C0_RE);
ub_S1_C1_RE = ((u_11_re * b_S1_C1_RE) + ub_S1_C1_RE);
ub_S1_C1_RE = ((u_11_im * b_S1_C1_IM) + ub_S1_C1_RE);
ub_S1_C1_IM = ((u_11_re * b_S1_C1_IM) + ub_S1_C1_IM);
ub_S1_C1_IM = ub_S1_C1_IM - (u_11_im * b_S1_C1_RE);
ub_S1_C1_RE = ((u_12_re * b_S1_C2_RE) + ub_S1_C1_RE);
ub_S1_C1_RE = ((u_12_im * b_S1_C2_IM) + ub_S1_C1_RE);
ub_S1_C1_IM = ((u_12_re * b_S1_C2_IM) + ub_S1_C1_IM);
ub_S1_C1_IM = ub_S1_C1_IM - (u_12_im * b_S1_C2_RE);
ub_S1_C2_RE = u_20_re * b_S1_C0_RE;
ub_S1_C2_RE = ((u_20_im * b_S1_C0_IM) + ub_S1_C2_RE);
ub_S1_C2_IM = u_20_re * b_S1_C0_IM;
ub_S1_C2_IM = ub_S1_C2_IM - (u_20_im * b_S1_C0_RE);
ub_S1_C2_RE = ((u_21_re * b_S1_C1_RE) + ub_S1_C2_RE);
ub_S1_C2_RE = ((u_21_im * b_S1_C1_IM) + ub_S1_C2_RE);
ub_S1_C2_IM = ((u_21_re * b_S1_C1_IM) + ub_S1_C2_IM);
ub_S1_C2_IM = ub_S1_C2_IM - (u_21_im * b_S1_C1_RE);
ub_S1_C2_RE = ((u_22_re * b_S1_C2_RE) + ub_S1_C2_RE);
ub_S1_C2_RE = ((u_22_im * b_S1_C2_IM) + ub_S1_C2_RE);
ub_S1_C2_IM = ((u_22_re * b_S1_C2_IM) + ub_S1_C2_IM);
ub_S1_C2_IM = ub_S1_C2_IM - (u_22_im * b_S1_C2_RE);
out_S1_C0_RE = out_S1_C0_RE - (beta_vec * ub_S1_C0_RE);
out_S1_C0_IM = out_S1_C0_IM - (beta_vec * ub_S1_C0_IM);
out_S1_C1_RE = out_S1_C1_RE - (beta_vec * ub_S1_C1_RE);
out_S1_C1_IM = out_S1_C1_IM - (beta_vec * ub_S1_C1_IM);
out_S1_C2_RE = out_S1_C2_RE - (beta_vec * ub_S1_C2_RE);
out_S1_C2_IM = out_S1_C2_IM - (beta_vec * ub_S1_C2_IM);
out_S2_C0_RE = out_S2_C0_RE - (beta_vec * ub_S1_C0_RE);
out_S2_C0_IM = out_S2_C0_IM - (beta_vec * ub_S1_C0_IM);
out_S2_C1_RE = out_S2_C1_RE - (beta_vec * ub_S1_C1_RE);
out_S2_C1_IM = out_S2_C1_IM - (beta_vec * ub_S1_C1_IM);
out_S2_C2_RE = out_S2_C2_RE - (beta_vec * ub_S1_C2_RE);
out_S2_C2_IM = out_S2_C2_IM - (beta_vec * ub_S1_C2_IM);
}
 if ( accumulate[3] ) { 
double beta_vec = 0.0;
beta_vec = (*(&coeff_s));


psi_S0_RE = *(((*xyBase)[0][0][0] + yfOffs[0]));


psi_S0_IM = *(((*xyBase)[0][0][1] + yfOffs[0]));


psi_S1_RE = *(((*xyBase)[0][3][0] + yfOffs[0]));


psi_S1_IM = *(((*xyBase)[0][3][1] + yfOffs[0]));

b_S0_C0_RE = (psi_S0_RE + psi_S1_RE);
b_S0_C0_IM = (psi_S0_IM + psi_S1_IM);

psi_S0_RE = *(((*xyBase)[1][0][0] + yfOffs[0]));


psi_S0_IM = *(((*xyBase)[1][0][1] + yfOffs[0]));


psi_S1_RE = *(((*xyBase)[1][3][0] + yfOffs[0]));


psi_S1_IM = *(((*xyBase)[1][3][1] + yfOffs[0]));

b_S0_C1_RE = (psi_S0_RE + psi_S1_RE);
b_S0_C1_IM = (psi_S0_IM + psi_S1_IM);

psi_S0_RE = *(((*xyBase)[2][0][0] + yfOffs[0]));


psi_S0_IM = *(((*xyBase)[2][0][1] + yfOffs[0]));


psi_S1_RE = *(((*xyBase)[2][3][0] + yfOffs[0]));


psi_S1_IM = *(((*xyBase)[2][3][1] + yfOffs[0]));

b_S0_C2_RE = (psi_S0_RE + psi_S1_RE);
b_S0_C2_IM = (psi_S0_IM + psi_S1_IM);
u_00_re = *((*gBase)[3][0][0][0]);

u_00_im = *((*gBase)[3][0][0][1]);

u_01_re = *((*gBase)[3][0][1][0]);

u_01_im = *((*gBase)[3][0][1][1]);

u_02_re = *((*gBase)[3][0][2][0]);

u_02_im = *((*gBase)[3][0][2][1]);

u_10_re = *((*gBase)[3][1][0][0]);

u_10_im = *((*gBase)[3][1][0][1]);

u_11_re = *((*gBase)[3][1][1][0]);

u_11_im = *((*gBase)[3][1][1][1]);

u_12_re = *((*gBase)[3][1][2][0]);

u_12_im = *((*gBase)[3][1][2][1]);

u_20_re = *((*gBase)[3][2][0][0]);

u_20_im = *((*gBase)[3][2][0][1]);

u_21_re = *((*gBase)[3][2][1][0]);

u_21_im = *((*gBase)[3][2][1][1]);

u_22_re = *((*gBase)[3][2][2][0]);

u_22_im = *((*gBase)[3][2][2][1]);

ub_S0_C0_RE = u_00_re * b_S0_C0_RE;
ub_S0_C0_RE = ub_S0_C0_RE - (u_00_im * b_S0_C0_IM);
ub_S0_C0_IM = u_00_re * b_S0_C0_IM;
ub_S0_C0_IM = ((u_00_im * b_S0_C0_RE) + ub_S0_C0_IM);
ub_S0_C0_RE = ((u_10_re * b_S0_C1_RE) + ub_S0_C0_RE);
ub_S0_C0_RE = ub_S0_C0_RE - (u_10_im * b_S0_C1_IM);
ub_S0_C0_IM = ((u_10_re * b_S0_C1_IM) + ub_S0_C0_IM);
ub_S0_C0_IM = ((u_10_im * b_S0_C1_RE) + ub_S0_C0_IM);
ub_S0_C0_RE = ((u_20_re * b_S0_C2_RE) + ub_S0_C0_RE);
ub_S0_C0_RE = ub_S0_C0_RE - (u_20_im * b_S0_C2_IM);
ub_S0_C0_IM = ((u_20_re * b_S0_C2_IM) + ub_S0_C0_IM);
ub_S0_C0_IM = ((u_20_im * b_S0_C2_RE) + ub_S0_C0_IM);
ub_S0_C1_RE = u_01_re * b_S0_C0_RE;
ub_S0_C1_RE = ub_S0_C1_RE - (u_01_im * b_S0_C0_IM);
ub_S0_C1_IM = u_01_re * b_S0_C0_IM;
ub_S0_C1_IM = ((u_01_im * b_S0_C0_RE) + ub_S0_C1_IM);
ub_S0_C1_RE = ((u_11_re * b_S0_C1_RE) + ub_S0_C1_RE);
ub_S0_C1_RE = ub_S0_C1_RE - (u_11_im * b_S0_C1_IM);
ub_S0_C1_IM = ((u_11_re * b_S0_C1_IM) + ub_S0_C1_IM);
ub_S0_C1_IM = ((u_11_im * b_S0_C1_RE) + ub_S0_C1_IM);
ub_S0_C1_RE = ((u_21_re * b_S0_C2_RE) + ub_S0_C1_RE);
ub_S0_C1_RE = ub_S0_C1_RE - (u_21_im * b_S0_C2_IM);
ub_S0_C1_IM = ((u_21_re * b_S0_C2_IM) + ub_S0_C1_IM);
ub_S0_C1_IM = ((u_21_im * b_S0_C2_RE) + ub_S0_C1_IM);
ub_S0_C2_RE = u_02_re * b_S0_C0_RE;
ub_S0_C2_RE = ub_S0_C2_RE - (u_02_im * b_S0_C0_IM);
ub_S0_C2_IM = u_02_re * b_S0_C0_IM;
ub_S0_C2_IM = ((u_02_im * b_S0_C0_RE) + ub_S0_C2_IM);
ub_S0_C2_RE = ((u_12_re * b_S0_C1_RE) + ub_S0_C2_RE);
ub_S0_C2_RE = ub_S0_C2_RE - (u_12_im * b_S0_C1_IM);
ub_S0_C2_IM = ((u_12_re * b_S0_C1_IM) + ub_S0_C2_IM);
ub_S0_C2_IM = ((u_12_im * b_S0_C1_RE) + ub_S0_C2_IM);
ub_S0_C2_RE = ((u_22_re * b_S0_C2_RE) + ub_S0_C2_RE);
ub_S0_C2_RE = ub_S0_C2_RE - (u_22_im * b_S0_C2_IM);
ub_S0_C2_IM = ((u_22_re * b_S0_C2_IM) + ub_S0_C2_IM);
ub_S0_C2_IM = ((u_22_im * b_S0_C2_RE) + ub_S0_C2_IM);
out_S0_C0_RE = out_S0_C0_RE - (beta_vec * ub_S0_C0_RE);
out_S0_C0_IM = out_S0_C0_IM - (beta_vec * ub_S0_C0_IM);
out_S0_C1_RE = out_S0_C1_RE - (beta_vec * ub_S0_C1_RE);
out_S0_C1_IM = out_S0_C1_IM - (beta_vec * ub_S0_C1_IM);
out_S0_C2_RE = out_S0_C2_RE - (beta_vec * ub_S0_C2_RE);
out_S0_C2_IM = out_S0_C2_IM - (beta_vec * ub_S0_C2_IM);
out_S3_C0_RE = out_S3_C0_RE - (beta_vec * ub_S0_C0_RE);
out_S3_C0_IM = out_S3_C0_IM - (beta_vec * ub_S0_C0_IM);
out_S3_C1_RE = out_S3_C1_RE - (beta_vec * ub_S0_C1_RE);
out_S3_C1_IM = out_S3_C1_IM - (beta_vec * ub_S0_C1_IM);
out_S3_C2_RE = out_S3_C2_RE - (beta_vec * ub_S0_C2_RE);
out_S3_C2_IM = out_S3_C2_IM - (beta_vec * ub_S0_C2_IM);

psi_S0_RE = *(((*xyBase)[0][1][0] + yfOffs[0]));


psi_S0_IM = *(((*xyBase)[0][1][1] + yfOffs[0]));


psi_S1_RE = *(((*xyBase)[0][2][0] + yfOffs[0]));


psi_S1_IM = *(((*xyBase)[0][2][1] + yfOffs[0]));

b_S1_C0_RE = (psi_S0_RE - psi_S1_RE);
b_S1_C0_IM = (psi_S0_IM - psi_S1_IM);

psi_S0_RE = *(((*xyBase)[1][1][0] + yfOffs[0]));


psi_S0_IM = *(((*xyBase)[1][1][1] + yfOffs[0]));


psi_S1_RE = *(((*xyBase)[1][2][0] + yfOffs[0]));


psi_S1_IM = *(((*xyBase)[1][2][1] + yfOffs[0]));

b_S1_C1_RE = (psi_S0_RE - psi_S1_RE);
b_S1_C1_IM = (psi_S0_IM - psi_S1_IM);

psi_S0_RE = *(((*xyBase)[2][1][0] + yfOffs[0]));


psi_S0_IM = *(((*xyBase)[2][1][1] + yfOffs[0]));


psi_S1_RE = *(((*xyBase)[2][2][0] + yfOffs[0]));


psi_S1_IM = *(((*xyBase)[2][2][1] + yfOffs[0]));

b_S1_C2_RE = (psi_S0_RE - psi_S1_RE);
b_S1_C2_IM = (psi_S0_IM - psi_S1_IM);
ub_S1_C0_RE = u_00_re * b_S1_C0_RE;
ub_S1_C0_RE = ub_S1_C0_RE - (u_00_im * b_S1_C0_IM);
ub_S1_C0_IM = u_00_re * b_S1_C0_IM;
ub_S1_C0_IM = ((u_00_im * b_S1_C0_RE) + ub_S1_C0_IM);
ub_S1_C0_RE = ((u_10_re * b_S1_C1_RE) + ub_S1_C0_RE);
ub_S1_C0_RE = ub_S1_C0_RE - (u_10_im * b_S1_C1_IM);
ub_S1_C0_IM = ((u_10_re * b_S1_C1_IM) + ub_S1_C0_IM);
ub_S1_C0_IM = ((u_10_im * b_S1_C1_RE) + ub_S1_C0_IM);
ub_S1_C0_RE = ((u_20_re * b_S1_C2_RE) + ub_S1_C0_RE);
ub_S1_C0_RE = ub_S1_C0_RE - (u_20_im * b_S1_C2_IM);
ub_S1_C0_IM = ((u_20_re * b_S1_C2_IM) + ub_S1_C0_IM);
ub_S1_C0_IM = ((u_20_im * b_S1_C2_RE) + ub_S1_C0_IM);
ub_S1_C1_RE = u_01_re * b_S1_C0_RE;
ub_S1_C1_RE = ub_S1_C1_RE - (u_01_im * b_S1_C0_IM);
ub_S1_C1_IM = u_01_re * b_S1_C0_IM;
ub_S1_C1_IM = ((u_01_im * b_S1_C0_RE) + ub_S1_C1_IM);
ub_S1_C1_RE = ((u_11_re * b_S1_C1_RE) + ub_S1_C1_RE);
ub_S1_C1_RE = ub_S1_C1_RE - (u_11_im * b_S1_C1_IM);
ub_S1_C1_IM = ((u_11_re * b_S1_C1_IM) + ub_S1_C1_IM);
ub_S1_C1_IM = ((u_11_im * b_S1_C1_RE) + ub_S1_C1_IM);
ub_S1_C1_RE = ((u_21_re * b_S1_C2_RE) + ub_S1_C1_RE);
ub_S1_C1_RE = ub_S1_C1_RE - (u_21_im * b_S1_C2_IM);
ub_S1_C1_IM = ((u_21_re * b_S1_C2_IM) + ub_S1_C1_IM);
ub_S1_C1_IM = ((u_21_im * b_S1_C2_RE) + ub_S1_C1_IM);
ub_S1_C2_RE = u_02_re * b_S1_C0_RE;
ub_S1_C2_RE = ub_S1_C2_RE - (u_02_im * b_S1_C0_IM);
ub_S1_C2_IM = u_02_re * b_S1_C0_IM;
ub_S1_C2_IM = ((u_02_im * b_S1_C0_RE) + ub_S1_C2_IM);
ub_S1_C2_RE = ((u_12_re * b_S1_C1_RE) + ub_S1_C2_RE);
ub_S1_C2_RE = ub_S1_C2_RE - (u_12_im * b_S1_C1_IM);
ub_S1_C2_IM = ((u_12_re * b_S1_C1_IM) + ub_S1_C2_IM);
ub_S1_C2_IM = ((u_12_im * b_S1_C1_RE) + ub_S1_C2_IM);
ub_S1_C2_RE = ((u_22_re * b_S1_C2_RE) + ub_S1_C2_RE);
ub_S1_C2_RE = ub_S1_C2_RE - (u_22_im * b_S1_C2_IM);
ub_S1_C2_IM = ((u_22_re * b_S1_C2_IM) + ub_S1_C2_IM);
ub_S1_C2_IM = ((u_22_im * b_S1_C2_RE) + ub_S1_C2_IM);
out_S1_C0_RE = out_S1_C0_RE - (beta_vec * ub_S1_C0_RE);
out_S1_C0_IM = out_S1_C0_IM - (beta_vec * ub_S1_C0_IM);
out_S1_C1_RE = out_S1_C1_RE - (beta_vec * ub_S1_C1_RE);
out_S1_C1_IM = out_S1_C1_IM - (beta_vec * ub_S1_C1_IM);
out_S1_C2_RE = out_S1_C2_RE - (beta_vec * ub_S1_C2_RE);
out_S1_C2_IM = out_S1_C2_IM - (beta_vec * ub_S1_C2_IM);
out_S2_C0_RE = ((beta_vec * ub_S1_C0_RE) + out_S2_C0_RE);
out_S2_C0_IM = ((beta_vec * ub_S1_C0_IM) + out_S2_C0_IM);
out_S2_C1_RE = ((beta_vec * ub_S1_C1_RE) + out_S2_C1_RE);
out_S2_C1_IM = ((beta_vec * ub_S1_C1_IM) + out_S2_C1_IM);
out_S2_C2_RE = ((beta_vec * ub_S1_C2_RE) + out_S2_C2_RE);
out_S2_C2_IM = ((beta_vec * ub_S1_C2_IM) + out_S2_C2_IM);
}
 if ( accumulate[4] ) { 
double beta_vec = 0.0;
beta_vec = (*(&coeff_s));


psi_S0_RE = *(((*zbBase)[0][0][0] + offs[0]));


psi_S0_IM = *(((*zbBase)[0][0][1] + offs[0]));


psi_S1_RE = *(((*zbBase)[0][2][0] + offs[0]));


psi_S1_IM = *(((*zbBase)[0][2][1] + offs[0]));

b_S0_C0_RE = (psi_S0_RE - psi_S1_IM);
b_S0_C0_IM = (psi_S0_IM + psi_S1_RE);

psi_S0_RE = *(((*zbBase)[1][0][0] + offs[0]));


psi_S0_IM = *(((*zbBase)[1][0][1] + offs[0]));


psi_S1_RE = *(((*zbBase)[1][2][0] + offs[0]));


psi_S1_IM = *(((*zbBase)[1][2][1] + offs[0]));

b_S0_C1_RE = (psi_S0_RE - psi_S1_IM);
b_S0_C1_IM = (psi_S0_IM + psi_S1_RE);

psi_S0_RE = *(((*zbBase)[2][0][0] + offs[0]));


psi_S0_IM = *(((*zbBase)[2][0][1] + offs[0]));


psi_S1_RE = *(((*zbBase)[2][2][0] + offs[0]));


psi_S1_IM = *(((*zbBase)[2][2][1] + offs[0]));

b_S0_C2_RE = (psi_S0_RE - psi_S1_IM);
b_S0_C2_IM = (psi_S0_IM + psi_S1_RE);
u_00_re = *((*gBase)[4][0][0][0]);

u_00_im = *((*gBase)[4][0][0][1]);

u_01_re = *((*gBase)[4][0][1][0]);

u_01_im = *((*gBase)[4][0][1][1]);

u_02_re = *((*gBase)[4][0][2][0]);

u_02_im = *((*gBase)[4][0][2][1]);

u_10_re = *((*gBase)[4][1][0][0]);

u_10_im = *((*gBase)[4][1][0][1]);

u_11_re = *((*gBase)[4][1][1][0]);

u_11_im = *((*gBase)[4][1][1][1]);

u_12_re = *((*gBase)[4][1][2][0]);

u_12_im = *((*gBase)[4][1][2][1]);

u_20_re = *((*gBase)[4][2][0][0]);

u_20_im = *((*gBase)[4][2][0][1]);

u_21_re = *((*gBase)[4][2][1][0]);

u_21_im = *((*gBase)[4][2][1][1]);

u_22_re = *((*gBase)[4][2][2][0]);

u_22_im = *((*gBase)[4][2][2][1]);

ub_S0_C0_RE = u_00_re * b_S0_C0_RE;
ub_S0_C0_RE = ((u_00_im * b_S0_C0_IM) + ub_S0_C0_RE);
ub_S0_C0_IM = u_00_re * b_S0_C0_IM;
ub_S0_C0_IM = ub_S0_C0_IM - (u_00_im * b_S0_C0_RE);
ub_S0_C0_RE = ((u_01_re * b_S0_C1_RE) + ub_S0_C0_RE);
ub_S0_C0_RE = ((u_01_im * b_S0_C1_IM) + ub_S0_C0_RE);
ub_S0_C0_IM = ((u_01_re * b_S0_C1_IM) + ub_S0_C0_IM);
ub_S0_C0_IM = ub_S0_C0_IM - (u_01_im * b_S0_C1_RE);
ub_S0_C0_RE = ((u_02_re * b_S0_C2_RE) + ub_S0_C0_RE);
ub_S0_C0_RE = ((u_02_im * b_S0_C2_IM) + ub_S0_C0_RE);
ub_S0_C0_IM = ((u_02_re * b_S0_C2_IM) + ub_S0_C0_IM);
ub_S0_C0_IM = ub_S0_C0_IM - (u_02_im * b_S0_C2_RE);
ub_S0_C1_RE = u_10_re * b_S0_C0_RE;
ub_S0_C1_RE = ((u_10_im * b_S0_C0_IM) + ub_S0_C1_RE);
ub_S0_C1_IM = u_10_re * b_S0_C0_IM;
ub_S0_C1_IM = ub_S0_C1_IM - (u_10_im * b_S0_C0_RE);
ub_S0_C1_RE = ((u_11_re * b_S0_C1_RE) + ub_S0_C1_RE);
ub_S0_C1_RE = ((u_11_im * b_S0_C1_IM) + ub_S0_C1_RE);
ub_S0_C1_IM = ((u_11_re * b_S0_C1_IM) + ub_S0_C1_IM);
ub_S0_C1_IM = ub_S0_C1_IM - (u_11_im * b_S0_C1_RE);
ub_S0_C1_RE = ((u_12_re * b_S0_C2_RE) + ub_S0_C1_RE);
ub_S0_C1_RE = ((u_12_im * b_S0_C2_IM) + ub_S0_C1_RE);
ub_S0_C1_IM = ((u_12_re * b_S0_C2_IM) + ub_S0_C1_IM);
ub_S0_C1_IM = ub_S0_C1_IM - (u_12_im * b_S0_C2_RE);
ub_S0_C2_RE = u_20_re * b_S0_C0_RE;
ub_S0_C2_RE = ((u_20_im * b_S0_C0_IM) + ub_S0_C2_RE);
ub_S0_C2_IM = u_20_re * b_S0_C0_IM;
ub_S0_C2_IM = ub_S0_C2_IM - (u_20_im * b_S0_C0_RE);
ub_S0_C2_RE = ((u_21_re * b_S0_C1_RE) + ub_S0_C2_RE);
ub_S0_C2_RE = ((u_21_im * b_S0_C1_IM) + ub_S0_C2_RE);
ub_S0_C2_IM = ((u_21_re * b_S0_C1_IM) + ub_S0_C2_IM);
ub_S0_C2_IM = ub_S0_C2_IM - (u_21_im * b_S0_C1_RE);
ub_S0_C2_RE = ((u_22_re * b_S0_C2_RE) + ub_S0_C2_RE);
ub_S0_C2_RE = ((u_22_im * b_S0_C2_IM) + ub_S0_C2_RE);
ub_S0_C2_IM = ((u_22_re * b_S0_C2_IM) + ub_S0_C2_IM);
ub_S0_C2_IM = ub_S0_C2_IM - (u_22_im * b_S0_C2_RE);
out_S0_C0_RE = out_S0_C0_RE - (beta_vec * ub_S0_C0_RE);
out_S0_C0_IM = out_S0_C0_IM - (beta_vec * ub_S0_C0_IM);
out_S0_C1_RE = out_S0_C1_RE - (beta_vec * ub_S0_C1_RE);
out_S0_C1_IM = out_S0_C1_IM - (beta_vec * ub_S0_C1_IM);
out_S0_C2_RE = out_S0_C2_RE - (beta_vec * ub_S0_C2_RE);
out_S0_C2_IM = out_S0_C2_IM - (beta_vec * ub_S0_C2_IM);
out_S2_C0_RE = out_S2_C0_RE - (beta_vec * ub_S0_C0_IM);
out_S2_C0_IM = ((beta_vec * ub_S0_C0_RE) + out_S2_C0_IM);
out_S2_C1_RE = out_S2_C1_RE - (beta_vec * ub_S0_C1_IM);
out_S2_C1_IM = ((beta_vec * ub_S0_C1_RE) + out_S2_C1_IM);
out_S2_C2_RE = out_S2_C2_RE - (beta_vec * ub_S0_C2_IM);
out_S2_C2_IM = ((beta_vec * ub_S0_C2_RE) + out_S2_C2_IM);

psi_S0_RE = *(((*zbBase)[0][1][0] + offs[0]));


psi_S0_IM = *(((*zbBase)[0][1][1] + offs[0]));


psi_S1_RE = *(((*zbBase)[0][3][0] + offs[0]));


psi_S1_IM = *(((*zbBase)[0][3][1] + offs[0]));

b_S1_C0_RE = (psi_S0_RE + psi_S1_IM);
b_S1_C0_IM = (psi_S0_IM - psi_S1_RE);

psi_S0_RE = *(((*zbBase)[1][1][0] + offs[0]));


psi_S0_IM = *(((*zbBase)[1][1][1] + offs[0]));


psi_S1_RE = *(((*zbBase)[1][3][0] + offs[0]));


psi_S1_IM = *(((*zbBase)[1][3][1] + offs[0]));

b_S1_C1_RE = (psi_S0_RE + psi_S1_IM);
b_S1_C1_IM = (psi_S0_IM - psi_S1_RE);

psi_S0_RE = *(((*zbBase)[2][1][0] + offs[0]));


psi_S0_IM = *(((*zbBase)[2][1][1] + offs[0]));


psi_S1_RE = *(((*zbBase)[2][3][0] + offs[0]));


psi_S1_IM = *(((*zbBase)[2][3][1] + offs[0]));

b_S1_C2_RE = (psi_S0_RE + psi_S1_IM);
b_S1_C2_IM = (psi_S0_IM - psi_S1_RE);
ub_S1_C0_RE = u_00_re * b_S1_C0_RE;
ub_S1_C0_RE = ((u_00_im * b_S1_C0_IM) + ub_S1_C0_RE);
ub_S1_C0_IM = u_00_re * b_S1_C0_IM;
ub_S1_C0_IM = ub_S1_C0_IM - (u_00_im * b_S1_C0_RE);
ub_S1_C0_RE = ((u_01_re * b_S1_C1_RE) + ub_S1_C0_RE);
ub_S1_C0_RE = ((u_01_im * b_S1_C1_IM) + ub_S1_C0_RE);
ub_S1_C0_IM = ((u_01_re * b_S1_C1_IM) + ub_S1_C0_IM);
ub_S1_C0_IM = ub_S1_C0_IM - (u_01_im * b_S1_C1_RE);
ub_S1_C0_RE = ((u_02_re * b_S1_C2_RE) + ub_S1_C0_RE);
ub_S1_C0_RE = ((u_02_im * b_S1_C2_IM) + ub_S1_C0_RE);
ub_S1_C0_IM = ((u_02_re * b_S1_C2_IM) + ub_S1_C0_IM);
ub_S1_C0_IM = ub_S1_C0_IM - (u_02_im * b_S1_C2_RE);
ub_S1_C1_RE = u_10_re * b_S1_C0_RE;
ub_S1_C1_RE = ((u_10_im * b_S1_C0_IM) + ub_S1_C1_RE);
ub_S1_C1_IM = u_10_re * b_S1_C0_IM;
ub_S1_C1_IM = ub_S1_C1_IM - (u_10_im * b_S1_C0_RE);
ub_S1_C1_RE = ((u_11_re * b_S1_C1_RE) + ub_S1_C1_RE);
ub_S1_C1_RE = ((u_11_im * b_S1_C1_IM) + ub_S1_C1_RE);
ub_S1_C1_IM = ((u_11_re * b_S1_C1_IM) + ub_S1_C1_IM);
ub_S1_C1_IM = ub_S1_C1_IM - (u_11_im * b_S1_C1_RE);
ub_S1_C1_RE = ((u_12_re * b_S1_C2_RE) + ub_S1_C1_RE);
ub_S1_C1_RE = ((u_12_im * b_S1_C2_IM) + ub_S1_C1_RE);
ub_S1_C1_IM = ((u_12_re * b_S1_C2_IM) + ub_S1_C1_IM);
ub_S1_C1_IM = ub_S1_C1_IM - (u_12_im * b_S1_C2_RE);
ub_S1_C2_RE = u_20_re * b_S1_C0_RE;
ub_S1_C2_RE = ((u_20_im * b_S1_C0_IM) + ub_S1_C2_RE);
ub_S1_C2_IM = u_20_re * b_S1_C0_IM;
ub_S1_C2_IM = ub_S1_C2_IM - (u_20_im * b_S1_C0_RE);
ub_S1_C2_RE = ((u_21_re * b_S1_C1_RE) + ub_S1_C2_RE);
ub_S1_C2_RE = ((u_21_im * b_S1_C1_IM) + ub_S1_C2_RE);
ub_S1_C2_IM = ((u_21_re * b_S1_C1_IM) + ub_S1_C2_IM);
ub_S1_C2_IM = ub_S1_C2_IM - (u_21_im * b_S1_C1_RE);
ub_S1_C2_RE = ((u_22_re * b_S1_C2_RE) + ub_S1_C2_RE);
ub_S1_C2_RE = ((u_22_im * b_S1_C2_IM) + ub_S1_C2_RE);
ub_S1_C2_IM = ((u_22_re * b_S1_C2_IM) + ub_S1_C2_IM);
ub_S1_C2_IM = ub_S1_C2_IM - (u_22_im * b_S1_C2_RE);
out_S1_C0_RE = out_S1_C0_RE - (beta_vec * ub_S1_C0_RE);
out_S1_C0_IM = out_S1_C0_IM - (beta_vec * ub_S1_C0_IM);
out_S1_C1_RE = out_S1_C1_RE - (beta_vec * ub_S1_C1_RE);
out_S1_C1_IM = out_S1_C1_IM - (beta_vec * ub_S1_C1_IM);
out_S1_C2_RE = out_S1_C2_RE - (beta_vec * ub_S1_C2_RE);
out_S1_C2_IM = out_S1_C2_IM - (beta_vec * ub_S1_C2_IM);
out_S3_C0_RE = ((beta_vec * ub_S1_C0_IM) + out_S3_C0_RE);
out_S3_C0_IM = out_S3_C0_IM - (beta_vec * ub_S1_C0_RE);
out_S3_C1_RE = ((beta_vec * ub_S1_C1_IM) + out_S3_C1_RE);
out_S3_C1_IM = out_S3_C1_IM - (beta_vec * ub_S1_C1_RE);
out_S3_C2_RE = ((beta_vec * ub_S1_C2_IM) + out_S3_C2_RE);
out_S3_C2_IM = out_S3_C2_IM - (beta_vec * ub_S1_C2_RE);
}
 if ( accumulate[5] ) { 
double beta_vec = 0.0;
beta_vec = (*(&coeff_s));


psi_S0_RE = *(((*zfBase)[0][0][0] + offs[0]));


psi_S0_IM = *(((*zfBase)[0][0][1] + offs[0]));


psi_S1_RE = *(((*zfBase)[0][2][0] + offs[0]));


psi_S1_IM = *(((*zfBase)[0][2][1] + offs[0]));

b_S0_C0_RE = (psi_S0_RE + psi_S1_IM);
b_S0_C0_IM = (psi_S0_IM - psi_S1_RE);

psi_S0_RE = *(((*zfBase)[1][0][0] + offs[0]));


psi_S0_IM = *(((*zfBase)[1][0][1] + offs[0]));


psi_S1_RE = *(((*zfBase)[1][2][0] + offs[0]));


psi_S1_IM = *(((*zfBase)[1][2][1] + offs[0]));

b_S0_C1_RE = (psi_S0_RE + psi_S1_IM);
b_S0_C1_IM = (psi_S0_IM - psi_S1_RE);

psi_S0_RE = *(((*zfBase)[2][0][0] + offs[0]));


psi_S0_IM = *(((*zfBase)[2][0][1] + offs[0]));


psi_S1_RE = *(((*zfBase)[2][2][0] + offs[0]));


psi_S1_IM = *(((*zfBase)[2][2][1] + offs[0]));

b_S0_C2_RE = (psi_S0_RE + psi_S1_IM);
b_S0_C2_IM = (psi_S0_IM - psi_S1_RE);
u_00_re = *((*gBase)[5][0][0][0]);

u_00_im = *((*gBase)[5][0][0][1]);

u_01_re = *((*gBase)[5][0][1][0]);

u_01_im = *((*gBase)[5][0][1][1]);

u_02_re = *((*gBase)[5][0][2][0]);

u_02_im = *((*gBase)[5][0][2][1]);

u_10_re = *((*gBase)[5][1][0][0]);

u_10_im = *((*gBase)[5][1][0][1]);

u_11_re = *((*gBase)[5][1][1][0]);

u_11_im = *((*gBase)[5][1][1][1]);

u_12_re = *((*gBase)[5][1][2][0]);

u_12_im = *((*gBase)[5][1][2][1]);

u_20_re = *((*gBase)[5][2][0][0]);

u_20_im = *((*gBase)[5][2][0][1]);

u_21_re = *((*gBase)[5][2][1][0]);

u_21_im = *((*gBase)[5][2][1][1]);

u_22_re = *((*gBase)[5][2][2][0]);

u_22_im = *((*gBase)[5][2][2][1]);

ub_S0_C0_RE = u_00_re * b_S0_C0_RE;
ub_S0_C0_RE = ub_S0_C0_RE - (u_00_im * b_S0_C0_IM);
ub_S0_C0_IM = u_00_re * b_S0_C0_IM;
ub_S0_C0_IM = ((u_00_im * b_S0_C0_RE) + ub_S0_C0_IM);
ub_S0_C0_RE = ((u_10_re * b_S0_C1_RE) + ub_S0_C0_RE);
ub_S0_C0_RE = ub_S0_C0_RE - (u_10_im * b_S0_C1_IM);
ub_S0_C0_IM = ((u_10_re * b_S0_C1_IM) + ub_S0_C0_IM);
ub_S0_C0_IM = ((u_10_im * b_S0_C1_RE) + ub_S0_C0_IM);
ub_S0_C0_RE = ((u_20_re * b_S0_C2_RE) + ub_S0_C0_RE);
ub_S0_C0_RE = ub_S0_C0_RE - (u_20_im * b_S0_C2_IM);
ub_S0_C0_IM = ((u_20_re * b_S0_C2_IM) + ub_S0_C0_IM);
ub_S0_C0_IM = ((u_20_im * b_S0_C2_RE) + ub_S0_C0_IM);
ub_S0_C1_RE = u_01_re * b_S0_C0_RE;
ub_S0_C1_RE = ub_S0_C1_RE - (u_01_im * b_S0_C0_IM);
ub_S0_C1_IM = u_01_re * b_S0_C0_IM;
ub_S0_C1_IM = ((u_01_im * b_S0_C0_RE) + ub_S0_C1_IM);
ub_S0_C1_RE = ((u_11_re * b_S0_C1_RE) + ub_S0_C1_RE);
ub_S0_C1_RE = ub_S0_C1_RE - (u_11_im * b_S0_C1_IM);
ub_S0_C1_IM = ((u_11_re * b_S0_C1_IM) + ub_S0_C1_IM);
ub_S0_C1_IM = ((u_11_im * b_S0_C1_RE) + ub_S0_C1_IM);
ub_S0_C1_RE = ((u_21_re * b_S0_C2_RE) + ub_S0_C1_RE);
ub_S0_C1_RE = ub_S0_C1_RE - (u_21_im * b_S0_C2_IM);
ub_S0_C1_IM = ((u_21_re * b_S0_C2_IM) + ub_S0_C1_IM);
ub_S0_C1_IM = ((u_21_im * b_S0_C2_RE) + ub_S0_C1_IM);
ub_S0_C2_RE = u_02_re * b_S0_C0_RE;
ub_S0_C2_RE = ub_S0_C2_RE - (u_02_im * b_S0_C0_IM);
ub_S0_C2_IM = u_02_re * b_S0_C0_IM;
ub_S0_C2_IM = ((u_02_im * b_S0_C0_RE) + ub_S0_C2_IM);
ub_S0_C2_RE = ((u_12_re * b_S0_C1_RE) + ub_S0_C2_RE);
ub_S0_C2_RE = ub_S0_C2_RE - (u_12_im * b_S0_C1_IM);
ub_S0_C2_IM = ((u_12_re * b_S0_C1_IM) + ub_S0_C2_IM);
ub_S0_C2_IM = ((u_12_im * b_S0_C1_RE) + ub_S0_C2_IM);
ub_S0_C2_RE = ((u_22_re * b_S0_C2_RE) + ub_S0_C2_RE);
ub_S0_C2_RE = ub_S0_C2_RE - (u_22_im * b_S0_C2_IM);
ub_S0_C2_IM = ((u_22_re * b_S0_C2_IM) + ub_S0_C2_IM);
ub_S0_C2_IM = ((u_22_im * b_S0_C2_RE) + ub_S0_C2_IM);
out_S0_C0_RE = out_S0_C0_RE - (beta_vec * ub_S0_C0_RE);
out_S0_C0_IM = out_S0_C0_IM - (beta_vec * ub_S0_C0_IM);
out_S0_C1_RE = out_S0_C1_RE - (beta_vec * ub_S0_C1_RE);
out_S0_C1_IM = out_S0_C1_IM - (beta_vec * ub_S0_C1_IM);
out_S0_C2_RE = out_S0_C2_RE - (beta_vec * ub_S0_C2_RE);
out_S0_C2_IM = out_S0_C2_IM - (beta_vec * ub_S0_C2_IM);
out_S2_C0_RE = ((beta_vec * ub_S0_C0_IM) + out_S2_C0_RE);
out_S2_C0_IM = out_S2_C0_IM - (beta_vec * ub_S0_C0_RE);
out_S2_C1_RE = ((beta_vec * ub_S0_C1_IM) + out_S2_C1_RE);
out_S2_C1_IM = out_S2_C1_IM - (beta_vec * ub_S0_C1_RE);
out_S2_C2_RE = ((beta_vec * ub_S0_C2_IM) + out_S2_C2_RE);
out_S2_C2_IM = out_S2_C2_IM - (beta_vec * ub_S0_C2_RE);

psi_S0_RE = *(((*zfBase)[0][1][0] + offs[0]));


psi_S0_IM = *(((*zfBase)[0][1][1] + offs[0]));


psi_S1_RE = *(((*zfBase)[0][3][0] + offs[0]));


psi_S1_IM = *(((*zfBase)[0][3][1] + offs[0]));

b_S1_C0_RE = (psi_S0_RE - psi_S1_IM);
b_S1_C0_IM = (psi_S0_IM + psi_S1_RE);

psi_S0_RE = *(((*zfBase)[1][1][0] + offs[0]));


psi_S0_IM = *(((*zfBase)[1][1][1] + offs[0]));


psi_S1_RE = *(((*zfBase)[1][3][0] + offs[0]));


psi_S1_IM = *(((*zfBase)[1][3][1] + offs[0]));

b_S1_C1_RE = (psi_S0_RE - psi_S1_IM);
b_S1_C1_IM = (psi_S0_IM + psi_S1_RE);

psi_S0_RE = *(((*zfBase)[2][1][0] + offs[0]));


psi_S0_IM = *(((*zfBase)[2][1][1] + offs[0]));


psi_S1_RE = *(((*zfBase)[2][3][0] + offs[0]));


psi_S1_IM = *(((*zfBase)[2][3][1] + offs[0]));

b_S1_C2_RE = (psi_S0_RE - psi_S1_IM);
b_S1_C2_IM = (psi_S0_IM + psi_S1_RE);
ub_S1_C0_RE = u_00_re * b_S1_C0_RE;
ub_S1_C0_RE = ub_S1_C0_RE - (u_00_im * b_S1_C0_IM);
ub_S1_C0_IM = u_00_re * b_S1_C0_IM;
ub_S1_C0_IM = ((u_00_im * b_S1_C0_RE) + ub_S1_C0_IM);
ub_S1_C0_RE = ((u_10_re * b_S1_C1_RE) + ub_S1_C0_RE);
ub_S1_C0_RE = ub_S1_C0_RE - (u_10_im * b_S1_C1_IM);
ub_S1_C0_IM = ((u_10_re * b_S1_C1_IM) + ub_S1_C0_IM);
ub_S1_C0_IM = ((u_10_im * b_S1_C1_RE) + ub_S1_C0_IM);
ub_S1_C0_RE = ((u_20_re * b_S1_C2_RE) + ub_S1_C0_RE);
ub_S1_C0_RE = ub_S1_C0_RE - (u_20_im * b_S1_C2_IM);
ub_S1_C0_IM = ((u_20_re * b_S1_C2_IM) + ub_S1_C0_IM);
ub_S1_C0_IM = ((u_20_im * b_S1_C2_RE) + ub_S1_C0_IM);
ub_S1_C1_RE = u_01_re * b_S1_C0_RE;
ub_S1_C1_RE = ub_S1_C1_RE - (u_01_im * b_S1_C0_IM);
ub_S1_C1_IM = u_01_re * b_S1_C0_IM;
ub_S1_C1_IM = ((u_01_im * b_S1_C0_RE) + ub_S1_C1_IM);
ub_S1_C1_RE = ((u_11_re * b_S1_C1_RE) + ub_S1_C1_RE);
ub_S1_C1_RE = ub_S1_C1_RE - (u_11_im * b_S1_C1_IM);
ub_S1_C1_IM = ((u_11_re * b_S1_C1_IM) + ub_S1_C1_IM);
ub_S1_C1_IM = ((u_11_im * b_S1_C1_RE) + ub_S1_C1_IM);
ub_S1_C1_RE = ((u_21_re * b_S1_C2_RE) + ub_S1_C1_RE);
ub_S1_C1_RE = ub_S1_C1_RE - (u_21_im * b_S1_C2_IM);
ub_S1_C1_IM = ((u_21_re * b_S1_C2_IM) + ub_S1_C1_IM);
ub_S1_C1_IM = ((u_21_im * b_S1_C2_RE) + ub_S1_C1_IM);
ub_S1_C2_RE = u_02_re * b_S1_C0_RE;
ub_S1_C2_RE = ub_S1_C2_RE - (u_02_im * b_S1_C0_IM);
ub_S1_C2_IM = u_02_re * b_S1_C0_IM;
ub_S1_C2_IM = ((u_02_im * b_S1_C0_RE) + ub_S1_C2_IM);
ub_S1_C2_RE = ((u_12_re * b_S1_C1_RE) + ub_S1_C2_RE);
ub_S1_C2_RE = ub_S1_C2_RE - (u_12_im * b_S1_C1_IM);
ub_S1_C2_IM = ((u_12_re * b_S1_C1_IM) + ub_S1_C2_IM);
ub_S1_C2_IM = ((u_12_im * b_S1_C1_RE) + ub_S1_C2_IM);
ub_S1_C2_RE = ((u_22_re * b_S1_C2_RE) + ub_S1_C2_RE);
ub_S1_C2_RE = ub_S1_C2_RE - (u_22_im * b_S1_C2_IM);
ub_S1_C2_IM = ((u_22_re * b_S1_C2_IM) + ub_S1_C2_IM);
ub_S1_C2_IM = ((u_22_im * b_S1_C2_RE) + ub_S1_C2_IM);
out_S1_C0_RE = out_S1_C0_RE - (beta_vec * ub_S1_C0_RE);
out_S1_C0_IM = out_S1_C0_IM - (beta_vec * ub_S1_C0_IM);
out_S1_C1_RE = out_S1_C1_RE - (beta_vec * ub_S1_C1_RE);
out_S1_C1_IM = out_S1_C1_IM - (beta_vec * ub_S1_C1_IM);
out_S1_C2_RE = out_S1_C2_RE - (beta_vec * ub_S1_C2_RE);
out_S1_C2_IM = out_S1_C2_IM - (beta_vec * ub_S1_C2_IM);
out_S3_C0_RE = out_S3_C0_RE - (beta_vec * ub_S1_C0_IM);
out_S3_C0_IM = ((beta_vec * ub_S1_C0_RE) + out_S3_C0_IM);
out_S3_C1_RE = out_S3_C1_RE - (beta_vec * ub_S1_C1_IM);
out_S3_C1_IM = ((beta_vec * ub_S1_C1_RE) + out_S3_C1_IM);
out_S3_C2_RE = out_S3_C2_RE - (beta_vec * ub_S1_C2_IM);
out_S3_C2_IM = ((beta_vec * ub_S1_C2_RE) + out_S3_C2_IM);
}
 if ( accumulate[6] ) { 
double beta_vec = 0.0;
beta_vec = (*(&coeff_t_b));


psi_S0_RE = *(((*tbBase)[0][0][0] + offs[0]));


psi_S0_IM = *(((*tbBase)[0][0][1] + offs[0]));


psi_S1_RE = *(((*tbBase)[0][2][0] + offs[0]));


psi_S1_IM = *(((*tbBase)[0][2][1] + offs[0]));

b_S0_C0_RE = (psi_S0_RE + psi_S1_RE);
b_S0_C0_IM = (psi_S0_IM + psi_S1_IM);

psi_S0_RE = *(((*tbBase)[1][0][0] + offs[0]));


psi_S0_IM = *(((*tbBase)[1][0][1] + offs[0]));


psi_S1_RE = *(((*tbBase)[1][2][0] + offs[0]));


psi_S1_IM = *(((*tbBase)[1][2][1] + offs[0]));

b_S0_C1_RE = (psi_S0_RE + psi_S1_RE);
b_S0_C1_IM = (psi_S0_IM + psi_S1_IM);

psi_S0_RE = *(((*tbBase)[2][0][0] + offs[0]));


psi_S0_IM = *(((*tbBase)[2][0][1] + offs[0]));


psi_S1_RE = *(((*tbBase)[2][2][0] + offs[0]));


psi_S1_IM = *(((*tbBase)[2][2][1] + offs[0]));

b_S0_C2_RE = (psi_S0_RE + psi_S1_RE);
b_S0_C2_IM = (psi_S0_IM + psi_S1_IM);
u_00_re = *((*gBase)[6][0][0][0]);

u_00_im = *((*gBase)[6][0][0][1]);

u_01_re = *((*gBase)[6][0][1][0]);

u_01_im = *((*gBase)[6][0][1][1]);

u_02_re = *((*gBase)[6][0][2][0]);

u_02_im = *((*gBase)[6][0][2][1]);

u_10_re = *((*gBase)[6][1][0][0]);

u_10_im = *((*gBase)[6][1][0][1]);

u_11_re = *((*gBase)[6][1][1][0]);

u_11_im = *((*gBase)[6][1][1][1]);

u_12_re = *((*gBase)[6][1][2][0]);

u_12_im = *((*gBase)[6][1][2][1]);

u_20_re = *((*gBase)[6][2][0][0]);

u_20_im = *((*gBase)[6][2][0][1]);

u_21_re = *((*gBase)[6][2][1][0]);

u_21_im = *((*gBase)[6][2][1][1]);

u_22_re = *((*gBase)[6][2][2][0]);

u_22_im = *((*gBase)[6][2][2][1]);

ub_S0_C0_RE = u_00_re * b_S0_C0_RE;
ub_S0_C0_RE = ((u_00_im * b_S0_C0_IM) + ub_S0_C0_RE);
ub_S0_C0_IM = u_00_re * b_S0_C0_IM;
ub_S0_C0_IM = ub_S0_C0_IM - (u_00_im * b_S0_C0_RE);
ub_S0_C0_RE = ((u_01_re * b_S0_C1_RE) + ub_S0_C0_RE);
ub_S0_C0_RE = ((u_01_im * b_S0_C1_IM) + ub_S0_C0_RE);
ub_S0_C0_IM = ((u_01_re * b_S0_C1_IM) + ub_S0_C0_IM);
ub_S0_C0_IM = ub_S0_C0_IM - (u_01_im * b_S0_C1_RE);
ub_S0_C0_RE = ((u_02_re * b_S0_C2_RE) + ub_S0_C0_RE);
ub_S0_C0_RE = ((u_02_im * b_S0_C2_IM) + ub_S0_C0_RE);
ub_S0_C0_IM = ((u_02_re * b_S0_C2_IM) + ub_S0_C0_IM);
ub_S0_C0_IM = ub_S0_C0_IM - (u_02_im * b_S0_C2_RE);
ub_S0_C1_RE = u_10_re * b_S0_C0_RE;
ub_S0_C1_RE = ((u_10_im * b_S0_C0_IM) + ub_S0_C1_RE);
ub_S0_C1_IM = u_10_re * b_S0_C0_IM;
ub_S0_C1_IM = ub_S0_C1_IM - (u_10_im * b_S0_C0_RE);
ub_S0_C1_RE = ((u_11_re * b_S0_C1_RE) + ub_S0_C1_RE);
ub_S0_C1_RE = ((u_11_im * b_S0_C1_IM) + ub_S0_C1_RE);
ub_S0_C1_IM = ((u_11_re * b_S0_C1_IM) + ub_S0_C1_IM);
ub_S0_C1_IM = ub_S0_C1_IM - (u_11_im * b_S0_C1_RE);
ub_S0_C1_RE = ((u_12_re * b_S0_C2_RE) + ub_S0_C1_RE);
ub_S0_C1_RE = ((u_12_im * b_S0_C2_IM) + ub_S0_C1_RE);
ub_S0_C1_IM = ((u_12_re * b_S0_C2_IM) + ub_S0_C1_IM);
ub_S0_C1_IM = ub_S0_C1_IM - (u_12_im * b_S0_C2_RE);
ub_S0_C2_RE = u_20_re * b_S0_C0_RE;
ub_S0_C2_RE = ((u_20_im * b_S0_C0_IM) + ub_S0_C2_RE);
ub_S0_C2_IM = u_20_re * b_S0_C0_IM;
ub_S0_C2_IM = ub_S0_C2_IM - (u_20_im * b_S0_C0_RE);
ub_S0_C2_RE = ((u_21_re * b_S0_C1_RE) + ub_S0_C2_RE);
ub_S0_C2_RE = ((u_21_im * b_S0_C1_IM) + ub_S0_C2_RE);
ub_S0_C2_IM = ((u_21_re * b_S0_C1_IM) + ub_S0_C2_IM);
ub_S0_C2_IM = ub_S0_C2_IM - (u_21_im * b_S0_C1_RE);
ub_S0_C2_RE = ((u_22_re * b_S0_C2_RE) + ub_S0_C2_RE);
ub_S0_C2_RE = ((u_22_im * b_S0_C2_IM) + ub_S0_C2_RE);
ub_S0_C2_IM = ((u_22_re * b_S0_C2_IM) + ub_S0_C2_IM);
ub_S0_C2_IM = ub_S0_C2_IM - (u_22_im * b_S0_C2_RE);
out_S0_C0_RE = out_S0_C0_RE - (beta_vec * ub_S0_C0_RE);
out_S0_C0_IM = out_S0_C0_IM - (beta_vec * ub_S0_C0_IM);
out_S0_C1_RE = out_S0_C1_RE - (beta_vec * ub_S0_C1_RE);
out_S0_C1_IM = out_S0_C1_IM - (beta_vec * ub_S0_C1_IM);
out_S0_C2_RE = out_S0_C2_RE - (beta_vec * ub_S0_C2_RE);
out_S0_C2_IM = out_S0_C2_IM - (beta_vec * ub_S0_C2_IM);
out_S2_C0_RE = out_S2_C0_RE - (beta_vec * ub_S0_C0_RE);
out_S2_C0_IM = out_S2_C0_IM - (beta_vec * ub_S0_C0_IM);
out_S2_C1_RE = out_S2_C1_RE - (beta_vec * ub_S0_C1_RE);
out_S2_C1_IM = out_S2_C1_IM - (beta_vec * ub_S0_C1_IM);
out_S2_C2_RE = out_S2_C2_RE - (beta_vec * ub_S0_C2_RE);
out_S2_C2_IM = out_S2_C2_IM - (beta_vec * ub_S0_C2_IM);

psi_S0_RE = *(((*tbBase)[0][1][0] + offs[0]));


psi_S0_IM = *(((*tbBase)[0][1][1] + offs[0]));


psi_S1_RE = *(((*tbBase)[0][3][0] + offs[0]));


psi_S1_IM = *(((*tbBase)[0][3][1] + offs[0]));

b_S1_C0_RE = (psi_S0_RE + psi_S1_RE);
b_S1_C0_IM = (psi_S0_IM + psi_S1_IM);

psi_S0_RE = *(((*tbBase)[1][1][0] + offs[0]));


psi_S0_IM = *(((*tbBase)[1][1][1] + offs[0]));


psi_S1_RE = *(((*tbBase)[1][3][0] + offs[0]));


psi_S1_IM = *(((*tbBase)[1][3][1] + offs[0]));

b_S1_C1_RE = (psi_S0_RE + psi_S1_RE);
b_S1_C1_IM = (psi_S0_IM + psi_S1_IM);

psi_S0_RE = *(((*tbBase)[2][1][0] + offs[0]));


psi_S0_IM = *(((*tbBase)[2][1][1] + offs[0]));


psi_S1_RE = *(((*tbBase)[2][3][0] + offs[0]));


psi_S1_IM = *(((*tbBase)[2][3][1] + offs[0]));

b_S1_C2_RE = (psi_S0_RE + psi_S1_RE);
b_S1_C2_IM = (psi_S0_IM + psi_S1_IM);
ub_S1_C0_RE = u_00_re * b_S1_C0_RE;
ub_S1_C0_RE = ((u_00_im * b_S1_C0_IM) + ub_S1_C0_RE);
ub_S1_C0_IM = u_00_re * b_S1_C0_IM;
ub_S1_C0_IM = ub_S1_C0_IM - (u_00_im * b_S1_C0_RE);
ub_S1_C0_RE = ((u_01_re * b_S1_C1_RE) + ub_S1_C0_RE);
ub_S1_C0_RE = ((u_01_im * b_S1_C1_IM) + ub_S1_C0_RE);
ub_S1_C0_IM = ((u_01_re * b_S1_C1_IM) + ub_S1_C0_IM);
ub_S1_C0_IM = ub_S1_C0_IM - (u_01_im * b_S1_C1_RE);
ub_S1_C0_RE = ((u_02_re * b_S1_C2_RE) + ub_S1_C0_RE);
ub_S1_C0_RE = ((u_02_im * b_S1_C2_IM) + ub_S1_C0_RE);
ub_S1_C0_IM = ((u_02_re * b_S1_C2_IM) + ub_S1_C0_IM);
ub_S1_C0_IM = ub_S1_C0_IM - (u_02_im * b_S1_C2_RE);
ub_S1_C1_RE = u_10_re * b_S1_C0_RE;
ub_S1_C1_RE = ((u_10_im * b_S1_C0_IM) + ub_S1_C1_RE);
ub_S1_C1_IM = u_10_re * b_S1_C0_IM;
ub_S1_C1_IM = ub_S1_C1_IM - (u_10_im * b_S1_C0_RE);
ub_S1_C1_RE = ((u_11_re * b_S1_C1_RE) + ub_S1_C1_RE);
ub_S1_C1_RE = ((u_11_im * b_S1_C1_IM) + ub_S1_C1_RE);
ub_S1_C1_IM = ((u_11_re * b_S1_C1_IM) + ub_S1_C1_IM);
ub_S1_C1_IM = ub_S1_C1_IM - (u_11_im * b_S1_C1_RE);
ub_S1_C1_RE = ((u_12_re * b_S1_C2_RE) + ub_S1_C1_RE);
ub_S1_C1_RE = ((u_12_im * b_S1_C2_IM) + ub_S1_C1_RE);
ub_S1_C1_IM = ((u_12_re * b_S1_C2_IM) + ub_S1_C1_IM);
ub_S1_C1_IM = ub_S1_C1_IM - (u_12_im * b_S1_C2_RE);
ub_S1_C2_RE = u_20_re * b_S1_C0_RE;
ub_S1_C2_RE = ((u_20_im * b_S1_C0_IM) + ub_S1_C2_RE);
ub_S1_C2_IM = u_20_re * b_S1_C0_IM;
ub_S1_C2_IM = ub_S1_C2_IM - (u_20_im * b_S1_C0_RE);
ub_S1_C2_RE = ((u_21_re * b_S1_C1_RE) + ub_S1_C2_RE);
ub_S1_C2_RE = ((u_21_im * b_S1_C1_IM) + ub_S1_C2_RE);
ub_S1_C2_IM = ((u_21_re * b_S1_C1_IM) + ub_S1_C2_IM);
ub_S1_C2_IM = ub_S1_C2_IM - (u_21_im * b_S1_C1_RE);
ub_S1_C2_RE = ((u_22_re * b_S1_C2_RE) + ub_S1_C2_RE);
ub_S1_C2_RE = ((u_22_im * b_S1_C2_IM) + ub_S1_C2_RE);
ub_S1_C2_IM = ((u_22_re * b_S1_C2_IM) + ub_S1_C2_IM);
ub_S1_C2_IM = ub_S1_C2_IM - (u_22_im * b_S1_C2_RE);
out_S1_C0_RE = out_S1_C0_RE - (beta_vec * ub_S1_C0_RE);
out_S1_C0_IM = out_S1_C0_IM - (beta_vec * ub_S1_C0_IM);
out_S1_C1_RE = out_S1_C1_RE - (beta_vec * ub_S1_C1_RE);
out_S1_C1_IM = out_S1_C1_IM - (beta_vec * ub_S1_C1_IM);
out_S1_C2_RE = out_S1_C2_RE - (beta_vec * ub_S1_C2_RE);
out_S1_C2_IM = out_S1_C2_IM - (beta_vec * ub_S1_C2_IM);
out_S3_C0_RE = out_S3_C0_RE - (beta_vec * ub_S1_C0_RE);
out_S3_C0_IM = out_S3_C0_IM - (beta_vec * ub_S1_C0_IM);
out_S3_C1_RE = out_S3_C1_RE - (beta_vec * ub_S1_C1_RE);
out_S3_C1_IM = out_S3_C1_IM - (beta_vec * ub_S1_C1_IM);
out_S3_C2_RE = out_S3_C2_RE - (beta_vec * ub_S1_C2_RE);
out_S3_C2_IM = out_S3_C2_IM - (beta_vec * ub_S1_C2_IM);
}
 if ( accumulate[7] ) { 
double beta_vec = 0.0;
beta_vec = (*(&coeff_t_f));


psi_S0_RE = *(((*tfBase)[0][0][0] + offs[0]));


psi_S0_IM = *(((*tfBase)[0][0][1] + offs[0]));


psi_S1_RE = *(((*tfBase)[0][2][0] + offs[0]));


psi_S1_IM = *(((*tfBase)[0][2][1] + offs[0]));

b_S0_C0_RE = (psi_S0_RE - psi_S1_RE);
b_S0_C0_IM = (psi_S0_IM - psi_S1_IM);

psi_S0_RE = *(((*tfBase)[1][0][0] + offs[0]));


psi_S0_IM = *(((*tfBase)[1][0][1] + offs[0]));


psi_S1_RE = *(((*tfBase)[1][2][0] + offs[0]));


psi_S1_IM = *(((*tfBase)[1][2][1] + offs[0]));

b_S0_C1_RE = (psi_S0_RE - psi_S1_RE);
b_S0_C1_IM = (psi_S0_IM - psi_S1_IM);

psi_S0_RE = *(((*tfBase)[2][0][0] + offs[0]));


psi_S0_IM = *(((*tfBase)[2][0][1] + offs[0]));


psi_S1_RE = *(((*tfBase)[2][2][0] + offs[0]));


psi_S1_IM = *(((*tfBase)[2][2][1] + offs[0]));

b_S0_C2_RE = (psi_S0_RE - psi_S1_RE);
b_S0_C2_IM = (psi_S0_IM - psi_S1_IM);
u_00_re = *((*gBase)[7][0][0][0]);

u_00_im = *((*gBase)[7][0][0][1]);

u_01_re = *((*gBase)[7][0][1][0]);

u_01_im = *((*gBase)[7][0][1][1]);

u_02_re = *((*gBase)[7][0][2][0]);

u_02_im = *((*gBase)[7][0][2][1]);

u_10_re = *((*gBase)[7][1][0][0]);

u_10_im = *((*gBase)[7][1][0][1]);

u_11_re = *((*gBase)[7][1][1][0]);

u_11_im = *((*gBase)[7][1][1][1]);

u_12_re = *((*gBase)[7][1][2][0]);

u_12_im = *((*gBase)[7][1][2][1]);

u_20_re = *((*gBase)[7][2][0][0]);

u_20_im = *((*gBase)[7][2][0][1]);

u_21_re = *((*gBase)[7][2][1][0]);

u_21_im = *((*gBase)[7][2][1][1]);

u_22_re = *((*gBase)[7][2][2][0]);

u_22_im = *((*gBase)[7][2][2][1]);

ub_S0_C0_RE = u_00_re * b_S0_C0_RE;
ub_S0_C0_RE = ub_S0_C0_RE - (u_00_im * b_S0_C0_IM);
ub_S0_C0_IM = u_00_re * b_S0_C0_IM;
ub_S0_C0_IM = ((u_00_im * b_S0_C0_RE) + ub_S0_C0_IM);
ub_S0_C0_RE = ((u_10_re * b_S0_C1_RE) + ub_S0_C0_RE);
ub_S0_C0_RE = ub_S0_C0_RE - (u_10_im * b_S0_C1_IM);
ub_S0_C0_IM = ((u_10_re * b_S0_C1_IM) + ub_S0_C0_IM);
ub_S0_C0_IM = ((u_10_im * b_S0_C1_RE) + ub_S0_C0_IM);
ub_S0_C0_RE = ((u_20_re * b_S0_C2_RE) + ub_S0_C0_RE);
ub_S0_C0_RE = ub_S0_C0_RE - (u_20_im * b_S0_C2_IM);
ub_S0_C0_IM = ((u_20_re * b_S0_C2_IM) + ub_S0_C0_IM);
ub_S0_C0_IM = ((u_20_im * b_S0_C2_RE) + ub_S0_C0_IM);
ub_S0_C1_RE = u_01_re * b_S0_C0_RE;
ub_S0_C1_RE = ub_S0_C1_RE - (u_01_im * b_S0_C0_IM);
ub_S0_C1_IM = u_01_re * b_S0_C0_IM;
ub_S0_C1_IM = ((u_01_im * b_S0_C0_RE) + ub_S0_C1_IM);
ub_S0_C1_RE = ((u_11_re * b_S0_C1_RE) + ub_S0_C1_RE);
ub_S0_C1_RE = ub_S0_C1_RE - (u_11_im * b_S0_C1_IM);
ub_S0_C1_IM = ((u_11_re * b_S0_C1_IM) + ub_S0_C1_IM);
ub_S0_C1_IM = ((u_11_im * b_S0_C1_RE) + ub_S0_C1_IM);
ub_S0_C1_RE = ((u_21_re * b_S0_C2_RE) + ub_S0_C1_RE);
ub_S0_C1_RE = ub_S0_C1_RE - (u_21_im * b_S0_C2_IM);
ub_S0_C1_IM = ((u_21_re * b_S0_C2_IM) + ub_S0_C1_IM);
ub_S0_C1_IM = ((u_21_im * b_S0_C2_RE) + ub_S0_C1_IM);
ub_S0_C2_RE = u_02_re * b_S0_C0_RE;
ub_S0_C2_RE = ub_S0_C2_RE - (u_02_im * b_S0_C0_IM);
ub_S0_C2_IM = u_02_re * b_S0_C0_IM;
ub_S0_C2_IM = ((u_02_im * b_S0_C0_RE) + ub_S0_C2_IM);
ub_S0_C2_RE = ((u_12_re * b_S0_C1_RE) + ub_S0_C2_RE);
ub_S0_C2_RE = ub_S0_C2_RE - (u_12_im * b_S0_C1_IM);
ub_S0_C2_IM = ((u_12_re * b_S0_C1_IM) + ub_S0_C2_IM);
ub_S0_C2_IM = ((u_12_im * b_S0_C1_RE) + ub_S0_C2_IM);
ub_S0_C2_RE = ((u_22_re * b_S0_C2_RE) + ub_S0_C2_RE);
ub_S0_C2_RE = ub_S0_C2_RE - (u_22_im * b_S0_C2_IM);
ub_S0_C2_IM = ((u_22_re * b_S0_C2_IM) + ub_S0_C2_IM);
ub_S0_C2_IM = ((u_22_im * b_S0_C2_RE) + ub_S0_C2_IM);
out_S0_C0_RE = out_S0_C0_RE - (beta_vec * ub_S0_C0_RE);
out_S0_C0_IM = out_S0_C0_IM - (beta_vec * ub_S0_C0_IM);
out_S0_C1_RE = out_S0_C1_RE - (beta_vec * ub_S0_C1_RE);
out_S0_C1_IM = out_S0_C1_IM - (beta_vec * ub_S0_C1_IM);
out_S0_C2_RE = out_S0_C2_RE - (beta_vec * ub_S0_C2_RE);
out_S0_C2_IM = out_S0_C2_IM - (beta_vec * ub_S0_C2_IM);
out_S2_C0_RE = ((beta_vec * ub_S0_C0_RE) + out_S2_C0_RE);
out_S2_C0_IM = ((beta_vec * ub_S0_C0_IM) + out_S2_C0_IM);
out_S2_C1_RE = ((beta_vec * ub_S0_C1_RE) + out_S2_C1_RE);
out_S2_C1_IM = ((beta_vec * ub_S0_C1_IM) + out_S2_C1_IM);
out_S2_C2_RE = ((beta_vec * ub_S0_C2_RE) + out_S2_C2_RE);
out_S2_C2_IM = ((beta_vec * ub_S0_C2_IM) + out_S2_C2_IM);

psi_S0_RE = *(((*tfBase)[0][1][0] + offs[0]));


psi_S0_IM = *(((*tfBase)[0][1][1] + offs[0]));


psi_S1_RE = *(((*tfBase)[0][3][0] + offs[0]));


psi_S1_IM = *(((*tfBase)[0][3][1] + offs[0]));

b_S1_C0_RE = (psi_S0_RE - psi_S1_RE);
b_S1_C0_IM = (psi_S0_IM - psi_S1_IM);

psi_S0_RE = *(((*tfBase)[1][1][0] + offs[0]));


psi_S0_IM = *(((*tfBase)[1][1][1] + offs[0]));


psi_S1_RE = *(((*tfBase)[1][3][0] + offs[0]));


psi_S1_IM = *(((*tfBase)[1][3][1] + offs[0]));

b_S1_C1_RE = (psi_S0_RE - psi_S1_RE);
b_S1_C1_IM = (psi_S0_IM - psi_S1_IM);

psi_S0_RE = *(((*tfBase)[2][1][0] + offs[0]));


psi_S0_IM = *(((*tfBase)[2][1][1] + offs[0]));


psi_S1_RE = *(((*tfBase)[2][3][0] + offs[0]));


psi_S1_IM = *(((*tfBase)[2][3][1] + offs[0]));

b_S1_C2_RE = (psi_S0_RE - psi_S1_RE);
b_S1_C2_IM = (psi_S0_IM - psi_S1_IM);
ub_S1_C0_RE = u_00_re * b_S1_C0_RE;
ub_S1_C0_RE = ub_S1_C0_RE - (u_00_im * b_S1_C0_IM);
ub_S1_C0_IM = u_00_re * b_S1_C0_IM;
ub_S1_C0_IM = ((u_00_im * b_S1_C0_RE) + ub_S1_C0_IM);
ub_S1_C0_RE = ((u_10_re * b_S1_C1_RE) + ub_S1_C0_RE);
ub_S1_C0_RE = ub_S1_C0_RE - (u_10_im * b_S1_C1_IM);
ub_S1_C0_IM = ((u_10_re * b_S1_C1_IM) + ub_S1_C0_IM);
ub_S1_C0_IM = ((u_10_im * b_S1_C1_RE) + ub_S1_C0_IM);
ub_S1_C0_RE = ((u_20_re * b_S1_C2_RE) + ub_S1_C0_RE);
ub_S1_C0_RE = ub_S1_C0_RE - (u_20_im * b_S1_C2_IM);
ub_S1_C0_IM = ((u_20_re * b_S1_C2_IM) + ub_S1_C0_IM);
ub_S1_C0_IM = ((u_20_im * b_S1_C2_RE) + ub_S1_C0_IM);
ub_S1_C1_RE = u_01_re * b_S1_C0_RE;
ub_S1_C1_RE = ub_S1_C1_RE - (u_01_im * b_S1_C0_IM);
ub_S1_C1_IM = u_01_re * b_S1_C0_IM;
ub_S1_C1_IM = ((u_01_im * b_S1_C0_RE) + ub_S1_C1_IM);
ub_S1_C1_RE = ((u_11_re * b_S1_C1_RE) + ub_S1_C1_RE);
ub_S1_C1_RE = ub_S1_C1_RE - (u_11_im * b_S1_C1_IM);
ub_S1_C1_IM = ((u_11_re * b_S1_C1_IM) + ub_S1_C1_IM);
ub_S1_C1_IM = ((u_11_im * b_S1_C1_RE) + ub_S1_C1_IM);
ub_S1_C1_RE = ((u_21_re * b_S1_C2_RE) + ub_S1_C1_RE);
ub_S1_C1_RE = ub_S1_C1_RE - (u_21_im * b_S1_C2_IM);
ub_S1_C1_IM = ((u_21_re * b_S1_C2_IM) + ub_S1_C1_IM);
ub_S1_C1_IM = ((u_21_im * b_S1_C2_RE) + ub_S1_C1_IM);
ub_S1_C2_RE = u_02_re * b_S1_C0_RE;
ub_S1_C2_RE = ub_S1_C2_RE - (u_02_im * b_S1_C0_IM);
ub_S1_C2_IM = u_02_re * b_S1_C0_IM;
ub_S1_C2_IM = ((u_02_im * b_S1_C0_RE) + ub_S1_C2_IM);
ub_S1_C2_RE = ((u_12_re * b_S1_C1_RE) + ub_S1_C2_RE);
ub_S1_C2_RE = ub_S1_C2_RE - (u_12_im * b_S1_C1_IM);
ub_S1_C2_IM = ((u_12_re * b_S1_C1_IM) + ub_S1_C2_IM);
ub_S1_C2_IM = ((u_12_im * b_S1_C1_RE) + ub_S1_C2_IM);
ub_S1_C2_RE = ((u_22_re * b_S1_C2_RE) + ub_S1_C2_RE);
ub_S1_C2_RE = ub_S1_C2_RE - (u_22_im * b_S1_C2_IM);
ub_S1_C2_IM = ((u_22_re * b_S1_C2_IM) + ub_S1_C2_IM);
ub_S1_C2_IM = ((u_22_im * b_S1_C2_RE) + ub_S1_C2_IM);
out_S1_C0_RE = out_S1_C0_RE - (beta_vec * ub_S1_C0_RE);
out_S1_C0_IM = out_S1_C0_IM - (beta_vec * ub_S1_C0_IM);
out_S1_C1_RE = out_S1_C1_RE - (beta_vec * ub_S1_C1_RE);
out_S1_C1_IM = out_S1_C1_IM - (beta_vec * ub_S1_C1_IM);
out_S1_C2_RE = out_S1_C2_RE - (beta_vec * ub_S1_C2_RE);
out_S1_C2_IM = out_S1_C2_IM - (beta_vec * ub_S1_C2_IM);
out_S3_C0_RE = ((beta_vec * ub_S1_C0_RE) + out_S3_C0_RE);
out_S3_C0_IM = ((beta_vec * ub_S1_C0_IM) + out_S3_C0_IM);
out_S3_C1_RE = ((beta_vec * ub_S1_C1_RE) + out_S3_C1_RE);
out_S3_C1_IM = ((beta_vec * ub_S1_C1_IM) + out_S3_C1_IM);
out_S3_C2_RE = ((beta_vec * ub_S1_C2_RE) + out_S3_C2_RE);
out_S3_C2_IM = ((beta_vec * ub_S1_C2_IM) + out_S3_C2_IM);
}
*(((*oBase)[0][0][0] + offs[0])) = out_S0_C0_RE;

*(((*oBase)[0][0][1] + offs[0])) = out_S0_C0_IM;

*(((*oBase)[1][0][0] + offs[0])) = out_S0_C1_RE;

*(((*oBase)[1][0][1] + offs[0])) = out_S0_C1_IM;

*(((*oBase)[2][0][0] + offs[0])) = out_S0_C2_RE;

*(((*oBase)[2][0][1] + offs[0])) = out_S0_C2_IM;

*(((*oBase)[0][1][0] + offs[0])) = out_S1_C0_RE;

*(((*oBase)[0][1][1] + offs[0])) = out_S1_C0_IM;

*(((*oBase)[1][1][0] + offs[0])) = out_S1_C1_RE;

*(((*oBase)[1][1][1] + offs[0])) = out_S1_C1_IM;

*(((*oBase)[2][1][0] + offs[0])) = out_S1_C2_RE;

*(((*oBase)[2][1][1] + offs[0])) = out_S1_C2_IM;

*(((*oBase)[0][2][0] + offs[0])) = out_S2_C0_RE;

*(((*oBase)[0][2][1] + offs[0])) = out_S2_C0_IM;

*(((*oBase)[1][2][0] + offs[0])) = out_S2_C1_RE;

*(((*oBase)[1][2][1] + offs[0])) = out_S2_C1_IM;

*(((*oBase)[2][2][0] + offs[0])) = out_S2_C2_RE;

*(((*oBase)[2][2][1] + offs[0])) = out_S2_C2_IM;

*(((*oBase)[0][3][0] + offs[0])) = out_S3_C0_RE;

*(((*oBase)[0][3][1] + offs[0])) = out_S3_C0_IM;

*(((*oBase)[1][3][0] + offs[0])) = out_S3_C1_RE;

*(((*oBase)[1][3][1] + offs[0])) = out_S3_C1_IM;

*(((*oBase)[2][3][0] + offs[0])) = out_S3_C2_RE;

*(((*oBase)[2][3][1] + offs[0])) = out_S3_C2_IM;


double b_S0_C0_RE = 0.0;
double b_S0_C0_IM = 0.0;
double b_S0_C1_RE = 0.0;
double b_S0_C1_IM = 0.0;
double b_S0_C2_RE = 0.0;
double b_S0_C2_IM = 0.0;
double b_S1_C0_RE = 0.0;
double b_S1_C0_IM = 0.0;
double b_S1_C1_RE = 0.0;
double b_S1_C1_IM = 0.0;
double b_S1_C2_RE = 0.0;
double b_S1_C2_IM = 0.0;
double ub_S0_C0_RE = 0.0;
double ub_S0_C0_IM = 0.0;
double ub_S0_C1_RE = 0.0;
double ub_S0_C1_IM = 0.0;
double ub_S0_C2_RE = 0.0;
double ub_S0_C2_IM = 0.0;
double ub_S1_C0_RE = 0.0;
double ub_S1_C0_IM = 0.0;
double ub_S1_C1_RE = 0.0;
double ub_S1_C1_IM = 0.0;
double ub_S1_C2_RE = 0.0;
double ub_S1_C2_IM = 0.0;
double out_S0_C0_RE = 0.0;
double out_S0_C0_IM = 0.0;
double out_S0_C1_RE = 0.0;
double out_S0_C1_IM = 0.0;
double out_S0_C2_RE = 0.0;
double out_S0_C2_IM = 0.0;
double out_S1_C0_RE = 0.0;
double out_S1_C0_IM = 0.0;
double out_S1_C1_RE = 0.0;
double out_S1_C1_IM = 0.0;
double out_S1_C2_RE = 0.0;
double out_S1_C2_IM = 0.0;
double out_S2_C0_RE = 0.0;
double out_S2_C0_IM = 0.0;
double out_S2_C1_RE = 0.0;
double out_S2_C1_IM = 0.0;
double out_S2_C2_RE = 0.0;
double out_S2_C2_IM = 0.0;
double out_S3_C0_RE = 0.0;
double out_S3_C0_IM = 0.0;
double out_S3_C1_RE = 0.0;
double out_S3_C1_IM = 0.0;
double out_S3_C2_RE = 0.0;
double out_S3_C2_IM = 0.0;
double u_00_re = 0.0;
double u_00_im = 0.0;
double u_01_re = 0.0;
double u_01_im = 0.0;
double u_02_re = 0.0;
double u_02_im = 0.0;
double u_10_re = 0.0;
double u_10_im = 0.0;
double u_11_re = 0.0;
double u_11_im = 0.0;
double u_12_re = 0.0;
double u_12_im = 0.0;
double u_20_re = 0.0;
double u_20_im = 0.0;
double u_21_re = 0.0;
double u_21_im = 0.0;
double u_22_re = 0.0;
double u_22_im = 0.0;
double psi_S0_RE = 0.0;
double psi_S0_IM = 0.0;
double psi_S1_RE = 0.0;
double psi_S1_IM = 0.0;
double tmp_1_re = 0.0;
double tmp_1_im = 0.0;
double tmp_2_re = 0.0;
double tmp_2_im = 0.0;
double tmp_3_re = 0.0;
double tmp_3_im = 0.0;
double tmp_4_re = 0.0;
double tmp_4_im = 0.0;
double zero = 0.0;
zero = 0.0;
double beta_vec = 0.0;
beta_vec = (*(&beta));


out_S0_C0_RE = *(((*oBase)[0][0][0] + offs[0]));


out_S0_C0_IM = *(((*oBase)[0][0][1] + offs[0]));


out_S1_C0_RE = *(((*oBase)[0][1][0] + offs[0]));


out_S1_C0_IM = *(((*oBase)[0][1][1] + offs[0]));


out_S2_C0_RE = *(((*oBase)[0][2][0] + offs[0]));


out_S2_C0_IM = *(((*oBase)[0][2][1] + offs[0]));


out_S3_C0_RE = *(((*oBase)[0][3][0] + offs[0]));


out_S3_C0_IM = *(((*oBase)[0][3][1] + offs[0]));


out_S0_C1_RE = *(((*oBase)[1][0][0] + offs[0]));


out_S0_C1_IM = *(((*oBase)[1][0][1] + offs[0]));


out_S1_C1_RE = *(((*oBase)[1][1][0] + offs[0]));


out_S1_C1_IM = *(((*oBase)[1][1][1] + offs[0]));


out_S2_C1_RE = *(((*oBase)[1][2][0] + offs[0]));


out_S2_C1_IM = *(((*oBase)[1][2][1] + offs[0]));


out_S3_C1_RE = *(((*oBase)[1][3][0] + offs[0]));


out_S3_C1_IM = *(((*oBase)[1][3][1] + offs[0]));


out_S0_C2_RE = *(((*oBase)[2][0][0] + offs[0]));


out_S0_C2_IM = *(((*oBase)[2][0][1] + offs[0]));


out_S1_C2_RE = *(((*oBase)[2][1][0] + offs[0]));


out_S1_C2_IM = *(((*oBase)[2][1][1] + offs[0]));


out_S2_C2_RE = *(((*oBase)[2][2][0] + offs[0]));


out_S2_C2_IM = *(((*oBase)[2][2][1] + offs[0]));


out_S3_C2_RE = *(((*oBase)[2][3][0] + offs[0]));


out_S3_C2_IM = *(((*oBase)[2][3][1] + offs[0]));

b_S0_C0_RE = *(((inbuf)+0));

b_S0_C0_IM = *(((inbuf)+1));

b_S0_C1_RE = *(((inbuf)+2));

b_S0_C1_IM = *(((inbuf)+3));

b_S0_C2_RE = *(((inbuf)+4));

b_S0_C2_IM = *(((inbuf)+5));

b_S1_C0_RE = *(((inbuf)+6));

b_S1_C0_IM = *(((inbuf)+7));

b_S1_C1_RE = *(((inbuf)+8));

b_S1_C1_IM = *(((inbuf)+9));

b_S1_C2_RE = *(((inbuf)+10));

b_S1_C2_IM = *(((inbuf)+11));

u_00_re = *((*gBase)[2][0][0][0]);

u_00_im = *((*gBase)[2][0][0][1]);

u_01_re = *((*gBase)[2][0][1][0]);

u_01_im = *((*gBase)[2][0][1][1]);

u_02_re = *((*gBase)[2][0][2][0]);

u_02_im = *((*gBase)[2][0][2][1]);

u_10_re = *((*gBase)[2][1][0][0]);

u_10_im = *((*gBase)[2][1][0][1]);

u_11_re = *((*gBase)[2][1][1][0]);

u_11_im = *((*gBase)[2][1][1][1]);

u_12_re = *((*gBase)[2][1][2][0]);

u_12_im = *((*gBase)[2][1][2][1]);

u_20_re = *((*gBase)[2][2][0][0]);

u_20_im = *((*gBase)[2][2][0][1]);

u_21_re = *((*gBase)[2][2][1][0]);

u_21_im = *((*gBase)[2][2][1][1]);

u_22_re = *((*gBase)[2][2][2][0]);

u_22_im = *((*gBase)[2][2][2][1]);

ub_S0_C0_RE = u_00_re * b_S0_C0_RE;
ub_S0_C0_RE = ((u_00_im * b_S0_C0_IM) + ub_S0_C0_RE);
ub_S0_C0_IM = u_00_re * b_S0_C0_IM;
ub_S0_C0_IM = ub_S0_C0_IM - (u_00_im * b_S0_C0_RE);
ub_S0_C0_RE = ((u_01_re * b_S0_C1_RE) + ub_S0_C0_RE);
ub_S0_C0_RE = ((u_01_im * b_S0_C1_IM) + ub_S0_C0_RE);
ub_S0_C0_IM = ((u_01_re * b_S0_C1_IM) + ub_S0_C0_IM);
ub_S0_C0_IM = ub_S0_C0_IM - (u_01_im * b_S0_C1_RE);
ub_S0_C0_RE = ((u_02_re * b_S0_C2_RE) + ub_S0_C0_RE);
ub_S0_C0_RE = ((u_02_im * b_S0_C2_IM) + ub_S0_C0_RE);
ub_S0_C0_IM = ((u_02_re * b_S0_C2_IM) + ub_S0_C0_IM);
ub_S0_C0_IM = ub_S0_C0_IM - (u_02_im * b_S0_C2_RE);
ub_S0_C1_RE = u_10_re * b_S0_C0_RE;
ub_S0_C1_RE = ((u_10_im * b_S0_C0_IM) + ub_S0_C1_RE);
ub_S0_C1_IM = u_10_re * b_S0_C0_IM;
ub_S0_C1_IM = ub_S0_C1_IM - (u_10_im * b_S0_C0_RE);
ub_S0_C1_RE = ((u_11_re * b_S0_C1_RE) + ub_S0_C1_RE);
ub_S0_C1_RE = ((u_11_im * b_S0_C1_IM) + ub_S0_C1_RE);
ub_S0_C1_IM = ((u_11_re * b_S0_C1_IM) + ub_S0_C1_IM);
ub_S0_C1_IM = ub_S0_C1_IM - (u_11_im * b_S0_C1_RE);
ub_S0_C1_RE = ((u_12_re * b_S0_C2_RE) + ub_S0_C1_RE);
ub_S0_C1_RE = ((u_12_im * b_S0_C2_IM) + ub_S0_C1_RE);
ub_S0_C1_IM = ((u_12_re * b_S0_C2_IM) + ub_S0_C1_IM);
ub_S0_C1_IM = ub_S0_C1_IM - (u_12_im * b_S0_C2_RE);
ub_S0_C2_RE = u_20_re * b_S0_C0_RE;
ub_S0_C2_RE = ((u_20_im * b_S0_C0_IM) + ub_S0_C2_RE);
ub_S0_C2_IM = u_20_re * b_S0_C0_IM;
ub_S0_C2_IM = ub_S0_C2_IM - (u_20_im * b_S0_C0_RE);
ub_S0_C2_RE = ((u_21_re * b_S0_C1_RE) + ub_S0_C2_RE);
ub_S0_C2_RE = ((u_21_im * b_S0_C1_IM) + ub_S0_C2_RE);
ub_S0_C2_IM = ((u_21_re * b_S0_C1_IM) + ub_S0_C2_IM);
ub_S0_C2_IM = ub_S0_C2_IM - (u_21_im * b_S0_C1_RE);
ub_S0_C2_RE = ((u_22_re * b_S0_C2_RE) + ub_S0_C2_RE);
ub_S0_C2_RE = ((u_22_im * b_S0_C2_IM) + ub_S0_C2_RE);
ub_S0_C2_IM = ((u_22_re * b_S0_C2_IM) + ub_S0_C2_IM);
ub_S0_C2_IM = ub_S0_C2_IM - (u_22_im * b_S0_C2_RE);
ub_S1_C0_RE = u_00_re * b_S1_C0_RE;
ub_S1_C0_RE = ((u_00_im * b_S1_C0_IM) + ub_S1_C0_RE);
ub_S1_C0_IM = u_00_re * b_S1_C0_IM;
ub_S1_C0_IM = ub_S1_C0_IM - (u_00_im * b_S1_C0_RE);
ub_S1_C0_RE = ((u_01_re * b_S1_C1_RE) + ub_S1_C0_RE);
ub_S1_C0_RE = ((u_01_im * b_S1_C1_IM) + ub_S1_C0_RE);
ub_S1_C0_IM = ((u_01_re * b_S1_C1_IM) + ub_S1_C0_IM);
ub_S1_C0_IM = ub_S1_C0_IM - (u_01_im * b_S1_C1_RE);
ub_S1_C0_RE = ((u_02_re * b_S1_C2_RE) + ub_S1_C0_RE);
ub_S1_C0_RE = ((u_02_im * b_S1_C2_IM) + ub_S1_C0_RE);
ub_S1_C0_IM = ((u_02_re * b_S1_C2_IM) + ub_S1_C0_IM);
ub_S1_C0_IM = ub_S1_C0_IM - (u_02_im * b_S1_C2_RE);
ub_S1_C1_RE = u_10_re * b_S1_C0_RE;
ub_S1_C1_RE = ((u_10_im * b_S1_C0_IM) + ub_S1_C1_RE);
ub_S1_C1_IM = u_10_re * b_S1_C0_IM;
ub_S1_C1_IM = ub_S1_C1_IM - (u_10_im * b_S1_C0_RE);
ub_S1_C1_RE = ((u_11_re * b_S1_C1_RE) + ub_S1_C1_RE);
ub_S1_C1_RE = ((u_11_im * b_S1_C1_IM) + ub_S1_C1_RE);
ub_S1_C1_IM = ((u_11_re * b_S1_C1_IM) + ub_S1_C1_IM);
ub_S1_C1_IM = ub_S1_C1_IM - (u_11_im * b_S1_C1_RE);
ub_S1_C1_RE = ((u_12_re * b_S1_C2_RE) + ub_S1_C1_RE);
ub_S1_C1_RE = ((u_12_im * b_S1_C2_IM) + ub_S1_C1_RE);
ub_S1_C1_IM = ((u_12_re * b_S1_C2_IM) + ub_S1_C1_IM);
ub_S1_C1_IM = ub_S1_C1_IM - (u_12_im * b_S1_C2_RE);
ub_S1_C2_RE = u_20_re * b_S1_C0_RE;
ub_S1_C2_RE = ((u_20_im * b_S1_C0_IM) + ub_S1_C2_RE);
ub_S1_C2_IM = u_20_re * b_S1_C0_IM;
ub_S1_C2_IM = ub_S1_C2_IM - (u_20_im * b_S1_C0_RE);
ub_S1_C2_RE = ((u_21_re * b_S1_C1_RE) + ub_S1_C2_RE);
ub_S1_C2_RE = ((u_21_im * b_S1_C1_IM) + ub_S1_C2_RE);
ub_S1_C2_IM = ((u_21_re * b_S1_C1_IM) + ub_S1_C2_IM);
ub_S1_C2_IM = ub_S1_C2_IM - (u_21_im * b_S1_C1_RE);
ub_S1_C2_RE = ((u_22_re * b_S1_C2_RE) + ub_S1_C2_RE);
ub_S1_C2_RE = ((u_22_im * b_S1_C2_IM) + ub_S1_C2_RE);
ub_S1_C2_IM = ((u_22_re * b_S1_C2_IM) + ub_S1_C2_IM);
ub_S1_C2_IM = ub_S1_C2_IM - (u_22_im * b_S1_C2_RE);
out_S0_C0_RE = out_S0_C0_RE - (beta_vec * ub_S0_C0_RE);
out_S0_C0_IM = out_S0_C0_IM - (beta_vec * ub_S0_C0_IM);
out_S0_C1_RE = out_S0_C1_RE - (beta_vec * ub_S0_C1_RE);
out_S0_C1_IM = out_S0_C1_IM - (beta_vec * ub_S0_C1_IM);
out_S0_C2_RE = out_S0_C2_RE - (beta_vec * ub_S0_C2_RE);
out_S0_C2_IM = out_S0_C2_IM - (beta_vec * ub_S0_C2_IM);
out_S3_C0_RE = ((beta_vec * ub_S0_C0_RE) + out_S3_C0_RE);
out_S3_C0_IM = ((beta_vec * ub_S0_C0_IM) + out_S3_C0_IM);
out_S3_C1_RE = ((beta_vec * ub_S0_C1_RE) + out_S3_C1_RE);
out_S3_C1_IM = ((beta_vec * ub_S0_C1_IM) + out_S3_C1_IM);
out_S3_C2_RE = ((beta_vec * ub_S0_C2_RE) + out_S3_C2_RE);
out_S3_C2_IM = ((beta_vec * ub_S0_C2_IM) + out_S3_C2_IM);
out_S1_C0_RE = out_S1_C0_RE - (beta_vec * ub_S1_C0_RE);
out_S1_C0_IM = out_S1_C0_IM - (beta_vec * ub_S1_C0_IM);
out_S1_C1_RE = out_S1_C1_RE - (beta_vec * ub_S1_C1_RE);
out_S1_C1_IM = out_S1_C1_IM - (beta_vec * ub_S1_C1_IM);
out_S1_C2_RE = out_S1_C2_RE - (beta_vec * ub_S1_C2_RE);
out_S1_C2_IM = out_S1_C2_IM - (beta_vec * ub_S1_C2_IM);
out_S2_C0_RE = out_S2_C0_RE - (beta_vec * ub_S1_C0_RE);
out_S2_C0_IM = out_S2_C0_IM - (beta_vec * ub_S1_C0_IM);
out_S2_C1_RE = out_S2_C1_RE - (beta_vec * ub_S1_C1_RE);
out_S2_C1_IM = out_S2_C1_IM - (beta_vec * ub_S1_C1_IM);
out_S2_C2_RE = out_S2_C2_RE - (beta_vec * ub_S1_C2_RE);
out_S2_C2_IM = out_S2_C2_IM - (beta_vec * ub_S1_C2_IM);
*(((*oBase)[0][0][0] + offs[0])) = out_S0_C0_RE;

*(((*oBase)[0][0][1] + offs[0])) = out_S0_C0_IM;

*(((*oBase)[1][0][0] + offs[0])) = out_S0_C1_RE;

*(((*oBase)[1][0][1] + offs[0])) = out_S0_C1_IM;

*(((*oBase)[2][0][0] + offs[0])) = out_S0_C2_RE;

*(((*oBase)[2][0][1] + offs[0])) = out_S0_C2_IM;

*(((*oBase)[0][1][0] + offs[0])) = out_S1_C0_RE;

*(((*oBase)[0][1][1] + offs[0])) = out_S1_C0_IM;

*(((*oBase)[1][1][0] + offs[0])) = out_S1_C1_RE;

*(((*oBase)[1][1][1] + offs[0])) = out_S1_C1_IM;

*(((*oBase)[2][1][0] + offs[0])) = out_S1_C2_RE;

*(((*oBase)[2][1][1] + offs[0])) = out_S1_C2_IM;

*(((*oBase)[0][2][0] + offs[0])) = out_S2_C0_RE;

*(((*oBase)[0][2][1] + offs[0])) = out_S2_C0_IM;

*(((*oBase)[1][2][0] + offs[0])) = out_S2_C1_RE;

*(((*oBase)[1][2][1] + offs[0])) = out_S2_C1_IM;

*(((*oBase)[2][2][0] + offs[0])) = out_S2_C2_RE;

*(((*oBase)[2][2][1] + offs[0])) = out_S2_C2_IM;

*(((*oBase)[0][3][0] + offs[0])) = out_S3_C0_RE;

*(((*oBase)[0][3][1] + offs[0])) = out_S3_C0_IM;

*(((*oBase)[1][3][0] + offs[0])) = out_S3_C1_RE;

*(((*oBase)[1][3][1] + offs[0])) = out_S3_C1_IM;

*(((*oBase)[2][3][0] + offs[0])) = out_S3_C2_RE;

*(((*oBase)[2][3][1] + offs[0])) = out_S3_C2_IM;


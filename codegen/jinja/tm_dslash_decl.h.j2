{% include "spec_common.h.j2" %}

namespace QPhiX {

{% for isign in ['plus', 'minus'] %}
template <typename FT, int veclen, int soalen, bool compress12, bool tbc_x = false, bool tbc_y = false, bool tbc_z = false, bool tbc_t = false>
void tm_dslash_{{ isign }}_vec(
    const typename Types<FT, veclen, soalen, compress12>::FourSpinorBlock
        *xyBase,
    const typename Types<FT, veclen, soalen, compress12>::FourSpinorBlock
        *zbBase,
    const typename Types<FT, veclen, soalen, compress12>::FourSpinorBlock
        *zfBase,
    const typename Types<FT, veclen, soalen, compress12>::FourSpinorBlock
        *tbBase,
    const typename Types<FT, veclen, soalen, compress12>::FourSpinorBlock
        *tfBase,
    typename Types<FT, veclen, soalen, compress12>::FourSpinorBlock *oBase,
    const typename Types<FT, veclen, soalen, compress12>::SU3MatrixBlock
        *gBase,
    const int xbOffs[veclen],
    const int xfOffs[veclen],
    const int ybOffs[veclen],
    const int yfOffs[veclen],
    const int offs[veclen],
    const int gOffs[veclen],
    const int siprefdist1,
    const int siprefdist2,
    const int siprefdist3,
    const int siprefdist4,
    const int gprefdist,
    const int pfyOffs[veclen],
    const typename Types<FT, veclen, soalen, compress12>::FourSpinorBlock
        *pfBase2,
    const typename Types<FT, veclen, soalen, compress12>::FourSpinorBlock
        *pfBase3,
    const typename Types<FT, veclen, soalen, compress12>::FourSpinorBlock
        *pfBase4,
    const unsigned int accumulate[8],
    const FT coeff_s,
    const FT coeff_t_f,
    const FT coeff_t_b,
    const FT tbc_phases[4][2],
    const FT mu,
    const FT muinv);

template <typename FT, int veclen, int soalen, bool compress12, bool tbc_x = false, bool tbc_y = false, bool tbc_z = false, bool tbc_t = false>
void tm_dslash_achimbdpsi_{{ isign }}_vec(
    const typename Types<FT, veclen, soalen, compress12>::FourSpinorBlock
        *xyBase,
    const typename Types<FT, veclen, soalen, compress12>::FourSpinorBlock
        *zbBase,
    const typename Types<FT, veclen, soalen, compress12>::FourSpinorBlock
        *zfBase,
    const typename Types<FT, veclen, soalen, compress12>::FourSpinorBlock
        *tbBase,
    const typename Types<FT, veclen, soalen, compress12>::FourSpinorBlock
        *tfBase,
    const typename Types<FT, veclen, soalen, compress12>::FourSpinorBlock
        *chiBase,
    typename Types<FT, veclen, soalen, compress12>::FourSpinorBlock *oBase,
    const typename Types<FT, veclen, soalen, compress12>::SU3MatrixBlock
        *gBase,
    const int xbOffs[veclen],
    const int xfOffs[veclen],
    const int ybOffs[veclen],
    const int yfOffs[veclen],
    const int offs[veclen],
    const int gOffs[veclen],
    const int siprefdist1,
    const int siprefdist2,
    const int siprefdist3,
    const int siprefdist4,
    const int chiprefdist,
    const int gprefdist,
    const int pfyOffs[veclen],
    const typename Types<FT, veclen, soalen, compress12>::FourSpinorBlock
        *pfBase2,
    const typename Types<FT, veclen, soalen, compress12>::FourSpinorBlock
        *pfBase3,
    const typename Types<FT, veclen, soalen, compress12>::FourSpinorBlock
        *pfBase4,
    const typename Types<FT, veclen, soalen, compress12>::FourSpinorBlock
        *pfBaseChi,
    const FT alpha,
    const FT coeff_s,
    const FT coeff_t_f,
    const FT coeff_t_b,
    const FT tbc_phases[4][2],
    const FT mu,
    const unsigned int accumulate[8]);

template <typename FT, int veclen, int soalen, bool compress12, bool tbc = false>
void tm_face_finish_dir_{{ isign }}(
    const FT *inbuf,
    const typename Types<FT, veclen, soalen, compress12>::SU3MatrixBlock
        *gBase,
    typename Types<FT, veclen, soalen, compress12>::FourSpinorBlock *oBase,
    const int gOffs[veclen],
    const int offs[veclen],
    const int hsprefdist,
    const int gprefdist,
    const int soprefdist,
    const FT beta,
    const FT mu,
    const FT muinv,
    unsigned int mask,
    int dir,
    const FT tbc_phases[4][2]);
{% endfor %}

}
